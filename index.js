/*! For license information please see index.js.LICENSE.txt */
(()=>{var e={2948:(e,t,n)=>{var a=n(2140),r=n(9980),s=n(1730),i=n(7405),o=n(4026),u=n(865),l=n(8721);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},2140:function(e,t,n){var a;!function(e,r,s){function i(e){var t,n=this,a=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.alea=u}(0,e=n.nmd(e),n.amdD)},865:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.tychei=u}(0,e=n.nmd(e),n.amdD)},9980:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xor128=u}(0,e=n.nmd(e),n.amdD)},4026:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,i,o=[],u=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,u=Math.max(u,t.length)),r=0,s=-32;s<u;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(i=i+1640531527|0,r=0==(n=o[127&s]^=a+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},7405:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},1730:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},8721:(e,t,n)=>{var a;!function(r,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),p=2*c,d=255;function h(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),a),h=new f(a),x=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),r),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,i=a.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[s=d&s+e[r%n]+(t=i[r])],i[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,i=a.S;e--;)t=i[r=d&r+1],n=n*u+i[d&(i[r]=i[s=d&s+t])+(i[s]=t)];return a.i=r,a.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(e){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),r),e.exports){e.exports=h;try{i=n(914)}catch(e){}}else void 0===(a=function(){return h}.call(t,n,t,e))||(e.exports=a)}([],Math)},8349:(e,t,n)=>{var a,r=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return R.buffer!=O&&Q(R.buffer),M}function r(){return R.buffer!=O&&Q(R.buffer),L}function s(){return R.buffer!=O&&Q(R.buffer),z}function i(){return R.buffer!=O&&Q(R.buffer),P}function o(){return R.buffer!=O&&Q(R.buffer),B}var u,l,c=void 0!==(e=e||{})?e:{};c.ready=new Promise((function(e,t){u=e,l=t}));var p,d={};for(p in c)c.hasOwnProperty(p)&&(d[p]=c[p]);var h=[],f=function(e,t){throw t},m=!1,g=!1,y=!1,b=!1;m="object"==typeof window,g="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=!m&&!y&&!g;var x=c.ENVIRONMENT_IS_PTHREAD||!1;x&&(O=c.buffer);var w,v,k,I,N,S="";function T(e){return c.locateFile?c.locateFile(e,S):S+e}if(y){var C;S=g?n(2980).dirname(S)+"/":"//",w=function(e,t){return I||(I=n(7256)),N||(N=n(2980)),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof hn))throw e})),process.on("unhandledRejection",be),f=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{C=n(7958)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else b?("undefined"!=typeof read&&(w=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?h=scriptArgs:void 0!==arguments&&(h=arguments),"function"==typeof quit&&(f=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(m||g)&&(g?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),void 0!==a&&a&&(S=a),S=0!==S.indexOf("blob:")?S.substr(0,S.lastIndexOf("/")+1):"",y?(w=function(e,t){return I||(I=n(7256)),N||(N=n(2980)),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},g&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=function(){200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)}));y&&"undefined"==typeof performance&&(n.g.performance=n(4862).performance);var $,E=c.print||console.log.bind(console),A=c.printErr||console.warn.bind(console);for(p in d)d.hasOwnProperty(p)&&(c[p]=d[p]);function _(e){_.shown||(_.shown={}),_.shown[e]||(_.shown[e]=1,A(e))}d=null,c.arguments&&(h=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(f=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&($=c.wasmBinary);var R,F,D=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&be("no native wasm support detected");var O,M,L,z,P,B,W=!1;function V(e,t){e||be("Assertion failed: "+t)}function U(e){var t=c["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function G(e,t,n,a,r){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);X(e,t=un(n),n)}return t},array:function(e){var t=un(e.length);return Z(e,t),t}},i=U(e),o=[],u=0;if(a)for(var l=0;l<a.length;l++){var c=s[n[l]];c?(0===u&&(u=sn()),o[l]=c(a[l])):o[l]=a[l]}var p=i.apply(null,o);return p=function(e){return"string"===t?q(e):"boolean"===t?Boolean(e):e}(p),0!==u&&on(u),p}function H(e,t,n,a){var r=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&r&&!a?U(e):function(){return G(e,t,n,arguments)}}function j(e,t,n){for(var a=t+n,r="";!(t>=a);){var s=e[t++];if(!s)return r;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)r+=String.fromCharCode(s);else{var u=s-65536;r+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else r+=String.fromCharCode((31&s)<<6|i)}else r+=String.fromCharCode(s)}return r}function q(e,t){return e?j(r(),e,t):""}function K(e,t,n,a){if(!(a>0))return 0;for(var r=n,s=n+a-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-r}function X(e,t,n){return K(e,r(),t,n)}function Y(e){for(var t=0,n=0;n<e.length;++n){var a=e.charCodeAt(n);a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++n)),a<=127?++t:t+=a<=2047?2:a<=65535?3:4}return t}function Z(e,n){t().set(e,n)}function J(e,t){return e%t>0&&(e+=t-e%t),e}function Q(e){O=e,c.HEAP8=M=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=L=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=P=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=B=new Float64Array(e)}var ee,te=c.INITIAL_MEMORY||16777216;if(x)R=c.wasmMemory,O=c.buffer;else if(c.wasmMemory)R=c.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:te/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");R&&(O=R.buffer),te=O.byteLength,Q(O);var ne=[],ae=[],re=[],se=[],ie=[];function oe(){if(!x){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)pe(c.preRun.shift());Ae(ne)}}function ue(){x||Ae(ae)}function le(){x||Ae(re)}function ce(){if(!x){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)de(c.postRun.shift());Ae(ie)}}function pe(e){ne.unshift(e)}function de(e){ie.unshift(e)}x||ae.push({func:function(){Gt()}});var he=0,fe=null,me=null;function ge(e){V(!x,"addRunDependency cannot be used in a pthread worker"),he++,c.monitorRunDependencies&&c.monitorRunDependencies(he)}function ye(e){if(he--,c.monitorRunDependencies&&c.monitorRunDependencies(he),0==he&&(null!==fe&&(clearInterval(fe),fe=null),me)){var t=me;me=null,t()}}function be(e){c.onAbort&&c.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),A(e+=""),W=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function xe(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}c.preloadedImages={},c.preloadedAudios={};var we="data:application/octet-stream;base64,";function ve(e){return xe(e,we)}var ke="file://";function Ie(e){return xe(e,ke)}var Ne="tfjs-backend-wasm-threaded-simd.wasm";function Se(e){try{if(e==Ne&&$)return new Uint8Array($);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){be(e)}}function Te(){if(!$&&(m||g)){if("function"==typeof fetch&&!Ie(Ne))return fetch(Ne,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ne+"'";return e.arrayBuffer()})).catch((function(){return Se(Ne)}));if(v)return new Promise((function(e,t){v(Ne,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Se(Ne)}))}function Ce(){var e={a:Ut};function t(e,t){var n=e.exports;if(c.asm=n,ee=c.asm.I,F=t,!x){var a=Le.unusedWorkers.length;Le.unusedWorkers.forEach((function(e){Le.loadWasmModuleToWorker(e,(function(){--a||ye()}))}))}}function n(e){t(e.instance,e.module)}function a(t){return Te().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){A("failed to asynchronously prepare wasm: "+e),be(e)}))}if(x||ge(),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return A("Module.instantiateWasm callback failed with error: "+e),!1}return($||"function"!=typeof WebAssembly.instantiateStreaming||ve(Ne)||Ie(Ne)||"function"!=typeof fetch?a(n):fetch(Ne,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(l),{}}ve(Ne)||(Ne=T(Ne));var $e={10520:function(){throw"Canceled!"},10538:function(e,t){setTimeout((function(){en(e,t)}),0)}};function Ee(){Le.initRuntime()}function Ae(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ee.get(n)():ee.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}var _e={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Re(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var a=Atomics.load(s(),dn>>2),r=0;if(a==e&&Atomics.compareExchange(s(),dn>>2,a,0)==a&&(r=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+r;throw"Atomics.notify returned an unexpected value "+i}function Fe(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Le.pthreads[e];t.worker.terminate(),Le.freeThreadData(t),Le.runningWorkers.splice(Le.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function De(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Le.pthreads[e].worker.postMessage({cmd:"cancel"})}function Oe(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Le.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Le.returnWorkerToPool(n)}}c._emscripten_futex_wake=Re;var Me,Le={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)Le.allocateUnusedWorker()},initRuntime:function(){for(var e=Ht(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var a=Ht(512);for(t=0;t<128;++t)i()[a/4+t]=0;Atomics.store(i(),e+100>>2,a),Atomics.store(i(),e+40>>2,e),rn(e,!g,1),Jt(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Le.threadExitHandlers.length>0;)Le.threadExitHandlers.pop()();x&&Xt()&&Yt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Le.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),Re(e+0,2147483647),rn(0,0,0)},threadExit:function(e){var t=Xt();t&&(Le.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Le.runExitHandlersAndDeinitThread(Xt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Le.pthreads)(a=Le.pthreads[e])&&a.worker&&Le.returnWorkerToPool(a.worker);Le.pthreads={};for(var t=0;t<Le.unusedWorkers.length;++t)(n=Le.unusedWorkers[t]).terminate();for(Le.unusedWorkers=[],t=0;t<Le.runningWorkers.length;++t){var n,a=(n=Le.runningWorkers[t]).pthread;Le.freeThreadData(a),n.terminate()}Le.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,jt(t),jt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&jt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Le.runWithoutMainThreadQueuedCalls((function(){delete Le.pthreads[e.pthread.threadInfoStruct],Le.unusedWorkers.push(e),Le.runningWorkers.splice(Le.runningWorkers.indexOf(e),1),Le.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[pn>>2]=0;try{e()}finally{s()[pn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var a=n.data,r=a.cmd;if(e.pthread&&(Le.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),a.targetThread&&a.targetThread!=Xt()){var s=Le.pthreads[a.targetThread];return s?s.worker.postMessage(n.data,a.transferList):console.error('Internal error! Worker sent a message "'+r+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(Le.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===r)Zt();else if("spawnThread"===r)Dt(n.data);else if("cleanupThread"===r)Oe(a.thread);else if("killThread"===r)Fe(a.thread);else if("cancelThread"===r)De(a.thread);else if("loaded"===r)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===r)E("Thread "+a.threadId+": "+a.text);else if("printErr"===r)A("Thread "+a.threadId+": "+a.text);else if("alert"===r)alert("Thread "+a.threadId+": "+a.text);else if("exit"===r)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Le.returnWorkerToPool(e);else if("exitProcess"===r)try{mn(a.returnCode)}catch(n){if(n instanceof hn)return;throw n}else"cancelDone"===r?Le.returnWorkerToPool(e):"objectTransfer"===r?Le.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):A("worker sent an unknown command "+r);Le.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){A("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},y&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||a,wasmMemory:R,wasmModule:F})},allocateUnusedWorker:function(){var e=T("tfjs-backend-wasm-threaded-simd.worker.js");Le.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Le.unusedWorkers.length&&(Le.allocateUnusedWorker(),Le.loadWasmModuleToWorker(Le.unusedWorkers[0])),Le.unusedWorkers.length>0?Le.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function ze(e,t){ln(e,t),on(e)}function Pe(){return D}function Be(e,t){return ee.get(e)(t)}function We(e,t,n,a){be("Assertion failed: "+q(e)+", at: "+[t?q(t):"unknown filename",n,a?q(a):"unknown function"])}function Ve(e,t){_main(e,t)}function Ue(e){return s()[qt()>>2]=e,e}function Ge(e,t){if(x)return Je(1,1,e,t)}function He(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Le.pthreads[e],a=n&&n.worker;if(!a)return;a.postMessage({cmd:"processThreadQueue"})}return 1}function je(){be()}function qe(e,t,n){var a=tt(t,n);return $e[e].apply(null,a)}function Ke(e,t){}function Xe(e,n,a){if(e<=0||e>t().length||!0&e)return-28;if(m){if(Atomics.load(s(),e>>2)!=n)return-6;var r=performance.now(),i=r+a;for(Atomics.exchange(s(),dn>>2,e);;){if((r=performance.now())>i)return Atomics.exchange(s(),dn>>2,0),-73;if(0==Atomics.exchange(s(),dn>>2,0))break;if(Zt(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),dn>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,a);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Ye(e,t,n){r().copyWithin(e,t,t+n)}function Ze(){return y?n(2578).cpus().length:navigator.hardwareConcurrency}function Je(e,t){for(var n=arguments.length-2,a=sn(),r=n,s=un(8*r),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=nn(e,r,s,t);return on(a),c}c.establishStackSpace=ze,c.getNoExitRuntime=Pe,c.invokeEntryPoint=Be,Me=y?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var Qe=[],et=[];function tt(e,t){var n;for(et.length=0,t>>=2;n=r()[e++];){var a=n<105;a&&1&t&&t++,et.push(a?o()[t++>>1]:s()[t]),++t}return et}function nt(e,t,n){Qe.length=t;for(var a=n>>3,r=0;r<t;r++)Qe[r]=o()[a+r];return(e<0?$e[-e-1]:Vt[e]).apply(null,Qe)}function at(){return r().length}function rt(e){try{return R.grow(e-O.byteLength+65535>>>16),Q(R.buffer),1}catch(e){}}function st(e){var t=at();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var a=1;a<=4;a*=2){var r=t*(1+.2/a);if(r=Math.min(r,e+100663296),rt(Math.min(n,J(Math.max(e,r),65536))))return!0}return!1}var it={inEventHandler:0,removeAllEventListeners:function(){for(var e=it.eventHandlers.length-1;e>=0;--e)it._removeHandler(e);it.eventHandlers=[],it.deferredCalls=[]},registerRemoveEventListeners:function(){it.removeEventListenersRegistered||(se.push(it.removeAllEventListeners),it.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function a(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var r in it.deferredCalls){var s=it.deferredCalls[r];if(s.targetFunction==e&&a(s.argsList,n))return}it.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),it.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<it.deferredCalls.length;++t)it.deferredCalls[t].targetFunction==e&&(it.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return it.inEventHandler&&it.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(it.canPerformEventHandlerRequests())for(var e=0;e<it.deferredCalls.length;++e){var t=it.deferredCalls[e];it.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<it.eventHandlers.length;++n)it.eventHandlers[n].target!=e||t&&t!=it.eventHandlers[n].eventTypeString||it._removeHandler(n--)},_removeHandler:function(e){var t=it.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),it.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++it.inEventHandler,it.currentEventHandler=e,it.runDeferredCalls(),e.handlerFunc(t),it.runDeferredCalls(),--it.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),it.eventHandlers.push(e),it.registerRemoveEventListeners();else for(var n=0;n<it.eventHandlers.length;++n)it.eventHandlers[n].target==e.target&&it.eventHandlers[n].eventTypeString==e.eventTypeString&&it._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,a,r){var i=sn(),o=un(12);s()[o>>2]=n,s()[o+4>>2]=a,s()[o+8>>2]=r,an(0,e,637534208,t,a,o),on(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Le.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function ot(e){var t=Y(e)+1,n=Ht(t);return X(e,n,t),n}function ut(e,t,n,a){var r=sn(),i=un(12),o=0;t&&(o=ot(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=a,an(0,e,657457152,0,o,i),on(r)}function lt(e,t,n,a){ut(e,t=t?q(t):"",n,a)}function ct(e){return e>2?q(e):e}var pt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function dt(e){return e=ct(e),pt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ht(e){return dt(e)}function ft(e,t,n){var a=ht(e);if(!a)return-4;if(a.canvasSharedPtr&&(s()[a.canvasSharedPtr>>2]=t,s()[a.canvasSharedPtr+4>>2]=n),!a.offscreenCanvas&&a.controlTransferredOffscreen)return a.canvasSharedPtr?(lt(s()[a.canvasSharedPtr+8>>2],e,t,n),1):-4;a.offscreenCanvas&&(a=a.offscreenCanvas);var r=!1;if(a.GLctxObject&&a.GLctxObject.GLctx){var i=a.GLctxObject.GLctx.getParameter(2978);r=0===i[0]&&0===i[1]&&i[2]===a.width&&i[3]===a.height}return a.width=t,a.height=n,r&&a.GLctxObject.GLctx.viewport(0,0,t,n),0}function mt(e,t,n){return x?Je(2,1,e,t,n):ft(e,t,n)}function gt(e,t,n){return ht(e)?ft(e,t,n):mt(e,t,n)}function yt(e){}function bt(e,t){}function xt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,a,r){t.drawArraysInstancedANGLE(e,n,a,r)},e.drawElementsInstanced=function(e,n,a,r,s){t.drawElementsInstancedANGLE(e,n,a,r,s)},1}function wt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function vt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function kt(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var It={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){It.lastError||(It.lastError=e)},getNewId:function(e){for(var t=It.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,a){for(var r="",i=0;i<t;++i){var o=a?s()[a+4*i>>2]:-1;r+=q(s()[n+4*i>>2],o<0?void 0:o)}return r},createContext:function(e,t){var n=e.getContext("webgl",t);return n?It.registerContext(n,t):0},registerContext:function(e,t){var n=Ht(8);s()[n+4>>2]=Xt();var a={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=a),It.contexts[n]=a,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&It.initExtensions(a),n},makeContextCurrent:function(e){return It.currentContext=It.contexts[e],c.ctx=Ct=It.currentContext&&It.currentContext.GLctx,!(e&&!Ct)},getContext:function(e){return It.contexts[e]},deleteContext:function(e){It.currentContext===It.contexts[e]&&(It.currentContext=null),"object"==typeof it&&it.removeAllHandlersOnTarget(It.contexts[e].GLctx.canvas),It.contexts[e]&&It.contexts[e].GLctx.canvas&&(It.contexts[e].GLctx.canvas.GLctxObject=void 0),jt(It.contexts[e].handle),It.contexts[e]=null},initExtensions:function(e){if(e||(e=It.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;xt(t),wt(t),vt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),kt(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=It.programs[e],n=It.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},a=n.uniforms,r=Ct.getProgramParameter(t,35718),s=0;s<r;++s){var i=Ct.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Ct.getUniformLocation(t,o);if(u){var l=It.getNewId(It.uniforms);a[o]=[i.size,l],It.uniforms[l]=u;for(var c=1;c<i.size;++c){var p=o+"["+c+"]";u=Ct.getUniformLocation(t,p),l=It.getNewId(It.uniforms),It.uniforms[l]=u}}}}},Nt=["default","low-power","high-performance"];function St(e,t){var n=t>>2,a=s()[n+6],r={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:Nt[a],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=ht(e);return i?r.explicitSwapControl?0:It.createContext(i,r):0}function Tt(e,t){return St(e,t)}var Ct,$t={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=$t.buffers[e];0===t||10===t?((1===e?E:A)(j(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return $t.varargs+=4,s()[$t.varargs-4>>2]},getStr:function(e){return q(e)},get64:function(e,t){return e}};function Et(e){return x?Je(3,1,e):0}function At(e,t,n,a,r){if(x)return Je(4,1,e,t,n,a,r)}function _t(e,t,n,a){if(x)return Je(5,1,e,t,n,a);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)$t.printChar(e,r()[u+c]);i+=l}return s()[a>>2]=i,0}function Rt(e){var t=Le.threadExitHandlers.pop();e&&t()}function Ft(e,t){Le.threadExitHandlers.push((function(){ee.get(e)(t)}))}function Dt(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Le.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Le.runningWorkers.push(t);for(var n=Ht(512),a=0;a<128;++a)s()[n+4*a>>2]=0;var r=e.stackBase+e.stackSize,o=Le.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,r),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,r),Atomics.store(i(),u+29,e.detached);var l=Kt()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Ot(e,t,n,a){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return A("pthread_create called with a null thread pointer!"),28;var r=[];if(x&&0===r.length)return tn(687865856,e,t,n,a);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=cn(16,o):V((u-=o)>0);for(var p=Ht(228),d=0;d<57;++d)i()[(p>>2)+d]=0;s()[e>>2]=p,s()[p+12>>2]=p;var h=p+152;s()[h>>2]=h;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:p,arg:a,transferList:r};return x?(f.cmd="spawnThread",postMessage(f,r)):Dt(f),0}function Mt(){if(x){var e=Xt();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Lt(){y||g||_("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function zt(e,t,n){if(!e)return A("pthread_join attempted on a null thread pointer!"),_e.ESRCH;if(x&&Xt()==e)return A("PThread "+e+" is attempting to join to itself!"),_e.EDEADLK;if(!x&&Qt()==e)return A("Main thread "+e+" is attempting to join to itself!"),_e.EDEADLK;if(s()[e+12>>2]!==e)return A("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),_e.ESRCH;if(Atomics.load(i(),e+64>>2))return A("Attempted to join thread "+e+", which was already detached!"),_e.EINVAL;for(n&&Lt();;){var a=Atomics.load(i(),e+0>>2);if(1==a){var r=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=r),Atomics.store(i(),e+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:e}):Oe(e),0}if(!n)return _e.EBUSY;Mt(),x||Zt(),Xe(e+0,a,x?100:1)}}function Pt(e,t){return zt(e,t,!0)}function Bt(e){if(x)return Je(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ue(28),-1}x||Le.initMainThreadBlock();var Wt,Vt=[null,Ge,mt,Et,At,_t,Bt],Ut={e:We,r:Ve,x:He,b:je,y:qe,j:Ke,d:Xe,c:Re,f:Me,p:Ye,A:Ze,u:nt,q:st,v:gt,i:yt,s:bt,w:Tt,l:Et,n:At,g:_t,o:Ee,a:R||c.wasmMemory,z:Rt,k:Ft,h:Ot,m:Pt,t:Bt},Gt=(Ce(),c.___wasm_call_ctors=function(){return(Gt=c.___wasm_call_ctors=c.asm.B).apply(null,arguments)}),Ht=(c._init=function(){return(c._init=c.asm.C).apply(null,arguments)},c._init_with_threads_count=function(){return(c._init_with_threads_count=c.asm.D).apply(null,arguments)},c._get_threads_count=function(){return(c._get_threads_count=c.asm.E).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.F).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.G).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.H).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.J).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.K).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.L).apply(null,arguments)},c._All=function(){return(c._All=c.asm.M).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.N).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.O).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.P).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.Q).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.R).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.S).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.T).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.U).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.V).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.W).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.X).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.Y).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.Z).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm._).apply(null,arguments)},c._Elu=function(){return(c._Elu=c.asm.$).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.aa).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.ba).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.ca).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.da).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.ea).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.fa).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ga).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.ha).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.ia).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.ja).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.ka).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.la).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ma).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.na).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.oa).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.pa).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.qa).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.ra).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.sa).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.ta).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.ua).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.va).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.wa).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.xa).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ya).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.za).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.Aa).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.Ba).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.Ca).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.Da).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.Ea).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Fa).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ga).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Ha).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Ia).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Ja).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Ka).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.La).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ma).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Na).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Oa).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Pa).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Qa).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Ra).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Sa).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Ta).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Ua).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Va).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Wa).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Xa).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Ya).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Za).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm._a).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.$a).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.ab).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.bb).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.cb).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.db).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.eb).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.fb).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.gb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.hb).apply(null,arguments)},c._malloc=function(){return(Ht=c._malloc=c.asm.ib).apply(null,arguments)}),jt=c._free=function(){return(jt=c._free=c.asm.jb).apply(null,arguments)},qt=c.___errno_location=function(){return(qt=c.___errno_location=c.asm.kb).apply(null,arguments)},Kt=c._emscripten_get_global_libc=function(){return(Kt=c._emscripten_get_global_libc=c.asm.lb).apply(null,arguments)},Xt=c._pthread_self=function(){return(Xt=c._pthread_self=c.asm.mb).apply(null,arguments)},Yt=c.___pthread_tsd_run_dtors=function(){return(Yt=c.___pthread_tsd_run_dtors=c.asm.nb).apply(null,arguments)},Zt=c._emscripten_main_thread_process_queued_calls=function(){return(Zt=c._emscripten_main_thread_process_queued_calls=c.asm.ob).apply(null,arguments)},Jt=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.pb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(Jt=c._emscripten_register_main_browser_thread_id=c.asm.qb).apply(null,arguments)}),Qt=c._emscripten_main_browser_thread_id=function(){return(Qt=c._emscripten_main_browser_thread_id=c.asm.rb).apply(null,arguments)},en=c.__emscripten_do_dispatch_to_thread=function(){return(en=c.__emscripten_do_dispatch_to_thread=c.asm.sb).apply(null,arguments)},tn=c._emscripten_sync_run_in_main_thread_4=function(){return(tn=c._emscripten_sync_run_in_main_thread_4=c.asm.tb).apply(null,arguments)},nn=c._emscripten_run_in_main_runtime_thread_js=function(){return(nn=c._emscripten_run_in_main_runtime_thread_js=c.asm.ub).apply(null,arguments)},an=c.__emscripten_call_on_thread=function(){return(an=c.__emscripten_call_on_thread=c.asm.vb).apply(null,arguments)},rn=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.wb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(rn=c.__emscripten_thread_init=c.asm.xb).apply(null,arguments)}),sn=c.stackSave=function(){return(sn=c.stackSave=c.asm.yb).apply(null,arguments)},on=c.stackRestore=function(){return(on=c.stackRestore=c.asm.zb).apply(null,arguments)},un=c.stackAlloc=function(){return(un=c.stackAlloc=c.asm.Ab).apply(null,arguments)},ln=c._emscripten_stack_set_limits=function(){return(ln=c._emscripten_stack_set_limits=c.asm.Bb).apply(null,arguments)},cn=c._memalign=function(){return(cn=c._memalign=c.asm.Cb).apply(null,arguments)},pn=c.__emscripten_allow_main_runtime_queued_calls=10512,dn=c.__emscripten_main_thread_futex=12148;function hn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function fn(e){if(e=e||h,!(he>0)){if(x)return u(c),ue(),void postMessage({cmd:"loaded"});oe(),he>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){Wt||(Wt=!0,c.calledRun=!0,W||(ue(),le(),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),ce()))}}function mn(e,t){if(!t||!D||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new hn(e);D||(Le.terminateAllThreads(),c.onExit&&c.onExit(e),W=!0),f(e,new hn(e))}}if(c.cwrap=H,c.PThread=Le,c.PThread=Le,c.wasmMemory=R,c.ExitStatus=hn,me=function e(){Wt||fn(),Wt||(me=e)},c.run=fn,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return x&&(D=!1,Le.initWorker()),fn(),e.ready});e.exports=r},7234:(e,t,n)=>{var a,r=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,r,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,r=n}));var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u=[],l=!1,c=!1,p=!1,d=!1;l="object"==typeof window,c="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,d=!l&&!p&&!c;var h,f,m,g,y,b="";function x(e){return s.locateFile?s.locateFile(e,b):b+e}p?(b=c?n(2980).dirname(b)+"/":"//",h=function(e,t){return g||(g=n(7256)),y||(y=n(2980)),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=h(e,!0);return t.buffer||(t=new Uint8Array(t)),S(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof De))throw e})),process.on("unhandledRejection",ae),s.inspect=function(){return"[Emscripten Module object]"}):d?("undefined"!=typeof read&&(h=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(S("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||c)&&(c?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),a&&(b=a),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",h=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=function(){200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)});var w,v,k=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(u=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(w=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&ae("no native wasm support detected");var N=!1;function S(e,t){e||ae("Assertion failed: "+t)}function T(e){var t=s["_"+e];return S(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,a,r){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);L(e,t=Fe(n),n)}return t},array:function(e){var t=Fe(e.length);return z(e,t),t}},i=T(e),o=[],u=0;if(a)for(var l=0;l<a.length;l++){var c=s[n[l]];c?(0===u&&(u=_e()),o[l]=c(a[l])):o[l]=a[l]}var p=i.apply(null,o);return p=function(e){return"string"===t?O(e):"boolean"===t?Boolean(e):e}(p),0!==u&&Re(u),p}function $(e,t,n,a){var r=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&r&&!a?T(e):function(){return C(e,t,n,arguments)}}var E,A,_,R,F="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var a=t+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.subarray&&F)return F.decode(e.subarray(t,r));for(var s="";t<r;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function O(e,t){return e?D(_,e,t):""}function M(e,t,n,a){if(!(a>0))return 0;for(var r=n,s=n+a-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-r}function L(e,t,n){return M(e,_,t,n)}function z(e,t){A.set(e,t)}function P(e,t){return e%t>0&&(e+=t-e%t),e}function B(e){E=e,s.HEAP8=A=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=R=new Int32Array(e),s.HEAPU8=_=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var W,V=[],U=[],G=[],H=[];function j(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)Y(s.preRun.shift());he(V)}function q(){he(U)}function K(){he(G)}function X(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)Z(s.postRun.shift());he(H)}function Y(e){V.unshift(e)}function Z(e){H.unshift(e)}U.push({func:function(){Ee()}});var J=0,Q=null,ee=null;function te(e){J++,s.monitorRunDependencies&&s.monitorRunDependencies(J)}function ne(e){if(J--,s.monitorRunDependencies&&s.monitorRunDependencies(J),0==J&&(null!==Q&&(clearInterval(Q),Q=null),ee)){var t=ee;ee=null,t()}}function ae(e){s.onAbort&&s.onAbort(e),I(e+=""),N=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}function re(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var se="data:application/octet-stream;base64,";function ie(e){return re(e,se)}var oe="file://";function ue(e){return re(e,oe)}var le="tfjs-backend-wasm.wasm";function ce(e){try{if(e==le&&w)return new Uint8Array(w);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){ae(e)}}function pe(){if(!w&&(l||c)){if("function"==typeof fetch&&!ue(le))return fetch(le,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+le+"'";return e.arrayBuffer()})).catch((function(){return ce(le)}));if(f)return new Promise((function(e,t){f(le,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ce(le)}))}function de(){var e={a:$e};function t(e,t){var n=e.exports;s.asm=n,B((v=s.asm.j).buffer),W=s.asm.r,ne()}function n(e){t(e.instance)}function a(t){return pe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),ae(e)}))}if(te(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(w||"function"!=typeof WebAssembly.instantiateStreaming||ie(le)||ue(le)||"function"!=typeof fetch?a(n):fetch(le,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(r),{}}function he(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?W.get(n)():W.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function fe(){ae()}function me(e,t,n){_.copyWithin(e,t,t+n)}function ge(){return _.length}function ye(e){try{return v.grow(e-E.byteLength+65535>>>16),B(v.buffer),1}catch(e){}}function be(e){var t=ge(),n=2147483648;if(e>n)return!1;for(var a=1;a<=4;a*=2){var r=t*(1+.2/a);if(r=Math.min(r,e+100663296),ye(Math.min(n,P(Math.max(e,r),65536))))return!0}return!1}ie(le)||(le=x(le));var xe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=xe.buffers[e];0===t||10===t?((1===e?k:I)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return xe.varargs+=4,R[xe.varargs-4>>2]},getStr:function(e){return O(e)},get64:function(e,t){return e}};function we(e){return 0}function ve(e,t,n,a,r){}function ke(e,t,n,a){for(var r=0,s=0;s<n;s++){for(var i=R[t+8*s>>2],o=R[t+(8*s+4)>>2],u=0;u<o;u++)xe.printChar(e,_[i+u]);r+=o}return R[a>>2]=r,0}function Ie(){return 6}function Ne(){return 28}function Se(e){return R[Ae()>>2]=e,e}function Te(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Se(28),-1}var Ce,$e={a:fe,d:me,e:be,f:we,c:ve,b:ke,h:Ie,g:Ne,i:Te},Ee=(de(),s.___wasm_call_ctors=function(){return(Ee=s.___wasm_call_ctors=s.asm.k).apply(null,arguments)}),Ae=(s._init=function(){return(s._init=s.asm.l).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.m).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.n).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.o).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.p).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.q).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.s).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.t).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.u).apply(null,arguments)},s._All=function(){return(s._All=s.asm.v).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.w).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.x).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.y).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.z).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.A).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.B).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.C).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.D).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.E).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.F).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.G).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.H).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.I).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.J).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.K).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.L).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.M).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.N).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.O).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.P).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.Q).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.R).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.S).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.T).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.U).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.V).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.W).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.X).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Y).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.Z).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm._).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.$).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.aa).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.ba).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.ca).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.da).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.ea).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.fa).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ga).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ha).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.ia).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ja).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ka).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.la).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ma).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.na).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.oa).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.pa).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.qa).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.ra).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.sa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.ta).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.ua).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.va).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.wa).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.xa).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ya).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.za).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.Aa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.Ba).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Ca).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Da).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Ea).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Fa).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ga).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ha).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Ia).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ja).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Ka).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.La).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Ma).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Na).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Oa).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Pa).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Qa).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ra).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Sa).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Ta).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Ua).apply(null,arguments)},s.___errno_location=function(){return(Ae=s.___errno_location=s.asm.Va).apply(null,arguments)}),_e=s.stackSave=function(){return(_e=s.stackSave=s.asm.Wa).apply(null,arguments)},Re=s.stackRestore=function(){return(Re=s.stackRestore=s.asm.Xa).apply(null,arguments)},Fe=s.stackAlloc=function(){return(Fe=s.stackAlloc=s.asm.Ya).apply(null,arguments)};function De(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Oe(e){function n(){Ce||(Ce=!0,s.calledRun=!0,N||(q(),K(),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),X()))}e=e||u,J>0||(j(),J>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n()))}if(s.cwrap=$,ee=function e(){Ce||Oe(),Ce||(ee=e)},s.run=Oe,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return Oe(),e.ready});e.exports=r},3129:(e,t,n)=>{var a=n(626),r=n(477),s=n(2868),i=n(8197),o=n(1954),u=n(2408),l=n(1662);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},626:function(e,t,n){var a;!function(e,r,s){function i(e){var t,n=this,a=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.alea=u}(0,e=n.nmd(e),n.amdD)},2408:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.tychei=u}(0,e=n.nmd(e),n.amdD)},477:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xor128=u}(0,e=n.nmd(e),n.amdD)},1954:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,i,o=[],u=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,u=Math.max(u,t.length)),r=0,s=-32;s<u;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(i=i+1640531527|0,r=0==(n=o[127&s]^=a+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},8197:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},2868:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1662:(e,t,n)=>{var a;!function(r,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),p=2*c,d=255;function h(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),a),h=new f(a),x=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),r),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,i=a.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[s=d&s+e[r%n]+(t=i[r])],i[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,i=a.S;e--;)t=i[r=d&r+1],n=n*u+i[d&(i[r]=i[s=d&s+t])+(i[s]=t)];return a.i=r,a.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(e){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),r),e.exports){e.exports=h;try{i=n(5778)}catch(e){}}else void 0===(a=function(){return h}.call(t,n,t,e))||(e.exports=a)}([],Math)},5426:(e,t,n)=>{"use strict";n.d(t,{Z:()=>f});var a=n(8081),r=n.n(a),s=n(3645),i=n.n(s),o=n(1667),u=n.n(o),l=new URL(n(1605),n.b),c=new URL(n(5781),n.b),p=i()(r()),d=u()(l),h=u()(c);p.push([e.id,"/*\n\nTo read:\nhttps://stackoverflow.com/questions/2941189/how-to-overlay-one-div-over-another-div\n*/\n\nbody {\n  background-image: url("+d+");\n  background-repeat: repeat;\n\n}\n\n#container {\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: center;\n}\n\n#paddingContainer {\n  flex: 1;\n  flex-shrink: 10;\n}\n\n#mainItems {\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n\n#deepFake {\n  position: absolute;\n}\n\n#paintingItems {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n\n#monaLisaWithFrame {\n  min-height: 622px;\n}\n\n#museumLabelWrapper {\n  flex: 1;\n  display: flex;\n  margin-left: 40px;\n  padding-right: 40px;\n  justify-content: left;\n  display: flex;\n  align-items: center;\n}\n\n#museumLabelContainer {\n  margin-top: 120px;\n  display: flex;\n  flex-direction: column;\n}\n\n.labelHeader {\n  font-size: 16px;\n}\n\na:link, a:visited, a:active {\n color: black;\n text-decoration: none;\n}\n\na:hover {\n  text-decoration: None;\n  color: gray;\n}\n\n#museumLabel {\n  width: 300px;\n  font-size: 13px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 2px;\n  -webkit-box-shadow: 3px 5px 4px 0px rgba(0,0,0,0.75);\n  -moz-box-shadow: 3px 5px 4px 0px rgba(0,0,0,0.75);\n  box-shadow: 3px 5px 4px 0px rgba(0,0,0,0.75);\n  background-image: url("+h+");\n  background-size: 100% 100%;\n}\n\n#labelVideo {\n  padding-top: 20px;\n  padding-left: 2px;\n}\n\n\n\n@media only screen and (max-width: 768px) {\n\n  #container {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    justify-content: center;\n  }\n\n  #museumLabelContainer {\n    margin-top: 40px;\n    display: flex;\n    flex-direction: column;\n  }\n\n}\n\n\n@media only screen and (max-device-width: 768px) {\n  #container {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    justify-content: center;\n  }\n\n  #museumLabelContainer {\n    margin-top: 40px;\n    display: flex;\n    flex-direction: column;\n  }\n\n}\n\n@media only screen and (max-device-width : 640px) {\n\n  #container {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    justify-content: center;\n  }\n\n  #museumLabelContainer {\n    margin-top: 40px;\n    display: flex;\n    flex-direction: column;\n  }\n\n\n\n}\n",""]);const f=p},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,r,s){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(i[u]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);a&&i[c[0]]||(void 0!==s&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=s),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},1667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},8081:e=>{"use strict";e.exports=function(e){return e[1]}},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function i(e,t){var n,a,i;return t?(i=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=u(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,a){return new n(e,t,a)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return c(e.substring(1),t,n).neg();for(var r=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),p=parseInt(e.substring(i,i+u),n);if(u<8){var d=o(l(n,u));s=s.mul(d).add(o(p))}else s=(s=s.mul(r)).add(o(p))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=p;var d=4294967296,h=d*d,f=h/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(r),c=(s.sub(u.mul(r)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},N.neg=N.negate,N.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,d+=(h+=r+l)>>>16,c+=(d+=n+o)>>>16,c+=t+i,u((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*h)>>>16,y+=(b+=s*h)>>>16,b&=65535,y+=(b+=i*d)>>>16,f+=(y+=r*h)>>>16,y&=65535,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*h+r*d+s*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),d=o(n),h=d.mul(e);h.isNegative()||h.gt(r);)h=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),s=s.add(d),r=r.sub(h)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var a=n(4832),r=n(8652),s=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},4832:function(e,t,n){var a;!function(e,r,s){function i(e){var t,n=this,a=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,i,o=[],u=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,u=Math.max(u,t.length)),r=0,s=-32;s<u;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(i=i+1640531527|0,r=0==(n=o[127&s]^=a+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var a;!function(e,r,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(a=function(){return u}.call(t,n,t,r))||(r.exports=a):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var a;!function(r,s){var i,o=(0,eval)("this"),u=256,l=s.pow(u,6),c=s.pow(2,52),p=2*c,d=255;function h(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),a),h=new f(a),x=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),r),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,i=a.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[s=d&s+e[r%n]+(t=i[r])],i[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,i=a.S;e--;)t=i[r=d&r+1],n=n*u+i[d&(i[r]=i[s=d&s+t])+(i[s]=t)];return a.i=r,a.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(e){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),r),e.exports){e.exports=h;try{i=n(5042)}catch(e){}}else void 0===(a=function(){return h}.call(t,n,t,e))||(e.exports=a)}([],Math)},3379:e=>{"use strict";var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var s={},i=[],o=0;o<e.length;o++){var u=e[o],l=a.base?u[0]+a.base:u[0],c=s[l]||0,p="".concat(l," ").concat(c);s[l]=c+1;var d=n(p),h={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(h);else{var f=r(h,a);a.byIndex=o,t.splice(o,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var s=a(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<s.length;i++){var o=n(s[i]);t[o].references--}for(var u=a(e,r),l=0;l<s.length;l++){var c=n(s[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}s=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},9216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,r&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},1605:(e,t,n)=>{"use strict";e.exports=n.p+"142e676f23953cc81b85.jpg"},5781:(e,t,n)=>{"use strict";e.exports=n.p+"bcc2b21f6f61cfb93f27.jpg"},914:()=>{},7256:()=>{},2578:()=>{},2980:()=>{},4862:()=>{},7958:()=>{},5410:()=>{},8628:()=>{},5778:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Qs,computeFlatOffset:()=>di,computeOutShape:()=>ti,getNormalizedAxes:()=>si,isSliceContinous:()=>pi,maskToAxes:()=>ei,parseSliceParams:()=>hi,sliceInfo:()=>fi,startForAxis:()=>li,startIndicesWithElidedDims:()=>ii,stopForAxis:()=>ci,stopIndicesWithElidedDims:()=>oi,stridesForAxis:()=>ui,stridesWithElidedDims:()=>ni});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Kc,computeOutShape:()=>qc,segOpComputeOptimalWindowSize:()=>jc});var a={};n.r(a),n.d(a,{ERF_A1:()=>Sc,ERF_A2:()=>Tc,ERF_A3:()=>Cc,ERF_A4:()=>$c,ERF_A5:()=>Ec,ERF_P:()=>Nc,PARALLELIZE_THRESHOLD:()=>fc,SELU_SCALE:()=>Ic,SELU_SCALEALPHA:()=>kc,applyActivation:()=>Zu,assertAndGetBroadcastShape:()=>xo,assertAxesAreInnerMostDims:()=>Xo,assertParamsConsistent:()=>dc,assignToTypedArray:()=>Oc,axesAreInnerMostDims:()=>Ho,calculateShapes:()=>Js,checkEinsumDimSizes:()=>Wc,combineLocations:()=>jo,complexWithEvenIndex:()=>Rc,complexWithOddIndex:()=>Fc,computeConv2DInfo:()=>Mi,computeConv3DInfo:()=>Li,computeDefaultPad:()=>zi,computeDilation2DInfo:()=>Fi,computeOptimalWindowSize:()=>mc,computeOutAndReduceShapes:()=>qo,computeOutShape:()=>hc,computePool2DInfo:()=>Di,computePool3DInfo:()=>Oi,convertConv2DDataFormat:()=>Hi,decodeEinsumEquation:()=>Pc,eitherStridesOrDilationsAreOne:()=>Gi,expandShapeToKeepDim:()=>Ko,exponent:()=>Lc,exponents:()=>Mc,fromStringArrayToUint8:()=>Yc,fromUint8ToStringArray:()=>Xc,getAxesPermutation:()=>Yo,getBroadcastDims:()=>yo,getComplexWithIndex:()=>Dc,getEinsumComputePath:()=>Vc,getEinsumPermutation:()=>Bc,getFusedBiasGradient:()=>Yu,getFusedDyActivation:()=>Xu,getImageCenter:()=>gc,getInnerMostAxes:()=>Jo,getPermuted:()=>bc,getReductionAxes:()=>bo,getReshaped:()=>yc,getReshapedPermuted:()=>xc,getSliceBeginCoords:()=>wc,getSliceSize:()=>vc,getUndoAxesPermutation:()=>Zo,isIdentityPermutation:()=>Uc,log:()=>Se,mergeRealAndImagArrays:()=>Ac,prepareAndValidate:()=>Xs,prepareSplitSize:()=>Hc,segment_util:()=>t,shouldFuse:()=>Ju,slice_util:()=>e,splitRealAndImagArrays:()=>_c,tupleValuesAreOne:()=>Ui,upcastType:()=>Ar,validateInput:()=>Zs,validateUpdateShape:()=>Ys,warn:()=>Ne});var r={};n.r(r),n.d(r,{json:()=>lp});var s={};n.r(s),n.d(s,{json:()=>cp});var i={};n.r(i),n.d(i,{json:()=>pp});var o={};n.r(o),n.d(o,{json:()=>dp});var u={};n.r(u),n.d(u,{json:()=>hp});var l={};n.r(l),n.d(l,{json:()=>fp});var c={};n.r(c),n.d(c,{json:()=>mp});var p={};n.r(p),n.d(p,{json:()=>gp});var d={};n.r(d),n.d(d,{json:()=>yp});var h={};n.r(h),n.d(h,{json:()=>bp});var f={};n.r(f),n.d(f,{json:()=>xp});var m={};n.r(m),n.d(m,{json:()=>wp});var g={};n.r(g),n.d(g,{json:()=>vp});var y={};n.r(y),n.d(y,{json:()=>kp});var b={};n.r(b),n.d(b,{json:()=>Ip});var x={};n.r(x),n.d(x,{json:()=>Np});var w={};n.r(w),n.d(w,{json:()=>Sp});var v={};n.r(v),n.d(v,{json:()=>Tp});var k={};n.r(k),n.d(k,{json:()=>Cp});var I={};n.r(I),n.d(I,{addImpl:()=>lv,bincountImpl:()=>tk,bincountReduceImpl:()=>nk,ceilImpl:()=>sk,concatImpl:()=>pk,equalImpl:()=>qk,expImpl:()=>rI,expm1Impl:()=>lI,floorImpl:()=>TI,gatherNdImpl:()=>DI,gatherV2Impl:()=>MI,greaterEqualImpl:()=>WI,greaterImpl:()=>zI,lessEqualImpl:()=>eN,lessImpl:()=>ZI,linSpaceImpl:()=>aN,logImpl:()=>sN,maxImpl:()=>wN,maximumImpl:()=>IN,minimumImpl:()=>FN,multiplyImpl:()=>Pk,negImpl:()=>GN,notEqualImpl:()=>JN,prodImpl:()=>pS,rangeImpl:()=>hS,rsqrtImpl:()=>SS,sigmoidImpl:()=>Yw,simpleAbsImpl:()=>bv,sliceImpl:()=>Zv,sparseFillEmptyRowsImpl:()=>HS,sparseReshapeImpl:()=>qS,sparseSegmentReductionImpl:()=>XS,sqrtImpl:()=>eT,squaredDifferenceImpl:()=>rT,stridedSliceImpl:()=>lT,stringNGramsImpl:()=>dT,stringSplitImpl:()=>mT,stringToHashBucketFastImpl:()=>yT,subImpl:()=>mI,tileImpl:()=>kT,topKImpl:()=>ST,transposeImpl:()=>Sv,uniqueImpl:()=>_T});var N=n(3379),S=n.n(N),T=n(7795),C=n.n(T),$=n(569),E=n.n($),A=n(3565),_=n.n(A),R=n(9216),F=n.n(R),D=n(4589),O=n.n(D),M=n(5426),L={};L.styleTagTransform=O(),L.setAttributes=_(),L.insert=E().bind(null,"head"),L.domAPI=C(),L.insertStyleElement=F(),S()(M.Z,L),M.Z&&M.Z.locals&&M.Z.locals;class z{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class P{refCount(e){return B("refCount")}incRef(e){return B("incRef")}timerAvailable(){return!0}time(e){return B("time")}read(e){return B("read")}readSync(e){return B("readSync")}numDataIds(){return B("numDataIds")}disposeData(e,t){return B("disposeData")}write(e,t,n){return B("write")}move(e,t,n,a,r){return B("move")}memory(){return B("memory")}floatPrecision(){return B("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return B("dispose")}}function B(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function W(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,G(e,t,n)}function V(e,t,n){return Math.max(e,Math.min(t,n))}function U(e){return e%2==0?e:e+1}function G(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function H(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function j(e,t,n=""){H(Y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function q(e){H(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function K(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||oe(e)&&!n)for(let a=0;a<e.length;++a)K(e[a],t,n);else t.push(e);return t}function X(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Z(e){return e%1==0}function J(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Q(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ee(e,t=(e=>0),n){return new Promise(((a,r)=>{let s=0;const i=()=>{if(e())return void a();s++;const o=t(s);null!=n&&s>=n?r():setTimeout(i,o)};i()}))}function te(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[a]=t/n,r}function ne(e,t){const n=t.length;return H((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),H(e.every((e=>Z(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ae(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:ne(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function re(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function se(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ie(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function oe(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function ue(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function le(e){return"string"==typeof e||e instanceof String}function ce(e){return"number"==typeof e}function pe(e){return Array.isArray(e)?pe(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ce(e)?"float32":le(e)?"string":"boolean"==typeof e?"bool":"float32"}function de(e){return!!(e&&e.constructor&&e.call&&e.apply)}function he(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function fe(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function me(e,t,n,a=!1){const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=me(e+t*o,i,n,a)}return r}function ge(e,t,n=!1){if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return me(0,e,t,n)}function ye(e,t){const n=be(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function be(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function xe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ge(e,new Float32Array(n));if("int32"===t)return ge(e,new Int32Array(n));if("bool"===t)return ge(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function we(e){e.forEach((t=>{H(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ve(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function ke(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function Ie(e){return e&&e.then&&"function"==typeof e.then}function Ne(...e){$e().getBool("IS_TEST")||$e().getBool("PROD")||console.warn(...e)}function Se(...e){$e().getBool("IS_TEST")||$e().getBool("PROD")||console.log(...e)}class Te{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ce,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&Ne(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ne(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ie(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Ce(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function $e(){return Ae}let Ee,Ae=null;function _e(){if(null==Ee){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ee=e}return Ee}function Re(e,t){const n=function(){const e=_e();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const Fe="Abs",De="Acos",Oe="Acosh",Me="Add",Le="AddN",ze="All",Pe="Any",Be="ArgMax",We="ArgMin",Ve="Asin",Ue="Asinh",Ge="Atan",He="Atanh",je="Atan2",qe="AvgPool",Ke="AvgPoolGrad",Xe="AvgPool3D",Ye="AvgPool3DGrad",Ze="BatchMatMul",Je="BatchToSpaceND",Qe="Bincount",et="BroadcastArgs",tt="Cast",nt="Ceil",at="ClipByValue",rt="Complex",st="ComplexAbs",it="Concat",ot="Conv2D",ut="Conv2DBackpropFilter",lt="Conv2DBackpropInput",ct="Conv3D",pt="Conv3DBackpropFilterV2",dt="Conv3DBackpropInputV2",ht="Cos",ft="Cosh",mt="Cumsum",gt="CropAndResize",yt="DenseBincount",bt="DepthToSpace",xt="DepthwiseConv2dNative",wt="DepthwiseConv2dNativeBackpropFilter",vt="DepthwiseConv2dNativeBackpropInput",kt="Diag",It="Dilation2D",Nt="Dilation2DBackpropInput",St="Dilation2DBackpropFilter",Tt="RealDiv",Ct="Einsum",$t="Elu",Et="EluGrad",At="Erf",_t="Equal",Rt="Exp",Ft="ExpandDims",Dt="Expm1",Ot="FFT",Mt="Fill",Lt="FlipLeftRight",zt="Floor",Pt="FloorDiv",Bt="FusedBatchNorm",Wt="GatherV2",Vt="GatherNd",Ut="Greater",Gt="GreaterEqual",Ht="Identity",jt="IFFT",qt="Imag",Kt="IsFinite",Xt="IsInf",Yt="IsNan",Zt="LeakyRelu",Jt="Less",Qt="LessEqual",en="LinSpace",tn="Log",nn="Log1p",an="LogicalAnd",rn="LogicalNot",sn="LogicalOr",on="LRN",un="LRNGrad",ln="Max",cn="Maximum",pn="MaxPool",dn="MaxPoolGrad",hn="MaxPool3D",fn="MaxPool3DGrad",mn="MaxPoolWithArgmax",gn="Mean",yn="Min",bn="Minimum",xn="MirrorPad",wn="Mod",vn="Multinomial",kn="Multiply",In="Neg",Nn="NotEqual",Sn="NonMaxSuppressionV3",Tn="NonMaxSuppressionV4",Cn="NonMaxSuppressionV5",$n="OnesLike",En="OneHot",An="Pack",_n="PadV2",Rn="Pow",Fn="Prelu",Dn="Prod",On="Range",Mn="Real",Ln="Reciprocal",zn="Relu",Pn="Reshape",Bn="ResizeNearestNeighbor",Wn="ResizeNearestNeighborGrad",Vn="ResizeBilinear",Un="ResizeBilinearGrad",Gn="Relu6",Hn="Reverse",jn="Round",qn="Rsqrt",Kn="ScatterNd",Xn="Select",Yn="Selu",Zn="Slice",Jn="Sin",Qn="Sinh",ea="Sign",ta="Sigmoid",na="Softplus",aa="Sqrt",ra="Sum",sa="SpaceToBatchND",ia="SplitV",oa="Softmax",ua="SparseFillEmptyRows",la="SparseReshape",ca="SparseSegmentMean",pa="SparseSegmentSum",da="SparseToDense",ha="SquaredDifference",fa="Square",ma="StridedSlice",ga="StringNGrams",ya="StringSplit",ba="StringToHashBucketFast",xa="Sub",wa="Tan",va="Tanh",ka="Tile",Ia="TopK",Na="Transform",Sa="Transpose",Ta="Unique",Ca="Unpack",$a="UnsortedSegmentSum",Ea="ZerosLike",Aa="Step",_a="FromPixels",Ra="RotateWithOffset",Fa="_FusedMatMul",Da="FusedConv2D",Oa="FusedDepthwiseConv2D",Ma=Re("kernelRegistry",(()=>new Map)),La=Re("gradRegistry",(()=>new Map));function za(e,t){const n=Ua(e,t);return Ma.get(n)}function Pa(e){return La.get(e)}function Ba(e){const t=Ma.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function Wa(e){const{kernelName:t,backendName:n}=e,a=Ua(t,n);Ma.has(a)&&Ne(`The kernel '${t}' for backend '${n}' is already registered`),Ma.set(a,e)}function Va(e){const{kernelName:t}=e;La.has(t)&&$e().getBool("DEBUG")&&Ne(`Overriding the gradient for '${t}'`),La.set(t,e)}function Ua(e,t){return`${t}_${e}`}var Ga=n(3720);const Ha=n.n(Ga)()||Ga;function ja(e){return Ha.fromString(e,!0,16)}const qa=ja("c3a5c85c97cb3127"),Ka=ja("b492b66fbe98f273"),Xa=ja("9ae16a3b2f90404f");function Ya(e){return e.xor(e.shru(47))}function Za(e,t,n){const a=e.slice(t,t+n);return Ha.fromBytes(Array.from(a),!0,!0)}function Ja(e,t){return Za(e,t,8)}function Qa(e,t){return Za(e,t,4)}function er(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function tr(e,t,n=ja("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function nr(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=er(s.add(r).add(a),21);const i=r;return r=(r=r.add(t)).add(n),s=s.add(er(r,44)),[r.add(a),s.add(i)]}(Ja(e,t),Ja(e,t+8),Ja(e,t+16),Ja(e,t+24),n,a)}function ar(e,t=e.length){const n=Ha.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Xa.add(2*t),a=Ja(e,0).add(Xa),r=Ja(e,t-8);return tr(er(r,37).mul(n).add(a),er(a,25).add(r).mul(n),n)}if(t>=4){const n=Xa.add(2*t);return tr(Qa(e,0).shl(3).add(t),Qa(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Ya(Xa.mul(n).xor(qa.mul(a))).mul(Xa)}return Xa}(e,t):function(e,t=e.length){const n=Xa.add(2*t),a=Ja(e,0).mul(Ka),r=Ja(e,8),s=Ja(e,t-8).mul(n),i=Ja(e,t-16).mul(Xa);return tr(er(a.add(r),43).add(er(s,30)).add(i),a.add(er(r.add(Xa),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Xa.add(2*t),a=Ja(e,0).mul(Xa),r=Ja(e,8),s=Ja(e,t-8).mul(n),i=Ja(e,t-16).mul(Xa),o=er(a.add(r),43).add(er(s,30)).add(i),u=tr(o,a.add(er(r.add(Xa),18)).add(s),n),l=Ja(e,16).mul(n),c=Ja(e,24),p=o.add(Ja(e,t-32)).mul(n),d=u.add(Ja(e,t-24)).mul(n);return tr(er(l.add(c),43).add(er(p,30)).add(d),l.add(er(c.add(a),18)).add(p),n)}(e,t);let a=n,r=n.mul(Ka).add(113),s=Ya(r.mul(Xa).add(113)).mul(Xa),i=[Ha.UZERO,Ha.UZERO],o=[Ha.UZERO,Ha.UZERO];a=a.mul(Xa).add(Ja(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{a=er(a.add(r).add(i[0]).add(Ja(e,u+8)),37).mul(Ka),r=er(r.add(i[1]).add(Ja(e,u+48)),42).mul(Ka),a=a.xor(o[1]),r=r.add(i[0]).add(Ja(e,u+40)),s=er(s.add(o[0]),33).mul(Ka),i=nr(e,u,i[1].mul(Ka),a.add(o[0])),o=nr(e,u+32,s.add(o[1]),r.add(Ja(e,u+16))),[s,a]=[a,s],u+=64}while(u!==l);const p=Ka.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),a=er(a.add(r).add(i[0]).add(Ja(e,u+8)),37).mul(p),r=er(r.add(i[1]).add(Ja(e,u+48)),42).mul(p),a=a.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Ja(e,u+40))),s=er(s.add(o[0]),33).mul(p),i=nr(e,u,i[1].mul(p),a.add(o[0])),o=nr(e,u+32,s.add(o[1]),r.add(Ja(e,u+16))),[s,a]=[a,s],tr(tr(i[0],o[0],p).add(Ya(r).mul(qa)).add(s),tr(i[1],o[1],p).add(a),p)}function rr(e,t){return"string"===t?or(e):sr([e],t)}function sr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=K(e)),$e().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ir(){return $e().platform.now()}function or(e,t="utf-8"){return t=t||"utf-8",$e().platform.encode(e,t)}function ur(e,t="utf-8"){return t=t||"utf-8",$e().platform.decode(e,t)}class lr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new pr)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const i=ir();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:ir()-i})}if($e().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){const n=a[t];n.data().then((t=>{cr(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function cr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}class pr{logKernelProfile(e,t,n,a,r,s){const i="number"==typeof a?Q(`${a}ms`,9):a.error,o=Q(e,25),u=t.rank,l=t.size,c=Q(t.shape.toString(),14);let p="";for(const e in r){const n=r[e];if(null!=n){const a=n.shape||t.shape,r=a.length;p+=`${e}: ${r}D ${r>0?a:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function dr(e,t,n,a){const r=fe(t),s=function(e,t,n,a){const r=X(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?gr(e):e;if(o>1)for(let e=0;e<r/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],hr(u[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=mr(e,t,n,r,s),u=["Tensor"];return a&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function hr(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:le(e)?`'${e}'`:"bool"===n?fr(e):parseFloat(e.toFixed(7)).toString(),Q(a,t)}function fr(e){return 0===e?"false":"true"}function mr(e,t,n,a,r,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[hr(gr(e)[0],0,n)]:"bool"===n?[fr(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(a=gr(a),s=gr(s)),["["+a.map(((e,t)=>hr(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>hr(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?gr(e):Array.from(e)).map(((e,t)=>hr(e,r[t],n))).join(", ")+"]"]}const l=t.slice(1),c=a.slice(1),p=a[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const a=t*p,s=a+p;d.push(...mr(e.slice(a,s),l,n,c,r,!1))}d.push("...");for(let t=o-3;t<o;t++){const a=t*p,s=a+p;d.push(...mr(e.slice(a,s),l,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const a=t*p,s=a+p;d.push(...mr(e.slice(a,s),l,n,c,r,t===o-1))}const h=2===u?",":"";d[0]="["+d[0]+h;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+h;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function gr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class yr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=X(e),null!=n){const e=n.length;H(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||se(t,this.size),this.strides=fe(e)}set(e,...t){0===t.length&&(t=[0]),H(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return br().makeTensor(this.values,this.shape,this.dtype)}}let br=null,xr=null,wr=null;class vr{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=X(e),this.strides=fe(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return xr.buffer(this.shape,this.dtype,e)}bufferSync(){return xr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ge(this.shape,e,"complex64"===this.dtype)}arraySync(){return ge(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=br().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=br().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await br().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(br().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return xr.print(this,e)}clone(){return this.throwIfDisposed(),xr.clone(this)}toString(e=!1){return dr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),xr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),br().makeVariable(this,e,t,n)}}function kr(){return Re("Tensor",(()=>vr))}Object.defineProperty(vr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),kr();class Ir extends vr{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Y(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);br().disposeTensor(this),this.dataId=e.dataId,br().incRef(this,null)}dispose(){br().disposeVariable(this),this.isDisposedInternal=!0}}var Nr,Sr,Tr,Cr,$r;Object.defineProperty(Ir,Symbol.hasInstance,{value:e=>e instanceof vr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Nr||(Nr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Sr||(Sr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Tr||(Tr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Cr||(Cr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}($r||($r={}));const Er={float32:Cr,int32:Sr,bool:Tr,complex64:$r};function Ar(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Er[e][t]}function _r(e){return Ar(e,"int32")}function Rr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Ar(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Fr(e,t){return t.some((t=>t.id===e.id))}function Dr(e){const t=[];return Or(e,t,new Set),t}function Or(e,t,n){if(null==e)return;if(e instanceof vr)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const r=e;for(const e in r){const a=r[e];n.has(a)||(n.add(a),Or(a,t,n))}}function Mr(e){return null!=e.kernelName}class Lr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class zr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Lr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ne(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new lr(this.backendInstance),!0}setupRegisteredKernels(){Ba(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ba(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof P||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ne(`Initialization of backend ${e} failed`),Ne(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return Ne(`Initialization of backend ${e} failed`),Ne(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return zr.nextTensorId++}nextVariableId(){return zr.nextVariableId++}clone(e){const t=Br.runKernel(Ht,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Br.runKernel(tt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==za(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Mr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Mr(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const u=za(t,this.backendName);H(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:r,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:a}=e;return this.makeTensorFromDataId(t,n,a)}));if(a){const e=this.getTensorsForGradient(t,r,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,p=Mr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),a&&this.addTapeNode(u,l,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const a=Pa(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(H(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return s.concat(i)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&le(e[0])&&(r=e.map((e=>or(e))));const s=a.write(r,t,n),i=new vr(t,n,s,this.nextTensorId());if(this.trackTensor(i,a),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,a){const r=new vr(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(r,a),r}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new Ir(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ue(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ir||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ue(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Pa(e);null!=o&&(a=o.gradFunc),null!=a&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=be(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Dr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n,a=!1){if(H(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));H(r instanceof vr,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){s.outputs.forEach((e=>a[e.id]=!0)),o=!0,r[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in a)s[a[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];a[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=ye(X(e),"float32");return Br.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=s.inputs[t];if(!Y(r.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Wr);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){return H(de(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;H(t.every((e=>e instanceof vr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const a={};return t.forEach(((e,t)=>{a[t]=e})),this.runKernelFunc({forwardFunc:(a,r)=>(n=e(...t,r),H(n.value instanceof vr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),H(de(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{const r=n.gradFunc(e,a),s=Array.isArray(r)?r:[r];H(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),H(s.every((e=>e instanceof vr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=ir(),n=await this.backend.time(e);return n.wallMs=ir()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Lr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Pr(){const e=_e();if(null==e._tfengine){const t=new Te(e);e._tfengine=new zr(t)}var t;return t=e._tfengine.ENV,Ae=t,br=()=>e._tfengine,e._tfengine}zr.nextTensorId=0,zr.nextVariableId=0;const Br=Pr();function Wr(e,t){const n={a:e,b:t};return Br.runKernel(Me,n)}function Vr(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ur(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Gr=$e();function Hr(e,t){let n=e;if(oe(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||oe(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&$e().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&jr(e,a,[]),a}function jr(e,t,n){if(n=n||[],!Array.isArray(e)&&!oe(e))return void H(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));H(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),H(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const a=t.slice(1);for(let t=0;t<e.length;++t)jr(e[t],a,n.concat(t))}function qr(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function Kr(e,t,n,a="numeric"){if(e instanceof vr)return qr(a,e.dtype,t,n),e;let r=pe(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),qr(a,r,t,n),null==e||!oe(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const s=Hr(e,r);oe(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?sr(e,r):K(e,[],!0);return Br.makeTensor(i,s,r)}function Xr(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Kr(e,`${t}[${r}]`,n,a)))}function Yr(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...e)=>{Br.startScope(n);try{const t=a(...e);return Ie(t)&&console.error("Cannot return a Promise inside of tidy."),Br.endScope(t),t}catch(e){throw Br.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}Gr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Gr.registerFlag("IS_BROWSER",(()=>Ur())),Gr.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Gr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Gr.registerFlag("PROD",(()=>!1)),Gr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Gr.getBool("DEBUG"))),Gr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Gr.registerFlag("IS_TEST",(()=>!1)),Gr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Gr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Zr=Yr({complex_:function(e,t){const n=Kr(e,"real","complex"),a=Kr(t,"imag","complex");j(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const r={real:n,imag:a};return Br.runKernel(rt,r)}});function Jr(e,t,n,a){if(null==a&&(a=pe(e)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!oe(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){we(t);const e=X(t),a=X(n);H(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let e=0;e<n.length;++e){const a=n[e],r=e!==n.length-1||a!==X(t.slice(e));H(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return oe(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?sr(e,a):K(e,[],!0),Br.makeTensor(e,t,a)}function Qr(e,t,n){return Jr(e,t,Hr(e,n),n)}const es={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function ts(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const i=r[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,a=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(s,r),r+=4,a.set(n,r),r+=n.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:ns(await Promise.all(a)),specs:n}}function ns(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const as="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function rs(e){return as?Buffer.byteLength(e):new Blob([e]).size}function ss(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let a=0;return e.forEach((e=>{n.set(new Uint8Array(e),a),a+=e.byteLength})),n.buffer}function is(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function os(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:rs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:rs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function us(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let r=0;r<a.length;r++){const i=a[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[r]=o}return new Float32Array(r)}}class ls{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ls.instance&&(ls.instance=new ls),ls.instance}static registerSaveRouter(e){ls.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ls.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ls.getHandlers(e,"save")}static getLoadHandlers(e,t){return ls.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?ls.getInstance().loadRouters:ls.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const cs=e=>ls.getSaveHandlers(e),ps="tensorflowjs",ds="models_store",hs="model_info_store";function fs(){if(!$e().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ms(e){const t=e.result;t.createObjectStore(ds,{keyPath:"modelPath"}),t.createObjectStore(hs,{keyPath:"modelPath"})}class gs{constructor(e){if(this.indexedDB=fs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(ps,1);a.onupgradeneeded=()=>ms(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(ds,"readonly"),a=t.objectStore(ds).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{const a=os(t),s=r.transaction(hs,"readwrite");let i=s.objectStore(hs);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:a});let u;o.onsuccess=()=>{u=r.transaction(ds,"readwrite");const o=u.objectStore(ds).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});o.onsuccess=()=>e({modelArtifactsInfo:a}),o.onerror=e=>{i=s.objectStore(hs);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),s.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}gs.URL_SCHEME="indexeddb://";const ys=e=>{return $e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gs.URL_SCHEME)?(t=e.slice(gs.URL_SCHEME.length),new gs(t)):null;var t};ls.registerSaveRouter(ys),ls.registerLoadRouter(ys);class bs{constructor(){this.indexedDB=fs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ps,1);n.onupgradeneeded=()=>ms(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(hs,"readonly"),s=r.objectStore(hs).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(gs.URL_SCHEME)?t.slice(gs.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(ps,1);a.onupgradeneeded=()=>ms(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(hs,"readwrite"),i=s.objectStore(hs),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const a=i.delete(e),s=()=>{u=r.transaction(ds,"readwrite");const a=u.objectStore(ds).delete(e);a.onsuccess=()=>t(o.result.modelArtifactsInfo),a.onerror=e=>n(o.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),s.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const xs="/",ws="tensorflowjs_models",vs="info",ks="model_topology",Is="weight_specs",Ns="weight_data",Ss="model_metadata";function Ts(e){return{info:[ws,e,vs].join(xs),topology:[ws,e,ks].join(xs),weightSpecs:[ws,e,Is].join(xs),weightData:[ws,e,Ns].join(xs),modelMetadata:[ws,e,Ss].join(xs)}}function Cs(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function $s(e){const t=e.split(xs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(xs)}class Es{constructor(e){if(!$e().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ts(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=os(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(as)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:a}}catch(e){throw Cs(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(as){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}Es.URL_SCHEME="localstorage://";const As=e=>{return $e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Es.URL_SCHEME)?(t=e.slice(Es.URL_SCHEME.length),new Es(t)):null;var t};ls.registerSaveRouter(As),ls.registerLoadRouter(As);class _s{constructor(){H($e().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),H("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ws+xs,n=xs+vs;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);r.startsWith(t)&&r.endsWith(n)&&(e[$s(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=Ts(e=(t=e).startsWith(Es.URL_SCHEME)?t.slice(Es.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const a=JSON.parse(this.LS.getItem(n.info));return Cs(n),a}}class Rs{constructor(){this.managers={}}static getInstance(){return null==Rs.instance&&(Rs.instance=new Rs),Rs.instance}static registerManager(e,t){H(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),H(e.length>0,(()=>"scheme must not be an empty string."));const n=Rs.getInstance();H(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Fs{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if($e().get("IS_BROWSER")){$e().setPlatform("browser",new Fs);try{Rs.registerManager(Es.URL_SCHEME,new _s)}catch(e){}try{Rs.registerManager(gs.URL_SCHEME,new bs)}catch(e){}}let Ds;function Os(e,t="float32",n){return t=t||"float32",we(e),new yr(e,t,n)}$e().get("IS_NODE")&&$e().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=$e().global.fetch?$e().global.fetch(e,t):(null==Ds&&(Ds=n(5410)),Ds(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ms=Yr({cast_:function(e,t){const n=Kr(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return Br.runKernel(tt,a,r)}}),Ls=Yr({clone_:function(e){const t={x:Kr(e,"x","clone","string_or_numeric")};return Br.runKernel(Ht,t)}});function zs(e){return new Promise((e=>setTimeout(e))).then(e)}Pr(),xr={buffer:Os,cast:Ms,clone:Ls,print:function(e,t=!1){console.log(e.toString(t))}};class Ps{constructor(e){if(!$e().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ps.URL_SCHEME)&&(e=e.slice(Ps.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=is(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await zs((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await zs((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:os(e)}}}}function Bs(e,t,n,a){!function(e){H(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){H(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),H(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),H(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++r/e.length*(a-n);return t(i),s})),s))))}async function Ws(e,t){null==t&&(t={});const n=null==t.fetchFunc?$e().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Bs(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Bs(r,t.onProgress,.5,1)}Ps.URL_SCHEME="downloads://",ls.registerSaveRouter((e=>$e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ps.URL_SCHEME)?function(e="model"){return new Ps(e)}(e.slice(Ps.URL_SCHEME.length)):null));class Vs{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(H("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=$e().platform.fetch,H(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&H(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=is(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:os(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[a,r]=await t(e.weightsManifest);n.weightSpecs=a,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+a);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,ss(await Ws(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Us(e){return null!=e.match(Vs.URL_SCHEME_REGEX)}Vs.URL_SCHEME_REGEX=/^https?:\/\//;const Gs=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Us(e))):Us(e),n)return Hs(e,t)}return null};function Hs(e,t){return new Vs(e,t)}function js(e,t){return Hs(e,t)}let qs;ls.registerSaveRouter(Gs),ls.registerLoadRouter(Gs);const Ks=Yr({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(r){const t=2;if(r&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=za(_a,Br.backendName)){const n={pixels:e},a={numChannels:t};return Br.runKernel(_a,n,a)}const[u,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,p;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(a||n)c=e.data;else if(s||r||o){if(null==qs)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");qs=new OffscreenCanvas(1,1).getContext("2d")}else qs=document.createElement("canvas").getContext("2d");qs.canvas.width=u,qs.canvas.height=l,qs.drawImage(e,0,0,u,l),c=qs.getImageData(0,0,u,l).data}if(4===t)p=new Int32Array(c);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=c[4*n+e]}return function(e,t,n){if(q(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=Hr(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Jr(e,t,a,n)}(p,[l,u,t],"int32")}});function Xs(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===X(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,s=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,u=r.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...fe(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}function Ys(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != "+(r+e.length-a));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+a])throw new Error(s+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function Zs(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Ys(n,t,e)}function Js(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let i=1;for(let e=r;e<s;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:X(t.shape)/o,sliceSize:i,strides:[...fe(n.slice(0,r)),1],outputSize:X(n)}}function Qs(e,t,n){const a=e.shape.length;H(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),H(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let r=0;r<a;++r)H(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function ei(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ti(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function ni(e,t,n,a){const r=[...e];for(let e=r.length;e<a.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function ai(e,t,n){return n<=e?n:n-(t-1)}function ri(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function si(e,t,n,a,r,s,i,o,u){const l=e.length;let c=new Array(l),p=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ii(i,u,l,a,e),p=oi(o,u,l,r,e),d=ni(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=li(i,a,s,e,t,u),p[t]=ci(o,r,s,e,t,u),d[t]=ui(s,t,u);return{begin:c,end:p,strides:d}}function ii(e,t,n,a,r){const s=[...r],i=ri(n,t);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=0;else{const i=ai(t,n,r);let o=a[i];e&1<<i&&(o=0),s[r]=o}return s}function oi(e,t,n,a,r){const s=[...r],i=ri(n,t);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=Number.MAX_SAFE_INTEGER;else{const i=ai(t,n,r);let o=a[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[r]=o}for(let e=0;e<s.length;e++){const t=r[e];s[e]<0&&(s[e]+=t),s[e]=V(0,s[e],r[e])}return s}function ui(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function li(e,t,n,a,r,s){let i=t[r];const o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[r];return i<0&&(i+=u),i=V(0,i,u-1),i}function ci(e,t,n,a,r,s){let i=t[r];const o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=a[r];return i<0&&(i+=u),i=o>0?V(0,i,u):V(-1,i,u-1),i}function pi(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function di(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function hi(e,t,n){let a;const r=e.shape.length;let s;return a="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{H(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(H(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,s]}function fi(e,t,n,a,r,s,i,o,u){let l;if(null==a?(l=new Array(t.length),l.fill(1)):l=a,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const p={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<p.dims;e++)c&&0!=(1<<e&o)&&p.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,d);let h=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}const r=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?a:a-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?a+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=a)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=mi(d.begin[t],0,d.strides[t],a,r,s),d.end[t]=mi(d.end[t],1,d.strides[t],a,r,s);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===a;h=h&&e,f=f&&(0===t&&1===d.strides[t]||e)}else h=h&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):i&&a>=0&&(o=d.strides[t]<0?-a:a,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function mi(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}class gi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class yi{constructor(){this.classNameMap={}}static getMap(){return null==yi.instance&&(yi.instance=new yi),yi.instance}static register(e){yi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function bi(e){H(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),H("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),H(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),yi.register(e)}function xi(){return Br}function wi(){return Br.memory()}function vi(e,t){return Br.tidy(e,t)}function ki(e){Dr(e).forEach((e=>e.dispose()))}function Ii(e){return Br.keep(e)}function Ni(e,t,n=1){return Br.registerBackend(e,t,n)}function Si(e){return Br.customGrad(e)}function Ti(e,t){if((oe(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&oe(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Jr(e,[],[],t)}wr=function(e){$e().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Ci extends gi{minimize(e,t=!1,n){const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return ki(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){H(de(e),(()=>"The f passed in variableGrads(f) must be a function")),H(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ir)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Br.registeredVariables)t.push(Br.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;H((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:s,grads:i}=Br.gradients(e,t,null,!0);H(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),H(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ki(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ti(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ci,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const $i=Yr({abs_:function(e){const t=Kr(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Br.runKernel(st,e)}{const e={x:t};return Br.runKernel(Fe,e)}}}),Ei=Yr({add_:function(e,t){let n=Kr(e,"a","add"),a=Kr(t,"b","add");[n,a]=Rr(n,a);const r={a:n,b:a};return Br.runKernel(Me,r)}}),Ai=Yr({all_:function(e,t=null,n=!1){const a={x:Kr(e,"x","all","bool")},r={axis:t,keepDims:n};return Br.runKernel(ze,a,r)}}),_i=Yr({any_:function(e,t=null,n=!1){const a={x:Kr(e,"x","any","bool")},r={axis:t,keepDims:n};return Br.runKernel(Pe,a,r)}}),Ri=Yr({argMax_:function(e,t=0){const n={x:Kr(e,"x","argMax")},a={axis:t};return Br.runKernel(Be,n,a)}});function Fi(e,t,n,a,r="NHWC",s){return Mi(e,[...t,e[3]],n,s,a,null,null,Hi(r))}function Di(e,t,n,a,r,s,i="channelsLast"){const[o,u]=Pi(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Mi(e,l,n,a,r,s,!1,i)}function Oi(e,t,n,a,r,s,i="NDHWC"){const[o,u,l]=Bi(t);let c,p;if("NDHWC"===i)p="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",c=[o,u,l,e[1],e[1]]}return Li(e,c,n,a,r,!1,p,s)}function Mi(e,t,n,a,r,s,i=!1,o="channelsLast"){let[u,l,c,p]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,p,l,c]=e}const[d,h,,f]=t,[m,g]=Pi(n),[y,b]=Pi(a),x=Wi(d,y),w=Wi(h,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,a,r,s,i,o,u){let l,c,p;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=zi(e,t,n));const s=e[1];return[Vi((e[0]-t+2*a)/n+1,r),Vi((s-t+2*a)/n+1,r)]}([t,n],s,a,e,o);c=r[0],p=r[1]}else if("same"===e){c=Math.ceil(t/a),p=Math.ceil(n/r);const e=Math.max(0,(c-1)*a+s-t),o=Math.max(0,(p-1)*r+i-n),u=Math.floor(e/2),d=e-u,h=Math.floor(o/2);l={top:u,bottom:d,left:h,right:o-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/a),p=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:h,left:f,right:m,type:0===d&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},c=Vi((t-s+d+h)/a+1,o),p=Vi((n-i+f+m)/r+1,o)}}return{padInfo:l,outHeight:c,outWidth:p}}(r,l,c,m,g,x,w,s,o),N=i?f*p:f;let S;return"channelsFirst"===o?S=[u,N,k,I]:"channelsLast"===o&&(S=[u,k,I,N]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:p,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Li(e,t,n,a,r,s=!1,i="channelsLast",o){let[u,l,c,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,p,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,p]=e}const[h,f,m,,g]=t,[y,b,x]=Bi(n),[w,v,k]=Bi(a),I=Wi(h,w),N=Wi(f,v),S=Wi(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:E}=function(e,t,n,a,r,s,i,o,u,l,c){let p,d,h,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,a,r,s){null==r&&(r=zi(e,t,a));const i=e[1],o=e[2];return[Vi((e[0]-t+2*r)/a+1,s),Vi((i-t+2*r)/a+1,s),Vi((o-t+2*r)/a+1,s),1]}([t,n,a,1],o,0,r,e,c);d=s[0],h=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/s),f=Math.ceil(a/i);const e=(d-1)*r+o-t,c=(h-1)*s+u-n,m=(f-1)*i+l-a,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);p={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),h=Math.ceil((n-u+1)/s),f=Math.ceil((a-l+1)/i)}return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}(r,l,c,p,y,b,x,I,N,S,o),A=s?g*d:g;let _;return"channelsFirst"===i?_=[u,A,C,$,E]:"channelsLast"===i&&(_=[u,C,$,E,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:C,outHeight:$,outWidth:E,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function zi(e,t,n,a=1){const r=Wi(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function Pi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Bi(e){return"number"==typeof e?[e,e,e]:e}function Wi(e,t){return t<=1?e:e+(e-1)*(t-1)}function Vi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ui(e){const[t,n,a]=Pi(e);return 1===t&&1===n&&1===a}function Gi(e,t){return Ui(e)||Ui(t)}function Hi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const ji=Yr({reshape_:function(e,t){const n={x:Kr(e,"x","reshape","string_or_numeric")},a={shape:t};return Br.runKernel(Pn,n,a)}}),qi=Yr({avgPool_:function(e,t,n,a,r){const s=Kr(e,"x","avgPool","float32");H(Gi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=ji(s,[1,s.shape[0],s.shape[1],s.shape[2]])),H(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=r&&H(Z(a),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`));const u={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let c=Br.runKernel(qe,u,l);return c=Ms(c,s.dtype),o?ji(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ki=Yr({avgPool3d_:function(e,t,n,a,r,s="NDHWC"){const i=Kr(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=ji(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),H(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),H("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=r&&H(Z(a),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`));const l={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let p=Br.runKernel(Xe,l,c);return p=Ms(p,o.dtype),u?ji(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Xi=Yr({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const i=Kr(e,"x","batchNorm"),o=Kr(t,"mean","batchNorm"),u=Kr(n,"variance","batchNorm");let l,c;null!=r&&(l=Kr(r,"scale","batchNorm")),null!=a&&(c=Kr(a,"offset","batchNorm")),H(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),H(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),H(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p=function(e){let t;return t=0===e.rank||1===e.rank?ji(e,[1,1,1,e.size]):2===e.rank?ji(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ji(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d={x:p,scale:l,offset:c,mean:o,variance:u},h={varianceEpsilon:s},f=Br.runKernel(Bt,d,h);return ji(f,i.shape)}}),Yi=Yr({batchNorm2d_:function(e,t,n,a,r,s){const i=Kr(e,"x","batchNorm"),o=Kr(t,"mean","batchNorm"),u=Kr(n,"variance","batchNorm");let l,c;return null!=r&&(l=Kr(r,"scale","batchNorm")),null!=a&&(c=Kr(a,"offset","batchNorm")),H(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),H(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),H(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&H(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&H(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Xi(i,o,u,c,l,s)}}),Zi=Yr({batchNorm3d_:function(e,t,n,a,r,s){const i=Kr(e,"x","batchNorm"),o=Kr(t,"mean","batchNorm"),u=Kr(n,"variance","batchNorm");let l,c;return null!=r&&(l=Kr(r,"scale","batchNorm")),null!=a&&(c=Kr(a,"offset","batchNorm")),H(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),H(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),H(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&H(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&H(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Xi(i,o,u,c,l,s)}}),Ji=Yr({batchNorm4d_:function(e,t,n,a,r,s){const i=Kr(e,"x","batchNorm"),o=Kr(t,"mean","batchNorm"),u=Kr(n,"variance","batchNorm");let l,c;return null!=r&&(l=Kr(r,"scale","batchNorm")),null!=a&&(c=Kr(a,"offset","batchNorm")),H(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),H(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),H(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&H(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&H(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Xi(i,o,u,c,l,s)}}),Qi=Yr({clipByValue_:function(e,t,n){const a=Kr(e,"x","clipByValue");H(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const r={x:a},s={clipValueMin:t,clipValueMax:n};return Br.runKernel(at,r,s)}}),eo=Yr({concat_:function(e,t=0){H(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Xr(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ls(n[0]);const a=n,r={axis:t};return Br.runKernel(it,a,r)}}),to=Yr({concat1d_:function(e){return eo(e,0)}}),no=Yr({concat2d_:function(e,t){return eo(e,t)}}),ao=Yr({concat3d_:function(e,t){return eo(e,t)}}),ro=Yr({concat4d_:function(e,t){return eo(e,t)}}),so=Yr({conv2d_:function(e,t,n,a,r="NHWC",s=[1,1],i){const o=Kr(e,"x","conv2d","float32"),u=Kr(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=ji(o,[1,o.shape[0],o.shape[1],o.shape[2]])),H(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),H(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=i&&H(Z(a),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p="NHWC"===r?l.shape[3]:l.shape[1];H(p===u.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`)),H(Gi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const d={x:l,filter:u},h={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},f=Br.runKernel(ot,d,h);return c?ji(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),io=Yr({conv1d_:function(e,t,n,a,r="NWC",s=1,i){const o=Kr(e,"x","conv1d"),u=Kr(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=ji(o,[1,o.shape[0],o.shape[1]])),H(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),H(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=i&&H(Z(a),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),H(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),H(Gi(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),H("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const p=ji(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=ji(l,[l.shape[0],1,l.shape[1],l.shape[2]]),h=so(d,p,[1,n],a,"NHWC",[1,s],i);return ji(h,c?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),oo=Yr({conv2DBackpropInput_:function(e,t,n,a,r,s="NHWC",i){H(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=ji(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),H(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),H(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),H(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],p="NHWC"===s?u.shape[3]:u.shape[1];H(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),H(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&H(Z(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const d={dy:u,filter:n},h={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Br.runKernel(lt,d,h);return l?ji(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),uo=Yr({conv2dTranspose_:function(e,t,n,a,r,s){const i=Kr(e,"x","conv2dTranspose"),o=Kr(t,"filter","conv2dTranspose");return oo(n,i,o,a,r,"NHWC",s)}}),lo=Yr({conv3d_:function(e,t,n,a,r="NDHWC",s=[1,1,1]){const i=Kr(e,"x","conv3d"),o=Kr(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=ji(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),H(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),H(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),H(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),H(Gi(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),H("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:u,filter:o},p={strides:n,pad:a,dataFormat:r,dilations:s},d=Br.runKernel(ct,c,p);return l?ji(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),co=Yr({conv3DBackpropInput_:function(e,t,n,a,r){H(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=ji(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];H(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),H(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),H(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),H(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),H(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},p={pad:r,strides:a,inputShape:s},d=Br.runKernel(dt,c,p);return o?ji(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),po=Yr({conv3dTranspose_:function(e,t,n,a,r){const s=Kr(e,"x","conv3dTranspose"),i=Kr(t,"filter","conv3dTranspose");return co(n,s,i,a,r)}}),ho=Yr({depthwiseConv2d_:function(e,t,n,a,r="NHWC",s=[1,1],i){const o=Kr(e,"x","depthwiseConv2d","float32"),u=Kr(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=ji(o,[1,o.shape[0],o.shape[1],o.shape[2]])),H(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),H(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),H(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&H(Z(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={x:l,filter:u},d={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},h=Br.runKernel(xt,p,d);return c?ji(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),fo=Yr({floorDiv_:function(e,t){let n=Kr(e,"a","floorDiv"),a=Kr(t,"b","floorDiv");[n,a]=Rr(n,a);const r={a:n,b:a};return Br.runKernel(Pt,r)}}),mo=Yr({div_:function(e,t){let n=Kr(e,"a","div"),a=Kr(t,"b","div");if([n,a]=Rr(n,a),"int32"===n.dtype&&"int32"===a.dtype)return fo(n,a);const r={a:n,b:a};return Br.runKernel(Tt,r,{})}}),go=Yr({elu_:function(e){const t={x:Kr(e,"x","elu","float32")};return Br.runKernel($t,t)}});function yo(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&1===i&&a.unshift(s)}return a}function bo(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,i=t[s];(null==r||1===r&&i>1)&&n.unshift(s)}return n}function xo(e,t){const n=[],a=Math.max(e.length,t.length);for(let r=0;r<a;r++){let a=e[e.length-r-1];null==a&&(a=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===a)n.unshift(s);else if(1===s)n.unshift(a);else{if(a!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(a)}}return n}const wo=Yr({equal_:function(e,t){let n=Kr(e,"a","equal","string_or_numeric"),a=Kr(t,"b","equal","string_or_numeric");[n,a]=Rr(n,a),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(_t,r)}}),vo=Yr({exp_:function(e){const t={x:Kr(e,"x","exp")};return Br.runKernel(Rt,t)}}),ko=Yr({expandDims_:function(e,t=0){const n=Kr(e,"x","expandDims","string_or_numeric");H(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return Br.runKernel(Ft,a,r)}}),Io=Yr({tile_:function(e,t){const n=Kr(e,"x","tile","string_or_numeric");H(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const a={x:n},r={reps:t};return Br.runKernel(ka,a,r)}}),No=Yr({eye_:function(e,t,n,a="float32"){null==t&&(t=e);const r=Os([e,t],a),s=e<=t?e:t;for(let e=0;e<s;++e)r.set(1,e,e);const i=ji(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Io(ko(i,0),[n[0],1,1]);if(2===n.length)return Io(ko(ko(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Io(ko(ko(ko(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function So(e,t,n){const a={shape:e,value:t,dtype:n};return Br.runKernel(Mt,{},a)}const To=Yr({floor_:function(e){const t={x:Kr(e,"x","floor","float32")};return Br.runKernel(zt,t)}}),Co=Yr({gather_:function(e,t,n=0,a=0){const r={x:Kr(e,"x","gather"),indices:Kr(t,"indices","gather","int32")},s={axis:n,batchDims:a};return Br.runKernel(Wt,r,s)}}),$o=Yr({greater_:function(e,t){let n=Kr(e,"a","greater","string_or_numeric"),a=Kr(t,"b","greater","string_or_numeric");[n,a]=Rr(n,a),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(Ut,r)}}),Eo=Yr({greaterEqual_:function(e,t){let n=Kr(e,"a","greaterEqual","string_or_numeric"),a=Kr(t,"b","greaterEqual","string_or_numeric");[n,a]=Rr(n,a),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(Gt,r)}}),Ao=Yr({leakyRelu_:function(e,t=.2){const n={x:Kr(e,"x","leakyRelu")},a={alpha:t};return Br.runKernel(Zt,n,a)}}),_o=Yr({log_:function(e){const t={x:Kr(e,"x","log","float32")};return Br.runKernel(tn,t)}}),Ro=Yr({log1p_:function(e){const t={x:Kr(e,"x","log1p")};return Br.runKernel(nn,t)}}),Fo=Yr({max_:function(e,t=null,n=!1){const a={x:Kr(e,"x","max")},r={reductionIndices:t,keepDims:n};return Br.runKernel(ln,a,r)}}),Do=Yr({mul_:function(e,t){let n=Kr(e,"a","mul"),a=Kr(t,"b","mul");[n,a]=Rr(n,a);const r={a:n,b:a};return Br.runKernel(kn,r)}}),Oo=Yr({sub_:function(e,t){let n=Kr(e,"a","sub"),a=Kr(t,"b","sub");[n,a]=Rr(n,a);const r={a:n,b:a};return Br.runKernel(xa,r)}}),Mo=Yr({sum_:function(e,t=null,n=!1){let a=Kr(e,"x","sum");"bool"===a.dtype&&(a=Ms(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Br.runKernel(ra,r,s)}}),Lo=Yr({logSoftmax_:function(e,t=-1){const n=Kr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const a=Si(((e,n)=>{const a=Fo(e,t,!0),r=Oo(e,a),s=Oo(Ms(r,"float32"),_o(Mo(vo(r),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[a]=n,r=vo(a);return Oo(e,Do(Mo(e,t,!0),r))}}}));return a(n)}}),zo=Yr({logicalAnd_:function(e,t){const n=Kr(e,"a","logicalAnd","bool"),a=Kr(t,"b","logicalAnd","bool");xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(an,r)}}),Po=Yr({matMul_:function(e,t,n=!1,a=!1){let r=Kr(e,"a","matMul"),s=Kr(t,"b","matMul");[r,s]=Rr(r,s);const i={a:r,b:s},o={transposeA:n,transposeB:a};return Br.runKernel(Ze,i,o)}}),Bo=Yr({maxPool_:function(e,t,n,a,r){const s=Kr(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=ji(s,[1,s.shape[0],s.shape[1],s.shape[2]])),H(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),H(Gi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=r&&H(Z(a),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`));const u={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r},c=Br.runKernel(pn,u,l);return o?ji(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Wo=Yr({maxPool3d_:function(e,t=[1,1,1],n,a,r,s="NDHWC"){const i=Kr(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=ji(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),H(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),H("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=r&&H(Z(a),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${a}.`));const l={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},p=Br.runKernel(hn,l,c);return u?ji(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Vo=Yr({maximum_:function(e,t){let n=Kr(e,"a","maximum"),a=Kr(t,"b","maximum");[n,a]=Rr(n,a),"bool"===n.dtype&&(n=Ms(n,"int32"),a=Ms(a,"int32")),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(cn,r)}}),Uo=Yr({mean_:function(e,t=null,n=!1){const a={x:Kr(e,"x","mean")},r={axis:t,keepDims:n};return Br.runKernel(gn,a,r)}}),Go=Yr({minimum_:function(e,t){let n=Kr(e,"a","minimum"),a=Kr(t,"b","minimum");[n,a]=Rr(n,a),"bool"===n.dtype&&(n=Ms(n,"int32"),a=Ms(a,"int32")),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(bn,r)}});function Ho(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function jo(e,t,n){const a=e.length+t.length,r=[];let s=0,i=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[s++]):r.push(t[i++]);return r}function qo(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Ko(e,t){return jo(e,t.map((e=>1)),t)}function Xo(e,t,n){H(Ho(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Yo(e,t){if(Ho(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function Zo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Jo(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Qo=Yr({square_:function(e){const t=Kr(e,"x","square");return Br.runKernel("Square",{x:t},{})}}),eu=Yr({moments_:function(e,t=null,n=!1){const a=ne(t,(e=Kr(e,"x","moments")).shape),r=Uo(e,a,n);let s=r.shape;n||(s=Ko(r.shape,a));const i=Qo(Oo(Ms(e,"float32"),ji(r,s)));return{mean:r,variance:Uo(i,a,n)}}}),tu=Yr({neg_:function(e){const t={x:Kr(e,"x","neg")};return Br.runKernel(In,t)}}),nu=Yr({notEqual_:function(e,t){let n=Kr(e,"a","notEqual","string_or_numeric"),a=Kr(t,"b","notEqual","string_or_numeric");[n,a]=Rr(n,a),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(Nn,r)}}),au=Yr({oneHot_:function(e,t,n=1,a=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:Kr(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:a};return Br.runKernel(En,r,s)}});function ru(e,t="float32"){if("complex64"===t){const t=ru(e,"float32"),n=ru(e,"float32");return Zr(t,n)}const n=be(X(e),t);return Br.makeTensor(n,e,t)}function su(e,t="float32"){if("complex64"===t){const t=su(e,"float32"),n=ru(e,"float32");return Zr(t,n)}const n=ye(X(e),t);return Br.makeTensor(n,e,t)}const iu=Yr({onesLike_:function(e){const t={x:Kr(e,"x","onesLike")};return Br.runKernel($n,t)}}),ou=Yr({pad_:function(e,t,n=0){const a=Kr(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return Br.runKernel(_n,s,r)}}),uu=Yr({prelu_:function(e,t){const n={x:Kr(e,"x","prelu"),alpha:Kr(t,"alpha","prelu")};return Br.runKernel(Fn,n)}});var lu=n(3129);class cu{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=lu.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class pu{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=lu.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const du=Yr({randomNormal_:function(e,t=0,n=1,a,r){if(null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);const s=new cu(t,n,a,!1,r),i=Os(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),hu=Yr({randomUniform_:function(e,t=0,n=1,a="float32",r){const s=Os(e,a),i=new pu(t,n,null,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),fu=Yr({relu_:function(e){const t={x:Kr(e,"x","relu")};return Br.runKernel(zn,t)}}),mu=Yr({reverse_:function(e,t){const n={x:Kr(e,"x","reverse")},a={dims:t};return Br.runKernel(Hn,n,a)}}),gu=Yr({selu_:function(e){const t={x:Kr(e,"x","selu")};return Br.runKernel(Yn,t)}}),yu=Yr({separableConv2d_:function(e,t,n,a,r,s=[1,1],i="NHWC"){const o=Kr(e,"x","separableConv2d"),u=Kr(t,"depthwiseFilter","separableConv2d"),l=Kr(n,"pointwiseFilter","separableConv2d");let c=o,p=!1;if(3===o.rank&&(p=!0,c=ji(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");H(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),H(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),H(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),H(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),H(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],h=u.shape[3];H(l.shape[2]===d*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${l.shape[2]}.`));const f=ho(c,u,a,r,i,s),m=so(f,l,1,"valid",i);return p?ji(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),bu=Yr({sigmoid_:function(e){const t={x:Kr(e,"x","sigmoid","float32")};return Br.runKernel(ta,t)}}),xu=Yr({slice_:function(e,t,n){const a=Kr(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return Br.runKernel(Zn,r,s)}}),wu=Yr({slice1d_:function(e,t,n){const a=Kr(e,"x","slice1d");return H(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),xu(a,[t],[n])}}),vu=Yr({slice2d_:function(e,t,n){const a=Kr(e,"x","slice2d");return H(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),xu(a,t,n)}}),ku=Yr({slice3d_:function(e,t,n){const a=Kr(e,"x","slice3d");return H(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),xu(a,t,n)}}),Iu=Yr({slice4d_:function(e,t,n){const a=Kr(e,"x","slice4d");return H(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),xu(a,t,n)}}),Nu=Yr({softmax_:function(e,t=-1){const n=Kr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const a={logits:n},r={dim:t};return Br.runKernel(oa,a,r)}}),Su=Yr({softplus_:function(e){const t={x:Kr(e,"x","softplus")};return Br.runKernel(na,t)}}),Tu=Yr({split_:function(e,t,n=0){const a={x:Kr(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Br.runKernel(ia,a,r)}}),Cu=Yr({sqrt_:function(e){const t={x:Kr(e,"x","sqrt","float32")};return Br.runKernel(aa,t)}}),$u=Yr({squeeze_:function(e,t){const n=Kr(e,"x","squeeze");return ji(n,ae(n.shape,t).newShape)}}),Eu=Yr({stack_:function(e,t=0){const n=Xr(e,"tensors","stack","string_or_numeric");H(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&H(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return Br.runKernel(An,a,r)}}),Au=Yr({tanh_:function(e){const t={x:Kr(e,"x","tanh","float32")};return Br.runKernel(va,t)}});function _u(e,t){q(e);const n=Hr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Jr(e,null,n,t)}function Ru(e,t,n){if(q(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=Hr(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Jr(e,t,a,n)}const Fu=Yr({truncatedNormal_:function(e,t=0,n=1,a,r){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new cu(t,n,a,!0,r),i=Os(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Du=Yr({unstack_:function(e,t=0){const n=Kr(e,"x","unstack","string_or_numeric");H(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const a={value:n},r={axis:t};return Br.runKernel(Ca,a,r)}}),Ou=Yr({broadcastTo_:function(e,t){let n=Kr(e,"broadcastTo","x");const a=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ji(n,e)}const r=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ls(n);const i={x:n},o={reps:s};return Br.runKernel(ka,i,o)}}),Mu=Yr({where_:function(e,t,n){const a=Kr(t,"a","where"),r=Kr(n,"b","where"),s=Kr(e,"condition","where","bool"),i=xo(xo(s.shape,a.shape),r.shape),o={condition:Ou(s,i),t:Ou(a,i),e:Ou(r,i)};return Br.runKernel(Xn,o)}}),Lu=Yr({zerosLike_:function(e){const t={x:Kr(e,"x","zerosLike")};return Br.runKernel(Ea,t)}}),zu=Yr({transpose_:function(e,t){const n=Kr(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),H(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{H(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const a={x:n},r={perm:t};return Br.runKernel(Sa,a,r)}}),Pu=Yr({dropout_:function(e,t,n,a){const r=Kr(e,"x","dropout");if(H("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),H(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof vr?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(Y(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),i=1-t,o=mo(To(Ei(hu(s,0,1,"float32",a),i)),i);return Do(r,o)}}),Bu=Yr({imag_:function(e){const t={input:Kr(e,"input","imag")};return Br.runKernel(qt,t)}}),Wu=Yr({real_:function(e){const t={input:Kr(e,"input","real")};return Br.runKernel(Mn,t)}}),Vu=Yr({fft_:function(e){H("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Br.runKernel(Ot,t)}}),Uu=Yr({rfft_:function(e,t){H("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=xu(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=eo([e,ru(a)],e.shape.length-1),n=t}else r=e;const s=Lu(r),i=ji(Zr(r,s),[a,n]),o=Vu(i),u=Math.floor(n/2)+1,l=Wu(o),c=Bu(o),p=Tu(l,[u,n-u],l.shape.length-1),d=Tu(c,[u,n-u],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=u,ji(Zr(p[0],d[0]),h)}}),Gu=Yr({ifft_:function(e){H("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Br.runKernel(jt,t)}}),Hu=Yr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=ji(e,[n,t]);a=Gu(r)}else{const r=[n,2*(t-1)],s=ji(Wu(e),[n,t]),i=ji(Bu(e),[n,t]),o=mu(xu(s,[0,1],[n,t-2]),1),u=Do(mu(xu(i,[0,1],[n,t-2]),1),Ti(-1)),l=eo([s,o],1),c=eo([i,u],1),p=ji(Zr(l,c),[r[0],r[1]]);a=Gu(p)}if(a=Wu(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=ji(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}}),ju=Yr({conv2DBackpropFilter_:function(e,t,n,a,r,s="NHWC",i){let o=e;3===e.rank&&(o=ji(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ji(t,[1,t.shape[0],t.shape[1],t.shape[2]])),H(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),H(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),H(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];H(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),H(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&H(Z(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p={x:o,dy:u},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return Br.runKernel(ut,p,d)}}),qu=Yr({relu6_:function(e){const t={x:Kr(e,"x","relu6")};return Br.runKernel(Gn,t)}}),Ku=Yr({step_:function(e,t=0){const n={x:Kr(e,"x","step")},a={alpha:t};return Br.runKernel(Aa,n,a)}});function Xu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Do(e,Ku(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Yu(e,t){let n=t;const a=bo(e.shape,t.shape);return a.length>0&&(n=Mo(n,a)),ji(n,e.shape)}function Zu(e,t,n,a){if("linear"===t)return e;if("relu"===t)return fu(e);if("elu"===t)return go(e);if("relu6"===t)return qu(e);if("prelu"===t)return uu(e,n);if("leakyrelu"===t)return Ao(e,a);if("sigmoid"===t)return bu(e);throw new Error(`Unknown fused activation ${t}.`)}const Ju=(e,t)=>!(e>0)||"linear"===t,Qu=Yr({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Ju(Br.state.gradientDepth,u)){let p=so(e,t,n,a,r,s,i);return null!=o&&(p=Ei(p,o)),Zu(p,u,l,c)}const p=Kr(e,"x","conv2d","float32"),d=Kr(t,"filter","conv2d","float32");let h=p,f=!1;3===p.rank&&(f=!0,h=ji(p,[1,p.shape[0],p.shape[1],p.shape[2]])),H(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),H(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&H(Z(a),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),H(h.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),H(Gi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),H("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=Mi(h.shape,d.shape,n,s,a,i);let g,y;null!=o&&(g=Kr(o,"bias","fused conv2d"),[g]=Rr(g,p),xo(m.outShape,g.shape)),null!=l&&(y=Kr(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[r,i,o,l]=t,c=Xu(e,o,u);H(Ui(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const p=[oo(i.shape,c,r,n,a),ju(i,c,r.shape,n,a)];if(null!=l){const e=Yu(l,c);p.push(e)}return p},x={x:h,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Si(((e,t,n)=>{let a=Br.runKernel(Da,x,w);return n([t,e,a]),f&&(a=ji(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(h,d)}{const e=Si(((e,t,n,a)=>{let r=Br.runKernel(Da,x,w);return a([t,e,r,n]),f&&(r=ji(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(h,d,g)}}}),el=Yr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r,s=[1,1],i){let o=e;3===e.rank&&(o=ji(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ji(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return Br.runKernel(wt,l,c)}}),tl=Yr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=ji(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},p=Br.runKernel(vt,l,c);return u?ji(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),nl=Yr({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Ju(Br.state.gradientDepth,u)){let p=ho(e,t,n,a,r,s,i);return null!=o&&(p=Ei(p,o)),Zu(p,u,l,c)}const p=Kr(e,"x","depthwiseConv2d","float32"),d=Kr(t,"filter","depthwiseConv2d","float32");let h=p,f=!1;3===p.rank&&(f=!0,h=ji(p,[1,p.shape[0],p.shape[1],p.shape[2]])),H(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),H(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),H(h.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),H(Gi(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&H(Z(a),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${a}.`));const m=Mi(h.shape,d.shape,n,s,a,i,!0);let g,y;null!=o&&(g=Kr(o,"bias","fused conv2d"),[g]=Rr(g,p),xo(m.outShape,g.shape)),null!=l&&(y=Kr(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{H(Ui(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[r,o,l,c]=t,p=Xu(e,l,u),d=tl(o.shape,p,r,n,a,s,i),h=el(o,p,r.shape,n,a,s,i);return null!=c?[d,h,Yu(g,p)]:[d,h]},x={x:h,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Si(((e,t,n)=>{let a=Br.runKernel(Oa,x,w);return n([t,e,a]),f&&(a=ji(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(h,d)}{const e=Si(((e,t,n,a)=>{let r=Br.runKernel(Oa,x,w);return a([t,e,r,n]),f&&(r=ji(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(h,d,g)}}}),al=Yr({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Ju(Br.state.gradientDepth,s)){let u=Po(e,t,n,a);return null!=r&&(u=Ei(u,r)),Zu(u,s,i,o)}let u=Kr(e,"a","fused matMul"),l=Kr(t,"b","fused matMul");[u,l]=Rr(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=a?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=X(f),y=X(m);H(u.rank>=2&&l.rank>=2&&u.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`)),H(Y(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`)),H(c===p,(()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${a} must match.`));const b=u.shape.slice(0,-2).concat([d,h]),x=ji(u,n?[g,c,d]:[g,d,c]),w=ji(l,a?[y,h,p]:[y,p,h]);let v,k;null!=r&&(v=Kr(r,"bias","fused matMul"),[v]=Rr(v,u),xo(b,v.shape)),null!=i&&(k=Kr(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=Xu(ji(e,u.shape),u,s);let p,d;return n||a?!n&&a?(p=Po(c,o,!1,!1),d=Po(c,i,!0,!1)):n&&!a?(p=Po(o,c,!1,!0),d=Po(i,c,!1,!1)):(p=Po(o,c,!0,!0),d=Po(c,i,!0,!0)):(p=Po(c,o,!1,!0),d=Po(i,c,!0,!1)),null!=r?[p,d,Yu(l,c)]:[p,d]},N={a:x,b:w,bias:v,preluActivationWeights:k},S={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:o};if(null==r){const e=Si(((e,t,n)=>{const a=Br.runKernel(Fa,N,S);return n([e,t,a]),{value:ji(a,b),gradFunc:I}}));return e(x,w)}{const e=Si(((e,t,n,a)=>{const r=Br.runKernel(Fa,N,S);return a([e,t,r,n]),{value:ji(r,b),gradFunc:I}}));return e(x,w,v)}}});function rl(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(i)}return _u(r,"float32")}Yr({hammingWindow_:function(e){return rl(e,.54,.46)}});const sl=Yr({hannWindow_:function(e){return rl(e,.5,.5)}}),il=Yr({frame_:function(e,t,n,a=!1,r=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(xu(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,o=eo([xu(e,s,t-a),So([a],r)]);i.push(o),s+=n}return 0===i.length?Ru([],[0,t]):ji(eo(i),[i.length,t])}});Yr({stft_:function(e,t,n,a,r=sl){var s;null==a&&(s=t,a=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=il(e,t,n),o=Do(i,r(t));return Uu(o,a)}});const ol=Yr({cropAndResize_:function(e,t,n,a,r="bilinear",s=0){const i=Kr(e,"image","cropAndResize"),o=Kr(t,"boxes","cropAndResize","float32"),u=Kr(n,"boxInd","cropAndResize","int32"),l=o.shape[0];H(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),H(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),H(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),H(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),H(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),H("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:u},p={method:r,extrapolationValue:s,cropSize:a};return Br.runKernel(gt,c,p)}}),ul=Yr({flipLeftRight_:function(e){const t=Kr(e,"image","flipLeftRight","float32");H(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Br.runKernel(Lt,n,{})}}),ll=Yr({grayscaleToRGB_:function(e){const t=Kr(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];H(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),H(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Io(t,r)}}),cl=Yr({rotateWithOffset_:function(e,t,n=0,a=.5){const r=Kr(e,"image","rotateWithOffset","float32");H(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const s={image:r},i={radians:t,fillValue:n,center:a};return Br.runKernel(Ra,s,i)}});function pl(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),H(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),H(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),H(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),H(1===t.rank,(()=>"scores must be a 1D tensor")),H(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),H(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const dl=Yr({nonMaxSuppression_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){const s=Kr(e,"boxes","nonMaxSuppression","float32"),i=Kr(t,"scores","nonMaxSuppression","float32"),o=pl(s,i,n,a,r),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Br.runKernel(Sn,{boxes:s,scores:i},u)}});function hl(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);const o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}(e,t,n||fl)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function fl(e,t){return e>t?1:e<t?-1:0}function ml(e,t,n,a,r){return bl(e,t,n,a,r,0)}function gl(e,t,n,a,r,s){return bl(e,t,n,a,r,0,!1,s,!0)}function yl(e,t,n,a,r,s){return bl(e,t,n,a,r,s,!0)}function bl(e,t,n,a,r,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>r&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(vl);const c=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=p.length-1;n>=i;--n){const i=xl(e,s,p[n]);if(i>=a){o=!0;break}if(t.score=t.score*wl(a,c,i),t.score<=r)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>r&&hl(l,t,vl))}const h=p.length,f=n-h;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:p};return i&&(m.selectedScores=d),u&&(m.validOutputs=h),m}function xl(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),u=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(o-s)*(u-i),f=(p-l)*(d-c);if(h<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,p),b=Math.min(u,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(h+f-x)}function wl(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function vl(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const kl=Yr({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){const i=Kr(e,"boxes","nonMaxSuppression"),o=Kr(t,"scores","nonMaxSuppression"),u=pl(i,o,n,a,r,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:a=u.iouThreshold,scoreThreshold:r=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},p=Br.runKernel(Cn,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}}),Il=Yr({nonMaxSuppressionPadded_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){const i=Kr(e,"boxes","nonMaxSuppression"),o=Kr(t,"scores","nonMaxSuppression"),u=pl(i,o,n,a,r,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},p=Br.runKernel(Tn,l,c);return{selectedIndices:p[0],validOutputs:p[1]}}}),Nl=Yr({resizeBilinear_:function(e,t,n=!1,a=!1){const r=Kr(e,"images","resizeBilinear");H(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),H(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),H(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=ji(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:a,size:t},l=Br.runKernel(Vn,o,u);return i?ji(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Sl=Yr({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){const r=Kr(e,"images","resizeNearestNeighbor");H(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),H(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),H("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),H(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=ji(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:a,size:t},l=Br.runKernel(Bn,o,u);return i?ji(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Tl=Yr({bincount_:function(e,t,n){const a=Kr(e,"x","bincount"),r=Kr(t,"weights","bincount");H("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),H(n>=0,(()=>`size must be non-negative, but got ${n}.`)),H(r.size===a.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`));const s={x:a,weights:r},i={size:n};return Br.runKernel(Qe,s,i)}}),Cl=Yr({lessEqual_:function(e,t){let n=Kr(e,"a","lessEqual","string_or_numeric"),a=Kr(t,"b","lessEqual","string_or_numeric");[n,a]=Rr(n,a),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(Qt,r)}}),$l=Yr({round_:function(e){const t={x:Kr(e,"x","round")};return Br.runKernel(jn,t)}});function El(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return Br.runKernel(On,{},r)}const Al=Yr({threshold_:function(e,t="binary",n=!1,a=.5){const r=Kr(e,"image","threshold"),s=r.shape[0]*r.shape[1];let i,o,u,l,c=Do(_u([a]),255);if(H(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),H(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),H("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),H("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,u]=Tu(r,[1,1,1],-1);const e=Do(i,.2989),t=Do(o,.587),n=Do(u,.114);l=Ei(Ei(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,a,r,s,i,o,u=_u([-1]),l=_u([0]),c=_u([0]);for(let p=0;p<e.size-1;p++){n=xu(e,0,p+1),a=xu(e,p+1),i=mo(Mo(n),t),o=mo(Mo(a),t);const d=Mo(Do(n,El(0,n.size)));r=mo(d,Mo(n));const h=So(a.shape,n.size),f=Ei(El(0,a.size),h),m=Do(a,f);s=mo(Mo(m),Mo(a));const g=Oo(r,s),y=Oo(r,s),b=Do(i,o);c=Do(Do(b,g),y);const x=$o(c,l);l=Mu(x,c,l),u=Mu(x,_u([p]),u)}return u}(Tl(Ms($l(l),"int32"),Qr([]),256),s));const p=n?Cl(l,c):$o(l,c);return Ms(Do(p,255),"int32")}}),_l=Yr({transform_:function(e,t,n="nearest",a="constant",r=0,s){const i=Kr(e,"image","transform","float32"),o=Kr(t,"transforms","transform","float32");H(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),H(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),H(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return Br.runKernel(Na,u,l)}}),Rl=Yr({bandPart_:function(e,t,n){H(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),H(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const a=Kr(e,"a","bandPart");H(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));const r=a.shape,[s,i]=a.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=ji(El(0,s,1,"int32"),[-1,1]),u=El(0,i,1,"int32"),l=Oo(o,u),c=zo(Cl(l,Ti(+t,"int32")),Eo(l,Ti(-n,"int32"))),p=ru([s,i],a.dtype);return ji(Eu(Du(ji(a,[-1,s,i])).map((e=>Mu(c,e,p)))),r)}}),Fl=Yr({min_:function(e,t=null,n=!1){const a={x:Kr(e,"x","min")},r={axis:t,keepDims:n};return Br.runKernel(yn,a,r)}}),Dl=Yr({pow_:function(e,t){let n=Kr(e,"base","pow"),a=Kr(t,"exp","pow");[n,a]=Rr(n,a);const r={a:n,b:a};return Br.runKernel(Rn,r)}});function Ol(e,t,n=null){if(0===e.rank)return $i(e);if(1!==e.rank&&null===n)return Ol(ji(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Mo($i(e),n);if(t===1/0)return Fo($i(e),n);if(t===-1/0)return Fl($i(e),n);if("euclidean"===t||2===t)return Cu(Mo(Dl($i(e),Ti(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Fo(Mo($i(e),n[0]),n[1]-1);if(t===1/0)return Fo(Mo($i(e),n[1]),n[0]);if(t===-1/0)return Fl(Mo($i(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Cu(Mo(Qo(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ml=Yr({norm_:function(e,t="euclidean",n=null,a=!1){const r=Ol(e=Kr(e,"x","norm"),t,n);let s=r.shape;if(a){const t=ne(n,e.shape);s=Ko(r.shape,t)}return ji(r,s)}}),Ll=Yr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,H(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)H(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Tu(e,e.shape[0],0).map((e=>$u(e,[0])));H(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],a=e;for(let t=0;t<e.length;++t)n.push(Br.tidy((()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){const t=Do(Mo(Do(n[a],e)),n[a]);e=Oo(e,t)}return mo(e,Ml(e,"euclidean"))})));return t?Eu(n,0):n}});function zl(e,t=!1){return Br.tidy((()=>{H(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],a=e.shape[1];let r=No(n),s=Ls(e);const i=Ru([[1]],[1,1]);let o=Ls(i);const u=n>=a?a:n;for(let e=0;e<u;++e){const t=s,u=o,l=r;[o,s,r]=Br.tidy((()=>{const t=xu(s,[e,e],[n-e,1]),u=Ml(t),l=xu(s,[e,e],[1,1]),c=Mu($o(l,0),Ru([[-1]]),Ru([[1]])),p=Oo(l,Do(c,u)),d=mo(t,p);o=1===d.shape[0]?Ls(i):eo([i,xu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const h=tu(mo(Po(c,p),u)),f=xu(s,[e,0],[n-e,a]),m=Do(h,o),g=zu(o);if(0===e)s=Oo(f,Po(m,Po(g,f)));else{const t=Oo(f,Po(m,Po(g,f)));s=eo([xu(s,[0,0],[e,a]),t],0)}const y=zu(m),b=xu(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Oo(b,Po(Po(b,o),y));else{const t=Oo(b,Po(Po(b,o),y));r=eo([xu(r,[0,0],[n,e]),t],1)}return[o,s,r]})),ki([t,u,l])}return!t&&n>a&&(r=xu(r,[0,0],[n,a]),s=xu(s,[0,0],[a,a])),[r,s]}))}const Pl=Yr({qr_:function(e,t=!1){if(H(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return zl(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=Du(ji(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];return a.forEach((e=>{const[n,a]=zl(e,t);r.push(n),s.push(a)})),[ji(Eu(r,0),e.shape),ji(Eu(s,0),e.shape)]}}});var Bl;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Bl||(Bl={}));const Wl=Yr({computeWeightedLoss_:function(e,t,n=Bl.SUM_BY_NONZERO_WEIGHTS){const a=Kr(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=Kr(t,"weights","computeWeightedLoss"));const s=null==r?a:Do(a,r);if(n===Bl.NONE)return s;if(n===Bl.SUM)return Mo(s);if(n===Bl.MEAN){if(null==r)return Uo(s);{const e=a.size/r.size,t=mo(Mo(s),Mo(r));return e>1?mo(t,Ti(e)):t}}if(n===Bl.SUM_BY_NONZERO_WEIGHTS){if(null==r)return mo(Mo(s),Ti(a.size));{const e=Do(r,su(a.shape)),t=Ms(Mo(nu(e,Ti(0))),"float32");return mo(Mo(s),t)}}throw Error(`Unknown reduction: ${n}`)}});Yr({absoluteDifference_:function(e,t,n,a=Bl.SUM_BY_NONZERO_WEIGHTS){const r=Kr(e,"labels","absoluteDifference"),s=Kr(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Kr(n,"weights","absoluteDifference")),j(r.shape,s.shape,"Error in absoluteDifference: ");const o=$i(Oo(r,s));return Wl(o,i,a)}}),Yr({cosineDistance_:function(e,t,n,a,r=Bl.SUM_BY_NONZERO_WEIGHTS){const s=Kr(e,"labels","cosineDistance"),i=Kr(t,"predictions","cosineDistance");let o=null;null!=a&&(o=Kr(a,"weights","cosineDistance")),j(s.shape,i.shape,"Error in cosineDistance: ");const u=Ti(1),l=Oo(u,Mo(Do(s,i),n,!0));return Wl(l,o,r)}}),Yr({hingeLoss_:function(e,t,n,a=Bl.SUM_BY_NONZERO_WEIGHTS){let r=Kr(e,"labels","hingeLoss");const s=Kr(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Kr(n,"weights","hingeLoss")),j(r.shape,s.shape,"Error in hingeLoss: ");const o=Ti(1);r=Oo(Do(Ti(2),r),o);const u=fu(Oo(o,Do(r,s)));return Wl(u,i,a)}}),Yr({huberLoss_:function(e,t,n,a=1,r=Bl.SUM_BY_NONZERO_WEIGHTS){const s=Kr(e,"labels","huberLoss"),i=Kr(t,"predictions","huberLoss");let o=null;null!=n&&(o=Kr(n,"weights","huberLoss")),j(s.shape,i.shape,"Error in huberLoss: ");const u=Ti(a),l=$i(Oo(i,s)),c=Go(l,u),p=Oo(l,c),d=Ei(Do(Ti(.5),Qo(c)),Do(u,p));return Wl(d,o,r)}}),Yr({logLoss_:function(e,t,n,a=1e-7,r=Bl.SUM_BY_NONZERO_WEIGHTS){const s=Kr(e,"labels","logLoss"),i=Kr(t,"predictions","logLoss");let o=null;null!=n&&(o=Kr(n,"weights","logLoss")),j(s.shape,i.shape,"Error in logLoss: ");const u=Ti(1),l=Ti(a),c=tu(Do(s,_o(Ei(i,l)))),p=Do(Oo(u,s),_o(Ei(Oo(u,i),l))),d=Oo(c,p);return Wl(d,o,r)}});const Vl=Yr({squaredDifference_:function(e,t){let n=Kr(e,"a","squaredDifference"),a=Kr(t,"b","squaredDifference");[n,a]=Rr(n,a),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(ha,r,{})}});Yr({meanSquaredError_:function(e,t,n,a=Bl.SUM_BY_NONZERO_WEIGHTS){const r=Kr(e,"labels","meanSquaredError"),s=Kr(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Kr(n,"weights","meanSquaredError")),j(r.shape,s.shape,"Error in meanSquaredError: ");const o=Vl(r,s);return Wl(o,i,a)}}),Yr({sigmoidCrossEntropy_:function(e,t,n,a=0,r=Bl.SUM_BY_NONZERO_WEIGHTS){let s=Kr(e,"multiClassLabels","sigmoidCrossEntropy");const i=Kr(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Kr(n,"weights","sigmoidCrossEntropy")),j(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=Ti(a),t=Ti(1),n=Ti(.5);s=Ei(Do(s,Oo(t,e)),Do(n,e))}const u=function(e,t){const n=Kr(e,"labels","sigmoidCrossEntropyWithLogits"),a=Kr(t,"logits","sigmoidCrossEntropyWithLogits");j(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=fu(a),s=Do(a,n),i=Ro(vo(tu($i(a))));return Ei(Oo(r,s),i)}(s,i);return Wl(u,o,r)}});const Ul=Yr({logSumExp_:function(e,t=null,n=!1){const a=Kr(e,"x","logSumExp"),r=ne(t,a.shape),s=Fo(a,r,!0),i=Oo(a,s),o=vo(i),u=Mo(o,r),l=_o(u),c=Ei(ji(s,l.shape),l);if(n){const e=Ko(c.shape,r);return ji(c,e)}return c}});Yr({softmaxCrossEntropy_:function(e,t,n,a=0,r=Bl.SUM_BY_NONZERO_WEIGHTS){let s=Kr(e,"onehotLabels","softmaxCrossEntropy");const i=Kr(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Kr(n,"weights","softmaxCrossEntropy")),j(s.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){const e=Ti(a),t=Ti(1),n=Ti(s.shape[1]);s=Ei(Do(s,Oo(t,e)),mo(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const a=Si(((e,t,a)=>{const r=Ul(t,[n],!0),s=Oo(Ms(t,"float32"),r);a([e,s]);const i=tu(Do(s,e));return{value:Mo(i,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=Ko(e.shape,[n]);return[Do(ji(e,s),Oo(Ms(a,"float32"),vo(r))),Do(ji(e,s),Oo(vo(r),Ms(a,"float32")))]}}}));return a(e,t)}(s,i);return Wl(u,o,r)}});const Gl=Yr({sparseFillEmptyRows_:function(e,t,n,a){const r=Kr(e,"indices","sparseFillEmptyRows"),s=Kr(t,"values","sparseFillEmptyRows"),i=Kr(n,"denseShape","sparseFillEmptyRows"),o=Kr(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:r,values:s,denseShape:i,defaultValue:o},l=Br.runKernel(ua,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Hl=Yr({sparseReshape_:function(e,t,n){const a=Kr(e,"inputIndices","sparseReshape"),r=Kr(t,"inputShape","sparseReshape"),s=Kr(n,"newShape","sparseReshape");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:a,inputShape:r,newShape:s},o=Br.runKernel(la,i);return{outputIndices:o[0],outputShape:o[1]}}}),jl=Yr({sparseSegmentMean_:function(e,t,n){const a=Kr(e,"data","sparseSegmentMean"),r=Kr(t,"indices","sparseSegmentMean"),s=Kr(n,"segmentIds","sparseSegmentMean");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:a,indices:r,segmentIds:s};return Br.runKernel(ca,i)}}),ql=Yr({sparseSegmentSum_:function(e,t,n){const a=Kr(e,"data","sparseSegmentSum"),r=Kr(t,"indices","sparseSegmentSum"),s=Kr(n,"segmentIds","sparseSegmentSum");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:a,indices:r,segmentIds:s};return Br.runKernel(pa,i)}}),Kl=Yr({stringNGrams_:function(e,t,n,a,r,s,i,o){const u=Kr(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Kr(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:u,dataSplits:l},d=Br.runKernel(ga,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Xl=Yr({stringSplit_:function(e,t,n=!0){const a=Kr(e,"input","stringSplit","string"),r=Kr(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const s={skipEmpty:n},i={input:a,delimiter:r},o=Br.runKernel(ya,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Yl=Yr({stringToHashBucketFast_:function(e,t){const n=Kr(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Br.runKernel(ba,r,a)}}),Zl={flipLeftRight:ul,grayscaleToRGB:ll,resizeNearestNeighbor:Sl,resizeBilinear:Nl,rotateWithOffset:cl,cropAndResize:ol,nonMaxSuppression:dl,nonMaxSuppressionAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){const s=Kr(e,"boxes","nonMaxSuppressionAsync"),i=Kr(t,"scores","nonMaxSuppressionAsync"),o=pl(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:p}=ml(l,c,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),_u(p,"int32")},nonMaxSuppressionWithScore:kl,nonMaxSuppressionWithScoreAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){const i=Kr(e,"boxes","nonMaxSuppressionAsync"),o=Kr(t,"scores","nonMaxSuppressionAsync"),u=pl(i,o,n,a,r,s);n=u.maxOutputSize,a=u.iouThreshold,r=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],p=l[1],{selectedIndices:d,selectedScores:h}=yl(c,p,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:_u(d,"int32"),selectedScores:_u(h)}},nonMaxSuppressionPadded:Il,nonMaxSuppressionPaddedAsync:async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){const i=Kr(e,"boxes","nonMaxSuppressionAsync"),o=Kr(t,"scores","nonMaxSuppressionAsync"),u=pl(i,o,n,a,r,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[d,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=gl(d,h,l,c,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:_u(f,"int32"),validOutputs:Ti(m,"int32")}},threshold:Al,transform:_l},Jl={bandPart:Rl,gramSchmidt:Ll,qr:Pl},Ql={sparseFillEmptyRows:Gl,sparseReshape:Hl,sparseSegmentMean:jl,sparseSegmentSum:ql},ec={stringNGrams:Kl,stringSplit:Xl,stringToHashBucketFast:Yl};class tc extends Ci{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Br.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Br.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:vi((()=>Lu(a).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:vi((()=>Lu(a).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;vi((()=>{const e=Ei(Do(s,this.rho),Do(Qo(r),1-this.rho)),t=Do(mo(Cu(Ei(i,this.epsilon)),Cu(Ei(s,this.epsilon))),r),n=Ei(Do(i,this.rho),Do(Qo(t),1-this.rho));s.assign(e),i.assign(n);const o=Ei(Do(t,-this.learningRate),a);a.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ki(this.accumulatedGrads.map((e=>e.variable))),ki(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}tc.className="Adadelta",bi(tc);class nc extends Ci{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Br.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:vi((()=>So(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;vi((()=>{const e=Ei(s,Qo(r));s.assign(e);const t=Ei(Do(mo(r,Cu(Ei(e,Br.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ki(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}nc.className="Adagrad",bi(nc);class ac extends Ci{constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],vi((()=>{this.accBeta1=Ti(t).variable(),this.accBeta2=Ti(n).variable()})),null==a&&(this.epsilon=Br.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);vi((()=>{const n=Oo(1,this.accBeta1),a=Oo(1,this.accBeta2);t.forEach(((t,r)=>{const s=Br.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:vi((()=>Lu(s).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:vi((()=>Lu(s).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,l=Ei(Do(o,this.beta1),Do(i,1-this.beta1)),c=Ei(Do(u,this.beta2),Do(Qo(i),1-this.beta2)),p=mo(l,n),d=mo(c,a);o.assign(l),u.assign(c);const h=Ei(Do(mo(p,Ei(Cu(d),this.epsilon)),-this.learningRate),s);s.assign(h)})),this.accBeta1.assign(Do(this.accBeta1,this.beta1)),this.accBeta2.assign(Do(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ki(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ki(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),vi((()=>{this.accBeta1.assign(Dl(this.beta1,this.iterations_+1)),this.accBeta2.assign(Dl(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}ac.className="Adam",bi(ac);class rc extends Ci{constructor(e,t,n,a=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],vi((()=>{this.iteration=Ti(0).variable(),this.accBeta1=Ti(t).variable()})),null==a&&(this.epsilon=Br.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);vi((()=>{const n=Oo(1,this.accBeta1),a=mo(-this.learningRate,Ei(Do(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=Br.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Lu(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:Lu(s).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,l=Ei(Do(o,this.beta1),Do(i,1-this.beta1)),c=Do(u,this.beta2),p=$i(i),d=Vo(c,p);o.assign(l),u.assign(d);const h=Ei(Do(mo(a,n),mo(l,Ei(d,this.epsilon))),s);s.assign(h)})),this.iteration.assign(Ei(this.iteration,1)),this.accBeta1.assign(Do(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ki(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ki(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}rc.className="Adamax",bi(rc);class sc extends Ci{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=Br.registeredVariables[t];vi((()=>{const e=Ei(Do(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ii(Ti(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}sc.className="SGD",bi(sc);class ic extends sc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ti(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Br.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:vi((()=>Lu(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&vi((()=>{let e;const t=Ei(Do(this.m,r),s);e=this.useNesterov?Ei(Do(this.c,Ei(s,Do(t,this.m))),a):Ei(Do(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ki(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}ic.className="Momentum",bi(ic);class oc extends Ci{constructor(e,t=.9,n=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Br.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Br.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:vi((()=>Lu(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:vi((()=>Lu(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:vi((()=>Lu(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;vi((()=>{const e=Ei(Do(i,this.decay),Do(Qo(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Ei(Do(t,this.decay),Do(s,1-this.decay)),u=mo(Do(s,this.learningRate),Cu(Oo(e,Ei(Qo(r),this.epsilon)))),l=Ei(Do(o,this.momentum),u);i.assign(e),t.assign(r),o.assign(l);const c=Oo(a,l);a.assign(c)}else{const e=Ei(Do(i,this.decay),Do(Qo(s),1-this.decay)),t=Ei(Do(o,this.momentum),mo(Do(s,this.learningRate),Cu(Ei(e,this.epsilon))));i.assign(e),o.assign(t);const n=Oo(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ki(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ki(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ki(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}oc.className="RMSProp",bi(oc);class uc{static sgd(e){return new sc(e)}static momentum(e,t,n=!1){return new ic(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new oc(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new ac(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new tc(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new rc(e,t,n,a,r)}static adagrad(e,t=.1){return new nc(e,t)}}const lc={sgd:uc.sgd,momentum:uc.momentum,adadelta:uc.adadelta,adagrad:uc.adagrad,rmsprop:uc.rmsprop,adamax:uc.adamax,adam:uc.adam},cc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function pc(){return new Promise((e=>cc((()=>e()))))}function dc(e,t){const n=e[0].length;e.forEach(((e,t)=>{H(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),H(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)H(s===t||e[s]===a[s],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`))}))}function hc(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}const fc=30;function mc(e){return e<=fc?e:he(e,Math.floor(Math.sqrt(e)))}function gc(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function yc(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function bc(e,t,n=!0){const a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{const n=[],r=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function xc(e,t,n,a=!0){const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function wc(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function vc(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}const kc=1.7580993408473768,Ic=1.0507009873554805,Nc=.3275911,Sc=.254829592,Tc=-.284496736,Cc=1.421413741,$c=-1.453152027,Ec=1.061405429;function Ac(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function _c(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Rc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function Fc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function Dc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Oc(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Mc(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Lc(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const zc=/->/g;function Pc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(zc,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[a,r]=e.split("->");H(-1===a.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=a.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){const t=a[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=r.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Bc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Wc(e,t,n){const a=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=r[n]:H(a[t[e][n]]===r[n],(()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function Vc(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)a.push([]);const s=[];for(let e=0;e<n.length;++e){const r=Gc(t,n[e]);for(const t of r)-1===s.indexOf(t)&&(a[e].push(t),s.push(t))}return{path:n,steps:a}}function Uc(e){return e.every(((e,t)=>e===t))}function Gc(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Hc(e,t,n=0){let a=[];if("number"==typeof t)H(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);H(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}H(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function jc(e,t){let n,a=!1;for(e<=fc?(n=e,a=!0):n=he(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=he(e,n+1);return n}function qc(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function Kc(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<a;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=a;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Xc(e){try{return e.map((e=>ur(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Yc(e){return e.map((e=>or(e)))}function Zc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=Os(e,"int32"),r=Os([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=a.indexToLoc(n[t]),i=t*e.length;r.values.set(s,i)}return r.toTensor()}var Jc,Qc;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Jc||(Jc={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Qc||(Qc={}));const ep={};function tp(e){return ep[e]}function np(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return ap(t.inputNames[s.inputIndexStart],n,a,r);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>ap(e,n,a,r)));const o=ap(t.inputNames.slice(e)[0],n,a,r),u=o.dataSync();return"number"===s.type?u[0]:ge(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function ap(e,t,n,a){const[r,s]=ip(e);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[sp(r,e)]));return void 0!==i?t[sp(r,i)][s]:void 0}function rp(e,t){const[n,a,r]=ip(e);return[sp(n,t&&t.currentContextId),a,r]}function sp(e,t){return t?`${e}-${t}`:e}function ip(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],a=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),a]}function op(e,t,n){let a=np("pad",e,t,n);if("explicit"===a){a=np("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function up(e){return e.kept?e:Ls(e)}const lp=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cp=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pp=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],dp=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],hp=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],fp=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mp=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],gp=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],yp=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],bp=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],xp=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],wp=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],vp=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],kp=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Ip=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Np=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Sp=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Tp=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Cp=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class $p{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,i,o,u,l,c,p,d,h,f,m,g,y,b,x,w,v,k].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,a=[],r=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(i);p.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=rp(e),s=i[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=rp(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=rp(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:i,inputs:o,outputs:u,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=tp(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=Ap(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Ap(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=Bp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Bp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=Rp(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=Rp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=Pp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Pp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=_p(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=_p(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=Vp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Vp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=zp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=zp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=Wp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Wp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=Op(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Op(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=Mp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Mp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=Dp(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Dp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=rp(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Fp(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n})),Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=rp(e),i=a[r];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=rp(i[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Ep(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=$e().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Ap(e,t,n,a=!1){const r=e[t];return null!=r?Ep(r.s,a):n}function _p(e,t,n){const a=e[t];return a?a.b:n}function Rp(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"==typeof r?r:parseInt(r,10)}function Fp(e){switch("string"==typeof e&&(e=Jc[e]),e){case Jc.DT_FLOAT:return"float32";case Jc.DT_INT32:case Jc.DT_INT64:case Jc.DT_INT8:case Jc.DT_UINT8:return"int32";case Jc.DT_BOOL:return"bool";case Jc.DT_DOUBLE:return"float32";case Jc.DT_STRING:return"string";default:return null}}function Dp(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function Op(e,t,n){const a=e[t];return a&&a.type?Fp(a.type):n}function Mp(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>Fp(e))):n}function Lp(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function zp(e,t,n){const a=e[t];return a&&a.shape?Lp(a.shape):n}function Pp(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Bp(e,t,n,a=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>Ep(e,a))):n}function Wp(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>Lp(e))):n}function Vp(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class Up{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return ap(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return ap(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Rp(this.node.rawAttrs,e,t);if(null!=n.s)return Ap(this.node.rawAttrs,e,t);if(null!=n.b)return _p(this.node.rawAttrs,e,t);if(null!=n.shape)return zp(this.node.rawAttrs,e,t);if(null!=n.type)return Op(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Pp(this.node.rawAttrs,e,t);if(null!=n.list.s)return Bp(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Wp(this.node.rawAttrs,e,t);if(null!=n.list.b)return Vp(this.node.rawAttrs,e,t);if(null!=n.list.type)return Mp(this.node.rawAttrs,e,t)}return t}}const Gp=Yr({addN_:function(e){H(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),H(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Kr(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!Y(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return Br.runKernel(Le,a)}}),Hp=Yr({mod_:function(e,t){let n=Kr(e,"a","mod"),a=Kr(t,"b","mod");[n,a]=Rr(n,a);const r={a:n,b:a};return Br.runKernel(wn,r)}}),jp=Yr({divNoNan_:function(e,t){let n=Kr(e,"a","div"),a=Kr(t,"b","div");[n,a]=Rr(n,a);const r=mo(n,a),s=Lu(r),i=wo(a,s);return Mu(i,s,r)}}),qp=Yr({acos_:function(e){const t={x:Kr(e,"x","acos")};return Br.runKernel(De,t)}}),Kp=Yr({acosh_:function(e){const t={x:Kr(e,"x","acosh")};return Br.runKernel(Oe,t)}}),Xp=Yr({asin_:function(e){const t={x:Kr(e,"x","asin")};return Br.runKernel(Ve,t)}}),Yp=Yr({asinh_:function(e){const t={x:Kr(e,"x","asinh")};return Br.runKernel(Ue,t)}}),Zp=Yr({atan_:function(e){const t={x:Kr(e,"x","atan")};return Br.runKernel(Ge,t)}}),Jp=Yr({atan2_:function(e,t){let n=Kr(e,"a","atan2"),a=Kr(t,"b","atan2");[n,a]=Rr(n,a);const r={a:n,b:a};return Br.runKernel(je,r)}}),Qp=Yr({atanh_:function(e){const t={x:Kr(e,"x","atanh")};return Br.runKernel(He,t)}}),ed=Yr({ceil_:function(e){const t={x:Kr(e,"x","ceil","float32")};return Br.runKernel(nt,t)}}),td=Yr({cos_:function(e){const t={x:Kr(e,"x","cos","float32")};return Br.runKernel(ht,t)}}),nd=Yr({cosh_:function(e){const t={x:Kr(e,"x","cosh","float32")};return Br.runKernel(ft,t)}}),ad=Yr({erf_:function(e){let t=Kr(e,"x","erf");H("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ms(t,"float32"));const n={x:t};return Br.runKernel(At,n)}}),rd=Yr({expm1_:function(e){const t={x:Kr(e,"x","expm1")};return Br.runKernel(Dt,t)}}),sd=Yr({reciprocal_:function(e){const t={x:Kr(e,"x","reciprocal")};return Br.runKernel(Ln,t)}}),id=Yr({sin_:function(e){const t={x:Kr(e,"x","sin","float32")};return Br.runKernel(Jn,t)}}),od=Yr({sign_:function(e){const t={x:Kr(e,"x","sign")};return Br.runKernel(ea,t)}}),ud=Yr({sinh_:function(e){const t={x:Kr(e,"x","sinh")};return Br.runKernel(Qn,t)}}),ld=Yr({tan_:function(e){const t={x:Kr(e,"x","tan","float32")};return Br.runKernel(wa,t)}}),cd=Yr({rsqrt_:function(e){const t={x:Kr(e,"x","rsqrt","float32")};return Br.runKernel(qn,t)}}),pd=Yr({prod_:function(e,t=null,n=!1){let a=Kr(e,"x","prod");"bool"===a.dtype&&(a=Ms(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Br.runKernel(Dn,r,s)}}),dd=Yr({isNaN_:function(e){const t={x:Kr(e,"x","isNaN")};return Br.runKernel(Yt,t)}});function hd(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){H(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];H(r<0||s<0||r===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function fd(e){return"number"!=typeof e&&!e.some((e=>e<0))}function md(e,t,n){let a=gd(e,n);const r=!fd(a);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach((e=>{a=gd(e.shape,a)})),!fd(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function gd(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:s}return n}class yd{constructor(e,t,n,a,r,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ti(0),Ii(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),hd(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ii(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Qr([],[0].concat(this.elementShape));const n=this.readMany(e);return hd(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Eu(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Qr([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return hd(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),eo(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Du(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,s=[];vi((()=>{t=ji(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:a[n-1],0],o=[1,e[n],r];s[n]=ji(xu(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class bd{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);hd(t,e.shape,"TensorList shape mismatch: "),Ii(e)})),this.idTensor=Ti(0),this.maxNumElements=a,Ii(this.idTensor)}get id(){return this.idTensor.id}copy(){return new bd([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);hd(e,this.elementShape,"TensorList shape mismatch: ");const a=md(this.elementShape,this.tensors,e);return vi((()=>{const e=this.tensors.map((e=>ji(e,a)));return Eu(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=md(this.elementShape,this.tensors,e),a=this.tensors.pop();return hd(a.shape,e,"TensorList shape mismatch: "),ji(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(hd(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ii(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);hd(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=md(this.elementShape,this.tensors,t);return ji(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);hd(this.elementShape,t.shape,"TensorList shape mismatch: "),Ii(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);hd(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=md(this.elementShape,this.tensors,n);return 0===e.length?Qr([],[0].concat(a)):vi((()=>{const t=e.map((e=>ji(this.tensors[e],a)));return Eu(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);hd(this.elementShape,t,"TensorList shape mismatch: ");const n=md(this.elementShape,this.tensors,t);return 0===this.size()?Qr([],[0].concat(n)):vi((()=>{const e=this.tensors.map((e=>ji(e,n)));return eo(e,0)}))}}const xd=Yr({maxPoolWithArgmax_:function(e,t,n,a,r=!1){const s={x:Kr(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=Br.runKernel(mn,s,i);return{result:o[0],indexes:o[1]}}}),wd=Yr({dilation2d_:function(e,t,n,a,r=[1,1],s="NHWC"){const i=Kr(e,"x","dilation2d"),o=Kr(t,"filter","dilation2d");H(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),H(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),H("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=ji(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},p={strides:n,pad:a,dilations:r},d=Br.runKernel(It,c,p);return l?ji(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function vd(e,t,n){const[a,r]=np("fusedOps",e,t,n),s="biasadd"===a,i=!s,o="prelu"===r,u="fusedbatchnorm"===a,l=np("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=np("strides",e,t,n),p=op(e,t,n),d=np("dataFormat",e,t,n).toUpperCase(),h=np("dilations",e,t,n);let[f,m]=np("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:np("leakyreluAlpha",e,t,n)}}function kd(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return Br.runKernel(en,{},a)}const Id=Yr({multinomial_:function(e,t,n,a=!1){const r=Kr(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?ji(r,[1,-1]):r},u={numSamples:t,seed:n,normalized:a},l=Br.runKernel(vn,o,u);return 1===i?ji(l,[l.size]):l}}),Nd=async function(e){const t=Kr(e,"condition","whereAsync","bool"),n=await t.data(),a=Zc(t.shape,n);return e!==t&&t.dispose(),a};function Sd(e,t,n){return{boxes:np("boxes",e,t,n),scores:np("scores",e,t,n),maxOutputSize:np("maxOutputSize",e,t,n),iouThreshold:np("iouThreshold",e,t,n),scoreThreshold:np("scoreThreshold",e,t,n),softNmsSigma:np("softNmsSigma",e,t,n)}}const Td=Yr({topk_:function(e,t=1,n=!0){const a=Kr(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const s={x:a},i={k:t,sorted:n},[o,u]=Br.runKernel(Ia,s,i);return{values:o,indices:u}}}),Cd=Yr({unique_:function(e,t=0){const n=Kr(e,"x","unique","string_or_numeric");H(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,i]=Br.runKernel(Ta,a,r);return{values:s,indices:i}}});class $d{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ti(0),this.tensorMap=new Map,Ii(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ti(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),vi((()=>{const e=Du(t),a=n.length,r=e.length;H(a===r,(()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${r} elements.`));for(let t=0;t<a;t++){const a=n[t],r=e[t];Ii(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return vi((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return Eu(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const Ed=Yr({less_:function(e,t){let n=Kr(e,"a","less","string_or_numeric"),a=Kr(t,"b","less","string_or_numeric");[n,a]=Rr(n,a),xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(Jt,r)}}),Ad=Yr({logicalNot_:function(e){const t={x:Kr(e,"x","logicalNot","bool")};return Br.runKernel(rn,t)}}),_d=Yr({logicalOr_:function(e,t){const n=Kr(e,"a","logicalOr","bool"),a=Kr(t,"b","logicalOr","bool");xo(n.shape,a.shape);const r={a:n,b:a};return Br.runKernel(sn,r)}}),Rd=Yr({einsum_:function(e,...t){const n=t.map(((e,t)=>Kr(e,`tensors${t}`,"einsum"))),a={equation:e};return Br.runKernel(Ct,n,a)}}),Fd=Yr({localResponseNormalization_:function(e,t=5,n=1,a=1,r=.5){const s=Kr(e,"x","localResponseNormalization");H(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),H(Z(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=ji(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:a,beta:r},c=Br.runKernel(on,u,l);return o?ji(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Dd=Yr({sparseToDense_:function(e,t,n,a=0){const r=Kr(e,"sparseIndices","sparseToDense","int32"),s=Kr(t,"sparseValues","sparseToDense"),i=Kr(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,i);const o={sparseIndices:r,sparseValues:s,defaultValue:i},u={outputShape:n};return Br.runKernel(da,o,u)}}),Od=Yr({argMin_:function(e,t=0){const n={x:Kr(e,"x","argMin")},a={axis:t};return Br.runKernel(We,n,a)}}),Md=Yr({cumsum_:function(e,t=0,n=!1,a=!1){const r={x:Kr(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return Br.runKernel(mt,r,s)}}),Ld=Yr({denseBincount_:function(e,t,n,a=!1){const r=Kr(e,"x","denseBincount"),s=Kr(t,"weights","denseBincount");H("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),H(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),H(n>=0,(()=>`size must be non-negative, but got ${n}.`)),H(s.size===r.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},o={size:n,binaryOutput:a};return Br.runKernel(yt,i,o)}}),zd=Yr({stridedSlice_:function(e,t,n,a,r=0,s=0,i=0,o=0,u=0){const l={x:Kr(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Br.runKernel(ma,l,c)}}),Pd=Yr({scatterND_:function(e,t,n){const a=Kr(e,"indices","scatterND","int32"),r=Kr(t,"updates","scatterND");Zs(r,a,n);const s={indices:a,updates:r},i={shape:n};return Br.runKernel(Kn,s,i)}}),Bd=Yr({gatherND_:function(e,t){const n=Kr(t,"indices","gatherND","int32"),a={params:Kr(e,"x","gatherND","string_or_numeric"),indices:n};return Br.runKernel(Vt,a)}}),Wd=Yr({mirrorPad_:function(e,t,n){H("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const a=Kr(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");H(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<a.rank;e++)H(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),H(t[e][0]>=0&&t[e][0]<=a.shape[e]-r&&t[e][1]>=0&&t[e][1]<=a.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-r} or less than 0 for input of shape ${a.shape}`));const s={paddings:t,mode:n},i={x:a};return Br.runKernel(xn,i,s)}}),Vd=Yr({spaceToBatchND_:function(e,t,n){const a=Kr(e,"x","spaceToBatchND");H(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),H(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),H(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:a},s={blockShape:t,paddings:n};return Br.runKernel(sa,r,s)}}),Ud=Yr({batchToSpaceND_:function(e,t,n){const a=Kr(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));H(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),H(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),H(a.shape[0]%r==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const s={x:a},i={blockShape:t,crops:n};return Br.runKernel(Je,s,i)}}),Gd=Yr({depthToSpace_:function(e,t,n="NHWC"){const a=Kr(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];H(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),H(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),H(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),H(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`));const o={x:a},u={blockSize:t,dataFormat:n};return Br.runKernel(bt,o,u)}}),Hd=Yr({broadcastArgs_:function(e,t){const n=Kr(e,"s0","broadcastArgs","int32"),a=Kr(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==a.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${a.rank}`);const r={s0:n,s1:a};return Br.runKernel(et,r)}});function jd(e,t,n,a){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return vi((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Ei(np("a",e,t,n),np("b",e,t,n))];case"AddN":return[Gp(np("tensors",e,t,n))];case"FloorMod":case"Mod":return[Hp(np("a",e,t,n),np("b",e,t,n))];case"Mul":return[Do(np("a",e,t,n),np("b",e,t,n))];case"RealDiv":case"Div":return[mo(np("a",e,t,n),np("b",e,t,n))];case"DivNoNan":return[jp(np("a",e,t,n),np("b",e,t,n))];case"FloorDiv":return[fo(np("a",e,t,n),np("b",e,t,n))];case"Sub":return[Oo(np("a",e,t,n),np("b",e,t,n))];case"Minimum":return[Go(np("a",e,t,n),np("b",e,t,n))];case"Maximum":return[Vo(np("a",e,t,n),np("b",e,t,n))];case"Pow":return[Dl(np("a",e,t,n),np("b",e,t,n))];case"SquaredDifference":return[Vl(np("a",e,t,n),np("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return vi((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[$i(np("x",e,t,n))];case"Acos":return[qp(np("x",e,t,n))];case"Acosh":return[Kp(np("x",e,t,n))];case"Asin":return[Xp(np("x",e,t,n))];case"Asinh":return[Yp(np("x",e,t,n))];case"Atan":return[Zp(np("x",e,t,n))];case"Atan2":return[Jp(np("x",e,t,n),np("y",e,t,n))];case"Atanh":return[Qp(np("x",e,t,n))];case"Ceil":return[ed(np("x",e,t,n))];case"Complex":return[Zr(np("real",e,t,n),np("imag",e,t,n))];case"Cos":return[td(np("x",e,t,n))];case"Cosh":return[nd(np("x",e,t,n))];case"Elu":return[go(np("x",e,t,n))];case"Erf":return[ad(np("x",e,t,n))];case"Exp":return[vo(np("x",e,t,n))];case"Expm1":return[rd(np("x",e,t,n))];case"Floor":return[To(np("x",e,t,n))];case"Log":return[_o(np("x",e,t,n))];case"Log1p":return[Ro(np("x",e,t,n))];case"Imag":return[Bu(np("x",e,t,n))];case"Neg":return[tu(np("x",e,t,n))];case"Reciprocal":return[sd(np("x",e,t,n))];case"Real":return[Wu(np("x",e,t,n))];case"Relu":return[fu(np("x",e,t,n))];case"Round":return[$l(np("x",e,t,n))];case"Selu":return[gu(np("x",e,t,n))];case"Sigmoid":return[bu(np("x",e,t,n))];case"Sin":return[id(np("x",e,t,n))];case"Sign":return[od(np("x",e,t,n))];case"Sinh":return[ud(np("x",e,t,n))];case"Softplus":return[Su(np("x",e,t,n))];case"Sqrt":return[Cu(np("x",e,t,n))];case"Square":return[Qo(np("x",e,t,n))];case"Tanh":return[Au(np("x",e,t,n))];case"Tan":return[ld(np("x",e,t,n))];case"ClipByValue":return[Qi(np("x",e,t,n),np("clipValueMin",e,t,n),np("clipValueMax",e,t,n))];case"Relu6":return[qu(np("x",e,t,n))];case"Rsqrt":return[cd(ap(e.inputNames[0],t,n))];case"Prod":return[pd(np("x",e,t,n),np("axes",e,t,n))];case"LeakyRelu":return[Ao(np("x",e,t,n),np("alpha",e,t,n))];case"Prelu":return[uu(np("x",e,t,n),np("alpha",e,t,n))];case"IsNan":return[dd(ap(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=np("thenBranch",e,t,n),r=np("elseBranch",e,t,n),s=np("cond",e,t,n),i=np("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=np("body",e,t,n),r=np("cond",e,t,n),s=np("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[up(np("pred",e,t,n))];case"Switch":{const a=np("pred",e,t,n);let r=np("data",e,t,n);return r.kept||(r=up(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==ap(e,t,n)));return a?[up(ap(a,t,n))]:void 0}case"Enter":{const a=np("frameName",e,t,n),r=np("tensor",e,t,n);return n.enterFrame(a),[up(r)]}case"Exit":{const a=np("tensor",e,t,n);return n.exitFrame(),[up(a)]}case"NextIteration":{const a=np("tensor",e,t,n);return n.nextIteration(),[up(a)]}case"TensorArrayV3":{const a=np("size",e,t,n),r=np("dtype",e,t,n),s=np("elementShape",e,t,n),i=np("dynamicSize",e,t,n),o=np("clearAfterRead",e,t,n),u=np("identicalElementShapes",e,t,n),l=np("name",e,t,n),c=new yd(l,r,a,s,u,i,o);return n.addTensorArray(c),[c.idTensor,Ti(1)]}case"TensorArrayWriteV3":{const a=np("tensorArrayId",e,t,n),r=np("index",e,t,n),s=np("tensor",e,t,n),i=n.getTensorArray(a.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{const a=np("tensorArrayId",e,t,n),r=np("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=np("tensorArrayId",e,t,n),r=np("indices",e,t,n),s=np("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=np("tensorArrayId",e,t,n),r=np("indices",e,t,n),s=np("tensor",e,t,n),i=n.getTensorArray(a.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{const a=np("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=np("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=np("tensorArrayId",e,t,n),r=np("tensor",e,t,n),s=np("lengths",e,t,n),i=n.getTensorArray(a.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{const a=np("tensorArrayId",e,t,n);return[Ti(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=np("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=np("tensorListId",e,t,n),r=np("index",e,t,n),s=np("tensor",e,t,n),i=n.getTensorList(a.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{const a=np("tensorListId",e,t,n),r=np("index",e,t,n),s=np("elementShape",e,t,n),i=np("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const a=np("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);const s=new bd([],n,e.dtype,a),i=Du(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(np("tensor",e,t,n),a,np("elementShape",e,t,n),np("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=np("elementShape",e,t,n),r=np("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new bd([],e,t,n)}(a,r,np(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=np("tensorListId",e,t,n),r=np("indices",e,t,n),s=np("elementShape",e,t,n),i=np("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,i,s)]}case"TensorListStack":{const a=np("tensorListId",e,t,n),r=np("elementShape",e,t,n),s=np("elementDType",e,t,n),i=np("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,i)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);hd(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=Du(e);return new bd(r,t,a)}(np("tensor",e,t,n),np("elementShape",e,t,n),np("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const a=np("tensorListId",e,t,n),r=n.getTensorList(a.id),s=np("dtype",e,t,n),i=np("elementShape",e,t,n);return[r.concat(s,i)]}case"TensorListPushBack":{const a=np("tensorListId",e,t,n),r=np("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=np("tensorListId",e,t,n),r=np("elementShape",e,t,n),s=np("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=np("tensor",e,t,n),r=np("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);const s=gd(e.shape.slice(1),n),i=0===a?0:e.size/a,o=vi((()=>{const n=[];e=ji(e,[1,a,i]);for(let a=0;a<t.length;++a){const o=[0,0===a?0:r[a-1],0],u=[1,t[a],i];n[a]=ji(xu(e,o,u),s)}return e.dispose(),n})),u=new bd([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(a,np("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return vi((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const a=np("stride",e,t,n),r=np("pad",e,t,n),s=np("dataFormat",e,t,n).toUpperCase(),i=np("dilation",e,t,n);return[io(np("x",e,t,n),np("filter",e,t,n),a,r,s,i)]}case"Conv2D":{const a=np("strides",e,t,n),r=op(e,t,n),s=np("dataFormat",e,t,n).toUpperCase(),i=np("dilations",e,t,n);return[so(np("x",e,t,n),np("filter",e,t,n),[a[1],a[2]],r,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=vd(e,t,n);return[Qu({x:np("x",e,t,n),filter:np("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=vd(e,t,n);return[nl({x:np("x",e,t,n),filter:np("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=np("outputShape",e,t,n),r=np("strides",e,t,n),s=op(e,t,n);return[uo(np("x",e,t,n),np("filter",e,t,n),a,[r[1],r[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=np("strides",e,t,n),r=op(e,t,n),s=np("dilations",e,t,n),i=np("dataFormat",e,t,n).toUpperCase();return[ho(np("input",e,t,n),np("filter",e,t,n),[a[1],a[2]],r,i,[s[1],s[2]])]}case"Conv3D":{const a=np("strides",e,t,n),r=np("pad",e,t,n),s=np("dataFormat",e,t,n).toUpperCase(),i=np("dilations",e,t,n);return[lo(np("x",e,t,n),np("filter",e,t,n),[a[1],a[2],a[3]],r,s,[i[1],i[2],i[3]])]}case"AvgPool":{const a=np("strides",e,t,n),r=np("pad",e,t,n),s=np("kernelSize",e,t,n);return[qi(np("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=np("strides",e,t,n),r=np("pad",e,t,n),s=np("kernelSize",e,t,n);return[Bo(np("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=np("strides",e,t,n),r=np("pad",e,t,n),s=np("kernelSize",e,t,n),i=np("includeBatchInIndex",e,t,n),{result:o,indexes:u}=xd(np("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r,i);return[o,u]}case"AvgPool3D":{const a=np("strides",e,t,n),r=np("pad",e,t,n),s=np("kernelSize",e,t,n);return[Ki(np("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=np("strides",e,t,n),r=np("pad",e,t,n),s=np("kernelSize",e,t,n);return[Wo(np("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=np("strides",e,t,n),r=np("pad",e,t,n),s=np("dilations",e,t,n),i=a[1],o=a[2],u=s[1],l=s[2];return[wd(np("x",e,t,n),np("filter",e,t,n),[i,o],r,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return vi((()=>((e,t,n)=>{switch(e.op){case"Fill":{const a=np("shape",e,t,n),r=np("dtype",e,t,n);return[So(a,np("value",e,t,n),r)]}case"LinSpace":return[kd(np("start",e,t,n),np("stop",e,t,n),np("num",e,t,n))];case"Multinomial":{const a=np("logits",e,t,n),r=np("numSamples",e,t,n),s=np("seed",e,t,n);return[Id(a,r,s)]}case"OneHot":{const a=np("indices",e,t,n),r=np("depth",e,t,n),s=np("onValue",e,t,n),i=np("offValue",e,t,n);return[au(a,r,s,i)]}case"Ones":return[su(np("shape",e,t,n),np("dtype",e,t,n))];case"OnesLike":return[iu(np("x",e,t,n))];case"RandomUniform":return[hu(np("shape",e,t,n),np("minval",e,t,n),np("maxval",e,t,n),np("dtype",e,t,n))];case"Range":return[El(np("start",e,t,n),np("stop",e,t,n),np("step",e,t,n),np("dtype",e,t,n))];case"TruncatedNormal":{const a=np("shape",e,t,n),r=np("mean",e,t,n),s=np("stdDev",e,t,n),i=np("seed",e,t,n);return[Fu(a,r,s,np("dtype",e,t,n),i)]}case"Zeros":return[ru(np("shape",e,t,n),np("dtype",e,t,n))];case"ZerosLike":return[Lu(np("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Sd(e,t,n),l=await Zl.nonMaxSuppressionWithScoreAsync(a,r,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Sd(e,t,n),u=np("padToMaxOutputSize",e,t,n),l=await Zl.nonMaxSuppressionPaddedAsync(a,r,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Sd(e,t,n);return[await Zl.nonMaxSuppressionAsync(a,r,s,i,o)]}case"Where":{const a=Ms(np("condition",e,t,n),"bool"),r=[await Nd(a)];return a.dispose(),r}case"ListDiff":return async function(e,t){const n=Kr(e,"x","setdiff1d"),a=Kr(t,"y","setdiff1d");H(n.dtype===a.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`)),H(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),H(1===a.rank,(()=>`y should be 1D tensor, but got y (${a.shape}).`));const r=await n.data(),s=await a.data(),i=new Set(s);let o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;const u=new yr([o],n.dtype),l=new yr([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(u.values[t]=r[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]}(np("x",e,t,n),np("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return vi((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const a=np("x",e,t,n),r=np("k",e,t,n),s=np("sorted",e,t,n),i=Td(a,r,s);return[i.values,i.indices]}case"Unique":{const a=np("x",e,t,n),r=Cd(a);return[r.values,r.indices]}case"UniqueV2":{const a=np("x",e,t,n),r=np("axis",e,t,n),s=Cd(a,r);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return vi((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const a=np("images",e,t,n),r=np("size",e,t,n),s=np("alignCorners",e,t,n),i=np("halfPixelCenters",e,t,n);return[Zl.resizeBilinear(a,[r[0],r[1]],s,i)]}case"ResizeNearestNeighbor":{const a=np("images",e,t,n),r=np("size",e,t,n),s=np("alignCorners",e,t,n),i=np("halfPixelCenters",e,t,n);return[Zl.resizeNearestNeighbor(a,[r[0],r[1]],s,i)]}case"CropAndResize":{const a=np("image",e,t,n),r=np("boxes",e,t,n),s=np("boxInd",e,t,n),i=np("cropSize",e,t,n),o=np("method",e,t,n),u=np("extrapolationValue",e,t,n);return[Zl.cropAndResize(a,r,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return vi((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const a=np("default",e,t,n);return[ap(e.name,t,n)||a];case"Placeholder":return[ap(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[up(np("x",e,t,n))];case"IdentityN":return np("x",e,t,n).map((e=>up(e)));case"Shape":return[_u(np("x",e,t,n).shape,"int32")];case"ShapeN":return np("x",e,t,n).map((e=>_u(e.shape)));case"Size":return[Ti(np("x",e,t,n).size,"int32")];case"Rank":return[Ti(np("x",e,t,n).rank,"int32")];case"NoOp":return[Ti(1)];case"Print":const r=np("x",e,t,n),s=np("data",e,t,n),i=np("message",e,t,n),o=np("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return vi((()=>((e,t,n)=>{switch(e.op){case"Equal":return[wo(np("a",e,t,n),np("b",e,t,n))];case"NotEqual":return[nu(np("a",e,t,n),np("b",e,t,n))];case"Greater":return[$o(np("a",e,t,n),np("b",e,t,n))];case"GreaterEqual":return[Eo(np("a",e,t,n),np("b",e,t,n))];case"Less":return[Ed(np("a",e,t,n),np("b",e,t,n))];case"LessEqual":return[Cl(np("a",e,t,n),np("b",e,t,n))];case"LogicalAnd":return[zo(np("a",e,t,n),np("b",e,t,n))];case"LogicalNot":return[Ad(np("a",e,t,n))];case"LogicalOr":return[_d(np("a",e,t,n),np("b",e,t,n))];case"Select":case"SelectV2":return[Mu(np("condition",e,t,n),np("a",e,t,n),np("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return vi((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Po(np("a",e,t,n),np("b",e,t,n),np("transposeA",e,t,n),np("transposeB",e,t,n))];case"Einsum":return[Rd(np("equation",e,t,n),...np("tensors",e,t,n))];case"Transpose":return[zu(np("x",e,t,n),np("perm",e,t,n))];case"_FusedMatMul":const[a,r]=np("fusedOps",e,t,n),s="biasadd"===a,i="prelu"===r,o=np("numArgs",e,t,n),u=np("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=np("args",e,t,n);return[al({a:np("a",e,t,n),b:np("b",e,t,n),transposeA:np("transposeA",e,t,n),transposeB:np("transposeB",e,t,n),bias:l,activation:r,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return vi((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Xi(np("x",e,t,n),np("mean",e,t,n),np("variance",e,t,n),np("offset",e,t,n),np("scale",e,t,n),np("epsilon",e,t,n))];case"LRN":return[Fd(np("x",e,t,n),np("radius",e,t,n),np("bias",e,t,n),np("alpha",e,t,n),np("beta",e,t,n))];case"Softmax":return[Nu(np("x",e,t,n))];case"LogSoftmax":return[Lo(np("x",e,t,n))];case"SparseToDense":return[Dd(np("sparseIndices",e,t,n),np("outputShape",e,t,n),np("sparseValues",e,t,n),np("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return vi((()=>((e,t,n)=>{switch(e.op){case"Max":{const a=np("axis",e,t,n),r=np("keepDims",e,t,n);return[Fo(np("x",e,t,n),a,r)]}case"Mean":{const a=np("axis",e,t,n),r=np("keepDims",e,t,n);return[Uo(np("x",e,t,n),a,r)]}case"Min":{const a=np("axis",e,t,n),r=np("keepDims",e,t,n);return[Fl(np("x",e,t,n),a,r)]}case"Sum":{const a=np("axis",e,t,n),r=np("keepDims",e,t,n);return[Mo(np("x",e,t,n),a,r)]}case"All":{const a=np("axis",e,t,n),r=np("keepDims",e,t,n);return[Ai(np("x",e,t,n),a,r)]}case"Any":{const a=np("axis",e,t,n),r=np("keepDims",e,t,n);return[_i(np("x",e,t,n),a,r)]}case"ArgMax":{const a=np("axis",e,t,n);return[Ri(np("x",e,t,n),a)]}case"ArgMin":{const a=np("axis",e,t,n);return[Od(np("x",e,t,n),a)]}case"Prod":{const a=np("axis",e,t,n),r=np("keepDims",e,t,n);return[pd(np("x",e,t,n),a,r)]}case"Cumsum":{const a=np("axis",e,t,n),r=np("exclusive",e,t,n),s=np("reverse",e,t,n);return[Md(np("x",e,t,n),a,r,s)]}case"Bincount":const a=np("x",e,t,n),r=np("weights",e,t,n),s=np("size",e,t,n);return[Tl(a,r,s)];case"DenseBincount":{const a=np("x",e,t,n),r=np("weights",e,t,n),s=np("size",e,t,n),i=np("binaryOutput",e,t,n);return[Ld(a,r,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return vi((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const a=np("n",e,t,n),r=np("axis",e,t,n);let s=np("tensors",e,t,n);return s=s.slice(0,a),[eo(s,r)]}case"Gather":{const a=np("x",e,t,n),r=np("indices",e,t,n);return[Co(a,Ms(r,"int32"),0)]}case"GatherV2":{const a=np("axis",e,t,n),r=np("batchDims",e,t,n),s=np("x",e,t,n),i=np("indices",e,t,n);return[Co(s,Ms(i,"int32"),a,r)]}case"Reverse":{const a=np("dims",e,t,n),r=[];for(let e=0;e<a.length;e++)a[e]&&r.push(e);const s=np("x",e,t,n);return[mu(s,r)]}case"ReverseV2":{const a=np("axis",e,t,n),r=np("x",e,t,n);return[mu(r,a)]}case"Slice":{const a=np("begin",e,t,n),r=np("size",e,t,n);return[xu(np("x",e,t,n),a,r)]}case"StridedSlice":{const a=np("begin",e,t,n),r=np("end",e,t,n),s=np("strides",e,t,n),i=np("beginMask",e,t,n),o=np("endMask",e,t,n),u=np("ellipsisMask",e,t,n),l=np("newAxisMask",e,t,n),c=np("shrinkAxisMask",e,t,n),p=np("x",e,t,n);return[zd(p,a,r,s,i,o,u,l,c)]}case"Pack":return vi((()=>{const a=np("axis",e,t,n),r=np("tensors",e,t,n),s=r[0].shape,i=$u(r[0]).shape,o=r.map((e=>{const t=Y(e.shape,s);if(!t&&!Y($u(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:ji(e,s)}));return[Eu(o,a)]}));case"Unpack":{const a=np("axis",e,t,n),r=np("tensor",e,t,n);return Du(r,a)}case"Tile":{const a=np("reps",e,t,n);return[Io(np("x",e,t,n),a)]}case"Split":case"SplitV":{const a=np("axis",e,t,n),r=np("numOrSizeSplits",e,t,n),s=np("x",e,t,n);return Tu(s,r,a)}case"ScatterNd":{const a=np("indices",e,t,n),r=np("values",e,t,n),s=np("shape",e,t,n);return[Pd(a,r,s)]}case"GatherNd":{const a=np("x",e,t,n),r=np("indices",e,t,n);return[Bd(a,r)]}case"SparseToDense":{const a=np("sparseIndices",e,t,n),r=np("outputShape",e,t,n),s=np("sparseValues",e,t,n),i=np("defaultValue",e,t,n);return[Dd(a,s,r,s.dtype===i.dtype?i:Ms(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return vi((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:s,reverseIndexMap:i}=Ql.sparseFillEmptyRows(np("indices",e,t,n),np("values",e,t,n),np("denseShape",e,t,n),np("defaultValue",e,t,n));return[a,r,s,i]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=Ql.sparseReshape(np("inputIndices",e,t,n),np("inputShape",e,t,n),np("newShape",e,t,n));return[a,r]}case"SparseSegmentMean":return[Ql.sparseSegmentMean(np("data",e,t,n),np("indices",e,t,n),np("segmentIds",e,t,n))];case"SparseSegmentSum":return[Ql.sparseSegmentSum(np("data",e,t,n),np("indices",e,t,n),np("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return vi((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Vu(np("x",e,t,n))];case"IFFT":return[Gu(np("x",e,t,n))];case"RFFT":return[Uu(np("x",e,t,n))];case"IRFFT":return[Hu(np("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return vi((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=ec.stringNGrams(np("data",e,t,n),np("dataSplits",e,t,n),np("separator",e,t,n),np("nGramWidths",e,t,n),np("leftPad",e,t,n),np("rightPad",e,t,n),np("padWidth",e,t,n),np("preserveShortSequences",e,t,n));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:s}=ec.stringSplit(np("input",e,t,n),np("delimiter",e,t,n),np("skipEmpty",e,t,n));return[a,r,s]}case"StringToHashBucketFast":return[ec.stringToHashBucketFast(np("input",e,t,n),np("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return vi((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ms(np("x",e,t,n),np("dtype",e,t,n))];case"ExpandDims":{const a=np("axis",e,t,n);return[ko(np("x",e,t,n),a)]}case"Squeeze":{const a=np("axis",e,t,n);return[$u(np("x",e,t,n),a)]}case"Reshape":return[ji(np("x",e,t,n),np("shape",e,t,n))];case"MirrorPad":return[Wd(np("x",e,t,n),np("padding",e,t,n),np("mode",e,t,n))];case"PadV2":case"Pad":return[ou(np("x",e,t,n),np("padding",e,t,n),np("constantValue",e,t,n))];case"SpaceToBatchND":{const a=np("blockShape",e,t,n),r=np("paddings",e,t,n);return[Vd(np("x",e,t,n),a,r)]}case"BatchToSpaceND":{const a=np("blockShape",e,t,n),r=np("crops",e,t,n);return[Ud(np("x",e,t,n),a,r)]}case"DepthToSpace":{const a=np("blockSize",e,t,n),r=np("dataFormat",e,t,n).toUpperCase();return[Gd(np("x",e,t,n),a,r)]}case"BroadcastTo":return[Ou(np("x",e,t,n),np("shape",e,t,n))];case"BroadcastArgs":return[Hd(np("s0",e,t,n),np("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=np("keyDType",e,t,n),s=np("valueDType",e,t,n),i=new $d(r,s);return a.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=np("tableHandle",e,t,n,a),s=np("keys",e,t,n),i=np("values",e,t,n),o=a.getHashTableById(r.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=np("tableHandle",e,t,n,a),s=np("keys",e,t,n),i=np("defaultValue",e,t,n),o=a.getHashTableById(r.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=np("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,a);case"custom":const r=tp(e.op);if(r&&r.customExecutor)return r.customExecutor(new Up(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ie(r)?r.then((e=>[].concat(e))):[].concat(r)}class qd{constructor(e={},t={},n={},a={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Kd(e,t,n,a){const r=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>ip(e)[0]));let c=[];null!=a&&(c=a.map((e=>ip(e.name)[0])));const p=[...t];for(;p.length>0;){const e=p.pop();(Jd(e)||Qd(e)||eh(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}const Xd=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Yd=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Zd=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Jd(e){return Xd.indexOf(e.op)>=0}function Qd(e){return Yd.indexOf(e.op)>=0}function eh(e){return Zd.indexOf(e.op)>=0}class th{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new th(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(e,t){const n=Kd(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${a}]`)}return function(e,t,n){const{usedNodes:a,inputs:r}=n,s=[],i=Object.keys(r).map((e=>ip(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{a.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{a.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{a.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&a.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[ip(e)[0]])),r=t.map((e=>ip(e)[0]));let s=r.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(a,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return vi((()=>{const n=new qd(this.weightMap,u,l,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=ip(t),s=[];s[r]=e[t],a[n]=s}));const s=this.getFrozenTensorIds(a),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!a[t.name]){const e=jd(t,a,n,this._resourceManager);if(Ie(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);a[t.name]=e,this.checkTensorForDisposal(t.name,t,a,n,s,r,i)}}return null==this.parent&&n.dispose(s),t.map((e=>ap(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[sp(e,n.currentContextId)]}(e.name,n,a);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!r.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,a={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new qd(this.weightMap,a,r,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>ap(e,i,s))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[ip(e)[0]])),i=n.map((e=>ip(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=Kd(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=ip(t),r=[];r[a]=e[t],h[n]=r}));const f={},m=this.getFrozenTensorIds(h),g={};for(;d.length>0;){const e=this.processStack(s,d,t,h,g,m,i,f,u);await Promise.all(e)}null!=c||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!Jd(e)&&!ap(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${l}]. ${e}`)}return h}processStack(e,t,n,a,r,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&np("isConstant",e.node,a,n)&&([c]=rp(e.node.name,n)),null==a[e.node.name]){const p=jd(e.node,a,n,this._resourceManager);c||([c]=rp(e.node.name,n));const d=n.currentContext;Ie(p)?l.push(p.then((l=>(a[c]=l,n.currentContext=d,this.checkTensorForDisposal(c,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,u),l)))):(a[c]=p,this.checkTensorForDisposal(c,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,u))}else this.processChildNodes(e.node,t,n,a,r,u)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[i]=rp(e.name,n);!r[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!ap(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!ap(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=ip(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;H(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&H(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=ip(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=ip(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class nh{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class ah{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new nh}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=js(e,this.loadOptions);else{const a=(t=e,n=this.loadOptions,ls.getLoadHandlers(t,n));if(0===a.length)a.push(js(e,this.loadOptions));else if(a.length>1)throw new Error(`Found more than one (${a.length}) load handlers for URL '${[e]}'`);this.handler=a[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const a=function(e,t){const n={};let a,r=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=X(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=es[n.dtype],c=e.slice(r,r+u*o),p="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===a&&(a=us()),l=a(p)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*n.scale+n.min)}}r+=u*o}else if("string"===i){const t=X(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));l.push(n),r+=t}}else{const a=es[i],s=e.slice(r,r+u*a);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),a=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],a[t]=l[2*t+1];const r=Qr(e,o,"float32"),i=Qr(a,o,"float32");n[t]=Zr(r,i),r.dispose(),i.dispose()}}r+=u*a}"complex64"!==i&&(n[t]=Qr(l,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new th($p.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=$p.Instance.transformGraph(e.modelInitializer);this.initializer=new th(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=cs(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof vr||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,a)=>(t[n]=e[a],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function rh(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new ah(e,t);return await n.load(),n}function sh(e,t,n,a){return new(n||(n=Promise))((function(r,s){function i(e){try{u(a.next(e))}catch(e){s(e)}}function o(e){try{u(a.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((a=a.apply(e,t||[])).next())}))}function ih(e,t){var n,a,r,s,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,a&&(r=2&s[0]?a.return:s[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,s[1])).done)return r;switch(a=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,a=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(r=(r=i.trys).length>0&&r[r.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){i.label=s[1];break}if(6===s[0]&&i.label<r[1]){i.label=r[1],r=s;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(s);break}r[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],a=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}var oh=function(e){return{startEndTensor:e,startPoint:xu(e,[0,0],[-1,2]),endPoint:xu(e,[0,2],[-1,2])}},uh={strides:[8,16],anchors:[2,6]};function lh(e,t){var n,a,r;if(e.topLeft instanceof vr&&e.bottomRight instanceof vr){var s=vi((function(){return[eo([xu(Oo(t-1,e.topLeft),0,1),xu(e.topLeft,1,1)]),eo([Oo(t-1,xu(e.bottomRight,0,1)),xu(e.bottomRight,1,1)])]}));n=s[0],a=s[1],null!=e.landmarks&&(r=vi((function(){var n=Oo(_u([t-1,0]),e.landmarks),a=_u([1,-1]);return Do(n,a)})))}else{var i=e.topLeft,o=i[0],u=i[1],l=e.bottomRight,c=l[0],p=l[1];n=[t-1-o,u],a=[t-1-c,p],null!=e.landmarks&&(r=e.landmarks.map((function(e){return[t-1-e[0],e[1]]})))}var d={topLeft:n,bottomRight:a};return null!=r&&(d.landmarks=r),null!=e.probability&&(d.probability=e.probability instanceof vr?e.probability.clone():e.probability),d}function ch(e,t){return vi((function(){var n;return n=e.hasOwnProperty("box")?e.box:e,$u(function(e,t){var n=Do(e.startPoint,t),a=Do(e.endPoint,t),r=no([n,a],1);return oh(r)}(n,t).startEndTensor)}))}var ph=function(){function e(e,t,n,a,r,s){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=a,this.anchorsData=function(e,t,n){for(var a=[],r=0;r<n.strides.length;r++)for(var s=n.strides[r],i=Math.floor((t+s-1)/s),o=Math.floor((e+s-1)/s),u=n.anchors[r],l=0;l<i;l++)for(var c=s*(l+.5),p=0;p<o;p++)for(var d=s*(p+.5),h=0;h<u;h++)a.push([d,c]);return a}(t,n,uh),this.anchors=Ru(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=_u([t,n]),this.iouThreshold=r,this.scoreThreshold=s}return e.prototype.getBoundingBoxes=function(e,t,n){return void 0===n&&(n=!0),sh(this,void 0,void 0,(function(){var a,r,s,i,o,u,l,c,p,d,h,f,m,g,y=this;return ih(this,(function(b){switch(b.label){case 0:return a=vi((function(){var t=Zl.resizeBilinear(e,[y.width,y.height]),n=Do(Oo(mo(t,255),.5),2),a=y.blazeFaceModel.predict(n),r=$u(a),s=function(e,t,n){var a=xu(e,[0,1],[-1,2]),r=Ei(a,t),s=xu(e,[0,3],[-1,2]),i=mo(s,n),o=mo(r,n),u=mo(i,2),l=Oo(o,u),c=Ei(o,u),p=Do(l,n),d=Do(c,n);return no([p,d],1)}(r,y.anchors,y.inputSize),i=xu(r,[0,0],[-1,1]);return[r,s,$u(bu(i))]})),r=a[0],s=a[1],i=a[2],o=console.warn,console.warn=function(){},u=Zl.nonMaxSuppression(s,i,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=o,[4,u.array()];case 1:return l=b.sent(),u.dispose(),c=l.map((function(e){return xu(s,[e,0],[1,-1])})),t?[3,3]:[4,Promise.all(c.map((function(e){return sh(y,void 0,void 0,(function(){var t;return ih(this,(function(n){switch(n.label){case 0:return[4,e.array()];case 1:return t=n.sent(),e.dispose(),[2,t]}}))}))})))];case 2:c=b.sent(),b.label=3;case 3:for(p=e.shape[1],d=e.shape[2],h=t?mo([d,p],this.inputSize):[d/this.inputSizeData[0],p/this.inputSizeData[1]],f=[],m=function(e){var a=c[e],s=vi((function(){var s=oh(a instanceof vr?a:Ru(a));if(!n)return s;var o,u=l[e];return o=t?xu(y.anchors,[u,0],[1,2]):y.anchorsData[u],{box:s,landmarks:ji($u(xu(r,[u,5],[1,-1])),[6,-1]),probability:xu(i,[u],[1]),anchor:o}}));f.push(s)},g=0;g<c.length;g++)m(g);return s.dispose(),i.dispose(),r.dispose(),[2,{boxes:f,scaleFactor:h}]}}))}))},e.prototype.estimateFaces=function(e,t,n,a){return void 0===t&&(t=!1),void 0===n&&(n=!1),void 0===a&&(a=!0),sh(this,void 0,void 0,(function(){var r,s,i,o,u,l,c=this;return ih(this,(function(p){switch(p.label){case 0:return r=function(e){return e instanceof vr?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),s=r[1],i=vi((function(){return e instanceof vr||(e=Ks(e)),ko(Ms(e,"float32"),0)})),[4,this.getBoundingBoxes(i,t,a)];case 1:return o=p.sent(),u=o.boxes,l=o.scaleFactor,i.dispose(),t?[2,u.map((function(e){var t=ch(e,l),r={topLeft:xu(t,[0],[2]),bottomRight:xu(t,[2],[2])};if(a){var i=e,o=i.landmarks,u=i.probability,c=i.anchor,p=Do(Ei(o,c),l);r.landmarks=p,r.probability=u}return n&&(r=lh(r,s)),r}))]:[2,Promise.all(u.map((function(e){return sh(c,void 0,void 0,(function(){var t,r,i,o,u,c,p,d,h,f,m,g=this;return ih(this,(function(y){switch(y.label){case 0:return t=ch(e,l),a?[3,2]:[4,t.array()];case 1:return u=y.sent(),r={topLeft:u.slice(0,2),bottomRight:u.slice(2)},[3,4];case 2:return[4,Promise.all([e.landmarks,t,e.probability].map((function(e){return sh(g,void 0,void 0,(function(){return ih(this,(function(t){return[2,e.array()]}))}))})))];case 3:i=y.sent(),o=i[0],u=i[1],c=i[2],p=e.anchor,h=(d=l)[0],f=d[1],m=o.map((function(e){return[(e[0]+p[0])*h,(e[1]+p[1])*f]})),r={topLeft:u.slice(0,2),bottomRight:u.slice(2),landmarks:m,probability:c},function(e){e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()}(e.box),e.landmarks.dispose(),e.probability.dispose(),y.label=4;case 4:return t.dispose(),n&&(r=lh(r,s)),[2,r]}}))}))})))]}}))}))},e}();const dh={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Ku(Ms(n,"float32"),-1))}}},hh={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Qo(Ms(n,"float32")),a=Cu(Oo(Ti(1),t));return tu(mo(e,a))}}}},fh={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Cu(Oo(Qo(Ms(n,"float32")),1));return mo(e,t)}}}},mh={kernelName:Me,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=xo(n.shape,a.shape);return{a:()=>{let t=e;const a=bo(n.shape,r);return a.length>0&&(t=Mo(t,a)),ji(t,n.shape)},b:()=>{let t=e;const n=bo(a.shape,r);return n.length>0&&(t=Mo(t,n)),ji(t,a.shape)}}}},gh={kernelName:Le,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},yh={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lu(n)}}},bh={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Lu(n)}}},xh={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mo(e,Cu(Oo(Ti(1),Qo(Ms(n,"float32")))))}}},wh={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Cu(Ei(Ti(1),Qo(Ms(n,"float32"))));return mo(e,t)}}}},vh={kernelName:je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=xo(n.shape,a.shape);return{a:()=>{const t=Ei(Qo(n),Qo(a));let s=Do(e,mo(a,t));const i=bo(n.shape,r);return i.length>0&&(s=Mo(s,i)),ji(s,n.shape)},b:()=>{const t=Ei(Qo(n),Qo(a));let s=tu(Do(e,mo(n,t)));const i=bo(a.shape,r);return i.length>0&&(s=Mo(s,i)),ji(s,a.shape)}}}},kh={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mo(e,Ei(Qo(Ms(n,"float32")),1))}}},Ih={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mo(e,Oo(Ti(1),Qo(Ms(n,"float32"))))}}},Nh=Yr({avgPool3dGrad_:function(e,t,n,a,r,s){const i=Kr(e,"dy","avgPool3dGrad"),o=Kr(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=ji(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=ji(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),H(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),H(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),null!=s&&H(Z(r),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const p={dy:u,input:l},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},h=Br.runKernel(Ye,p,d);return c?ji(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Sh={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Nh(e,a,r,s,i,o)}}},Th=Yr({avgPoolGrad_:function(e,t,n,a,r){const s=Kr(e,"dy","avgPoolGrad"),i=Kr(t,"input","avgPoolGrad");H(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=ji(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=ji(s,[1,s.shape[0],s.shape[1],s.shape[2]])),H(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),H(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},p={filterSize:n,strides:a,pad:r},d=Br.runKernel(Ke,c,p);return l?ji(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Ch={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:i}=n;return{x:()=>Th(e,a,r,s,i)}}},$h={kernelName:Ze,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Po(e,r,!1,!1),b:()=>Po(e,a,!0,!1)}:s&&!i?{a:()=>Po(r,e,!1,!0),b:()=>Po(a,e,!1,!1)}:{a:()=>Po(r,e,!0,!0),b:()=>Po(e,a,!0,!0)}:{a:()=>Po(e,r,!1,!0),b:()=>Po(a,e,!0,!1)}}},Eh={kernelName:Je,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>Vd(e,a,r)}}},Ah={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,i=Array.from(s);for(let e=r.length-1;e>=0;e--)if(r[e]===s[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Mo(e,o,!0)}}},_h={kernelName:tt,gradFunc:e=>({x:()=>e.clone()})},Rh={kernelName:nt,gradFunc:e=>({x:()=>Lu(e)})},Fh={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>Mu(zo(Eo(a,r),Cl(a,s)),e,Lu(e))}}},Dh={kernelName:st,inputsToSave:["x"],gradFunc:dh.gradFunc},Oh={kernelName:it,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=ne(r,t[0].shape)[0],i=a.map((e=>e[s]));return Tu(e,i,s).map((e=>()=>e))}},Mh={kernelName:ot,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return H(Ui(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>oo(a.shape,e,r,i,o,u),filter:()=>ju(a,e,r.shape,i,o,u)}}},Lh={kernelName:lt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>so(e,r,s,i,o,1,u),filter:()=>ju(e,a,r.shape,s,i,o,u)}}},zh=Yr({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=ji(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=ji(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),H(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),H(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),H(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),H(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),H(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:a,pad:r,filterShape:n};return Br.runKernel(pt,o,u)}}),Ph={kernelName:ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;H(Ui(a),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const[i,o]=t;return{x:()=>co(i.shape,e,o,r,s),filter:()=>zh(i,e,o.shape,r,s)}}},Bh={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(tu(id(Ms(n,"float32"))),e)}}},Wh={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(ud(Ms(n,"float32")),e)}}},Vh={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:i}=n;return{x:()=>{const t=Yo([r],a.rank);let n=Md(e,r,s,!i);return null!=t&&(n=zu(n,t)),n}}}},Uh={kernelName:xt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:i}=n,o=null==a?[1,1]:a;H(Ui(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return H(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),H(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),H(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),H(Gi(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=i&&H(Z(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>tl(u.shape,e,l,r,s,o,i),filter:()=>el(u,e,l.shape,r,s,o,i)}}},Gh={kernelName:It,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>Br.runKernel(Nt,s,n),filter:()=>Br.runKernel(St,i,n)}}},Hh={kernelName:$t,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>Br.runKernel(Et,a)}}},jh={kernelName:At,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Do(vo(tu(Qo(n))),2/Math.sqrt(Math.PI));return{x:()=>Do(e,a)}}},qh={kernelName:Rt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,n)}}},Kh={kernelName:Ft,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ji(e,n.shape)}}},Xh={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,vo(n))}}},Yh={kernelName:zt,gradFunc:e=>({x:()=>Lu(e)})},Zh={kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=xo(n.shape,a.shape);return{a:()=>{const t=mo(e,Ms(a,"float32")),s=bo(n.shape,r);return s.length>0?ji(Mo(t,s),n.shape):t},b:()=>{let t=Do(e,Ms(n,"float32"));const s=bo(a.shape,r);s.length>0&&(t=ji(Mo(t,s),a.shape));const i=Qo(a);return tu(mo(t,Ms(i,"float32")))}}}},Jh={kernelName:Bt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,i,o]=t,u=null==o?Ti(1):o,l=bo(s.shape,r.shape),c=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const p=Oo(r,s),d=Do(e,u),h=cd(Ei(i,Ti(a))),f=Do(Do(Do(h,h),h),Ti(-.5));return{x:()=>1===s.rank?ji(Do(Do(e,Io(ji(h,[1,1,1,s.shape[0]]),c)),u),r.shape):ji(Do(Do(e,h),u),r.shape),mean:()=>{let e=Do(Do(h,Ti(-1)),d);return 1===s.rank&&(e=Mo(e,l)),ji(e,s.shape)},variance:()=>{let e=Do(Do(f,p),d);return 1===s.rank&&(e=Mo(e,l)),ji(e,s.shape)},scale:()=>{const t=Do(p,h);let n=Do(e,t);return 1===s.rank&&(n=Mo(n,l)),ji(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Mo(t,l)),ji(t,s.shape)}}}},Qh=Yr({unsortedSegmentSum_:function(e,t,n){const a=Kr(e,"x","unsortedSegmentSum"),r=Kr(t,"segmentIds","unsortedSegmentSum","int32");H(Z(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},i={numSegments:n};return Br.runKernel($a,s,i)}}),ef={kernelName:Wt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s}=n,i=ne(s,a.shape)[0];return{x:()=>{const t=a.shape,n=r.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,p=tf(0,u),d=tf(u+1,u+1+c),h=nf([o,[n],l]),f=ji(e,h),m=ji(r,[n]),g=nf([[u],p,d]),y=zu(f,g);let b=Qh(y,m,a.shape[i]);const x=Zo(g);return b=zu(b,x),b},indices:()=>r}}};function tf(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function nf(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const af={kernelName:Gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Lu(n),b:()=>Lu(a)}}},rf={kernelName:Ht,gradFunc:e=>({x:()=>Ms(e,"float32")})},sf={kernelName:Kt,gradFunc:e=>({x:()=>Lu(e)})},of={kernelName:Xt,gradFunc:e=>({x:()=>Lu(e)})},uf={kernelName:Yt,gradFunc:e=>({x:()=>Lu(e)})},lf={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=$o(a,0);return{x:()=>Mu(s,e,Do(e,r))}}},cf={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mo(e,Ei(n,1))}}},pf={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mo(e,Ms(n,"float32"))}}},df={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=vo(a);return Oo(e,Do(Mo(e,r,!0),t))}}}},hf=Yr({localResponseNormalizationBackprop_:function(e,t,n,a=5,r=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:a,bias:r,alpha:s,beta:i};return Br.runKernel(un,o,u)}}),ff={kernelName:on,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>hf(a,r,e,s,i,o,u)}}};function mf(e,t,n,a){return t.rank<n.rank&&(t=ji(t,Ko(t.shape,a))),e.rank<n.rank&&(e=ji(e,Ko(e.shape,a))),{x:()=>Do(e,Ms(wo(n,t),e.dtype))}}const gf={kernelName:ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],i=mf(e,t[1],s,ne(r,s.shape));return{x:()=>i.x()}}},yf={kernelName:cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Do(e,Ms(Eo(n,a),"float32")),b:()=>Do(e,Ms(Ed(n,a),"float32"))}}},bf=Yr({maxPool3dGrad_:function(e,t,n,a,r,s,i){const o=Kr(e,"dy","maxPool3dGrad"),u=Kr(t,"input","maxPool3dGrad"),l=Kr(n,"output","maxPool3dGrad");let c=o,p=u,d=l,h=!1;4===u.rank&&(h=!0,c=ji(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=ji(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=ji(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),H(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),H(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),H(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&H(Z(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const f={dy:c,input:p,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:i},g=Br.runKernel(fn,f,m);return h?ji(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),xf={kernelName:hn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>bf(e,a,r,s,i,o,u)}}},wf=Yr({maxPoolGrad_:function(e,t,n,a,r,s,i){const o=Kr(e,"dy","maxPoolGrad"),u=Kr(t,"input","maxPoolGrad"),l=Kr(n,"output","maxPoolGrad");H(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),H(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),H(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&H(Z(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:u,output:l},p={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return Br.runKernel(dn,c,p)}}),vf={kernelName:pn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>wf(e,a,r,s,i,o)}}},kf={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>xu(e,s,a.shape)}}},If={kernelName:_n,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>xu(e,s,a.shape)}}},Nf={kernelName:Rn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,i=a,o=xo(s.shape,i.shape);return{a:()=>{const t=Ms(i,"float32");let n=Do(e,Do(t,Dl(s,Oo(t,Ti(1)))));const a=bo(s.shape,o);return a.length>0&&(n=Mo(n,a)),ji(n,s.shape)},b:()=>{const t=$o(s,0),n=Mu(t,_o(s),Lu(s));let a=Do(e,Do(r,n));const u=bo(i.shape,o);return u.length>0&&(a=Mo(a,u)),ji(a,i.shape)}}}},Sf={kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=$o(n,Ti(0)),a=Ti(kc),r=Ti(Ic),s=Do(e,r),i=Do(Do(e,a),vo(Ms(n,"float32")));return Mu(t,s,i)}}}},Tf={kernelName:sa,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>Ud(e,a,r)}}},Cf={kernelName:ia,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>eo(e,a)}}},$f=[dh,hh,fh,mh,gh,yh,bh,xh,wh,vh,kh,Ih,Sh,Ch,$h,Eh,Ah,_h,Rh,Fh,Dh,Oh,Lh,Mh,Ph,Bh,Wh,Vh,Uh,Gh,{kernelName:Tt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=xo(n.shape,a.shape);return{a:()=>{const t=mo(e,Ms(a,"float32")),s=bo(n.shape,r);return s.length>0?ji(Mo(t,s),n.shape):t},b:()=>{let t=Do(e,Ms(n,"float32"));const s=bo(a.shape,r);s.length>0&&(t=ji(Mo(t,s),a.shape));const i=Qo(a);return tu(mo(t,Ms(i,"float32")))}}}},Hh,jh,qh,Kh,Xh,Zh,Yh,Jh,ef,af,rf,sf,of,uf,lf,cf,pf,df,ff,gf,gf,yf,xf,vf,{kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=ne(r,a.shape),i=X(qo(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=ji(e,t);return mo(Do(n,su(a.shape,"float32")),i)}}}},{kernelName:yn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,i]=t,o=mf(e,i,s,ne(r,s.shape));return{x:()=>o.x()}}},{kernelName:bn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Do(e,Ms(Cl(n,a),"float32")),b:()=>Do(e,Ms($o(n,a),"float32"))}}},kf,{kernelName:wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=xo(n.shape,a.shape);return{a:()=>{const t=bo(n.shape,r);return t.length>0?ji(Mo(e,t),n.shape):e},b:()=>{const t=Do(e,tu(To(mo(n,a)))),s=bo(a.shape,r);return s.length>0?ji(Mo(t,s),a.shape):t}}}},{kernelName:kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=xo(n.shape,a.shape);return{a:()=>{const t=Do(e,Ms(a,"float32")),s=bo(n.shape,r);return s.length>0?ji(Mo(t,s),n.shape):t},b:()=>{const t=Do(e,Ms(n,"float32")),s=bo(a.shape,r);return s.length>0?ji(Mo(t,s),a.shape):t}}}},{kernelName:In,gradFunc:e=>({x:()=>tu(e)})},{kernelName:En,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>ru(n.shape,"float32")}}},{kernelName:$n,gradFunc:e=>({x:()=>Lu(e)})},{kernelName:An,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return Du(e,a).map((e=>()=>e))}},If,If,Nf,{kernelName:Fn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=$o(n,0);return{x:()=>Mu(r,e,Do(e,a)),alpha:()=>{let t=Mu(r,Lu(e),Do(e,n));const s=bo(a.shape,e.shape);return s.length>0&&(t=Mo(t,s)),ji(t,a.shape)}}}},{kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mo(e,tu(Qo(n)))}}},{kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Do(Cl(n,6),Ku(n));return{x:()=>Do(e,Ms(a,"float32"))}}},{kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Ms(Ku(n),"float32"))}}},{kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ji(e,n.shape)}}},{kernelName:Vn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Br.runKernel(Un,r,n)}}},{kernelName:Bn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Br.runKernel(Wn,r,n)}}},{kernelName:Hn,gradFunc:(e,t,n)=>{const{dims:a}=n,r=ne(a,e.shape);return{x:()=>mu(e,r)}}},{kernelName:jn,gradFunc:e=>({x:()=>Lu(e)})},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(mo(e,Do(Dl(n,1.5),2)))}}},{kernelName:Xn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ms(Lu(n),"float32"),t:()=>Do(e,Ms(n,e.dtype)),e:()=>Do(e,Ms(Ad(n),e.dtype))}}},Sf,{kernelName:ta,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Do(n,Oo(Ti(1),n)))}}},{kernelName:ea,gradFunc:e=>({x:()=>Lu(e)})},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(td(Ms(n,"float32")),e)}}},{kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(nd(Ms(n,"float32")),e)}}},{kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,i=a.shape,[o,u]=hi(a,r,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>ou(e,l)}}},{kernelName:oa,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=Do(e,a);return{logits:()=>Oo(s,Do(Mo(s,[r],!0),a))}}},{kernelName:na,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,bu(n))}}},Tf,Tf,Cf,Cf,{kernelName:aa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mo(e,Do(Cu(Ms(n,"float32")),2))}}},{kernelName:ha,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ti(2);return{a:()=>Do(e,Do(r,Oo(n,a))),b:()=>Do(e,Do(r,Oo(a,n)))}}},{kernelName:fa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(e,Do(Ms(n,"float32"),2))}}},{kernelName:Aa,gradFunc:e=>({x:()=>Lu(e)})},{kernelName:xa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=xo(n.shape,a.shape);return{a:()=>{let t=e;const a=bo(n.shape,r);return a.length>0&&(t=Mo(t,a)),ji(t,n.shape)},b:()=>{let t=e;const n=bo(a.shape,r);return n.length>0&&(t=Mo(t,n)),ji(tu(t),a.shape)}}}},{kernelName:ra,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;ne(s,a.shape).forEach((e=>{r[e]=1}));const i=ji(e,r),o=Do(i,su(a.shape,"float32"));return{x:()=>o}}},{kernelName:wa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>mo(e,Qo(td(n)))}}},{kernelName:va,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Do(Oo(Ti(1),Qo(n)),e)}}},{kernelName:ka,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=Lu(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=Ei(t,xu(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=Ei(t,xu(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)t=Ei(t,xu(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Ei(t,xu(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Sa,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=Zo(r);return{x:()=>zu(e,s)}}},{kernelName:Ca,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>Eu(e,r)}}},{kernelName:$a,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Vo(t,Lu(t)),a=Co(e,n);let r=Eo(t,Ti(0,"int32"));const s=a.rank-r.rank;for(let e=0;e<s;++e)r=ko(r,e+1);r=zo(r,su(a.shape,"bool"));const i=Lu(a);return Mu(r,a,i)}(e,n)}}},{kernelName:Ea,gradFunc:e=>({x:()=>Lu(e)})}];for(const e of $f)Va(e);kr().prototype.abs=function(){return this.throwIfDisposed(),$i(this)},kr().prototype.acos=function(){return this.throwIfDisposed(),qp(this)},kr().prototype.acosh=function(){return this.throwIfDisposed(),Kp(this)},kr().prototype.add=function(e){return this.throwIfDisposed(),Ei(this,e)},kr().prototype.all=function(e,t){return this.throwIfDisposed(),Ai(this,e,t)},kr().prototype.any=function(e,t){return this.throwIfDisposed(),_i(this,e,t)},kr().prototype.argMax=function(e){return this.throwIfDisposed(),Ri(this,e)},kr().prototype.argMin=function(e){return this.throwIfDisposed(),Od(this,e)},kr().prototype.asScalar=function(){return this.throwIfDisposed(),H(1===this.size,(()=>"The array must have only 1 element.")),ji(this,[])},kr().prototype.asType=function(e){return this.throwIfDisposed(),Ms(this,e)},kr().prototype.as1D=function(){return this.throwIfDisposed(),ji(this,[this.size])},kr().prototype.as2D=function(e,t){return this.throwIfDisposed(),ji(this,[e,t])},kr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ji(this,[e,t,n])},kr().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),ji(this,[e,t,n,a])},kr().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),ji(this,[e,t,n,a,r])},kr().prototype.asin=function(){return this.throwIfDisposed(),Xp(this)},kr().prototype.asinh=function(){return this.throwIfDisposed(),Yp(this)},kr().prototype.atan=function(){return this.throwIfDisposed(),Zp(this)},kr().prototype.atan2=function(e){return this.throwIfDisposed(),Jp(this,e)},kr().prototype.atanh=function(){return this.throwIfDisposed(),Qp(this)},kr().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),qi(this,e,t,n,a)},kr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Ud(this,e,t)},kr().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),Xi(this,e,t,n,a,r)},kr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ou(this,e)},kr().prototype.cast=function(e){return this.throwIfDisposed(),Ms(this,e)},kr().prototype.ceil=function(){return this.throwIfDisposed(),ed(this)},kr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Qi(this,e,t)},kr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof vr&&(e=[e]),eo([this,...e],t)},kr().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),io(this,e,t,n,a,r,s)},kr().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),uo(this,e,t,n,a,r)},kr().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),so(this,e,t,n,a,r,s)},kr().prototype.cos=function(){return this.throwIfDisposed(),td(this)},kr().prototype.cosh=function(){return this.throwIfDisposed(),nd(this)},kr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Md(this,e,t,n)},kr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Gd(this,e,t)},kr().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),ho(this,e,t,n,a,r,s)},kr().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),wd(this,e,t,n,a,r)},kr().prototype.divNoNan=function(e){return this.throwIfDisposed(),jp(this,e)},kr().prototype.div=function(e){return this.throwIfDisposed(),mo(this,e)};const Ef=Yr({dot_:function(e,t){const n=Kr(e,"t1","dot"),a=Kr(t,"t2","dot");H(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(H(r===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`)),1===n.rank&&1===a.rank){const e=ji(n,[1,-1]),t=ji(a,[-1,1]),r=Po(e,t);return ji(r,[])}if(1===n.rank&&2===a.rank){const e=ji(n,[1,-1]),t=ji(a,[a.shape[0],a.shape[1]]),r=Po(e,t);return ji(r,[r.size])}if(2===n.rank&&1===a.rank){const e=ji(a,[-1,1]),t=Po(n,e);return ji(t,[t.size])}{const e=ji(a,[a.shape[0],a.shape[1]]);return Po(n,e)}}});kr().prototype.dot=function(e){return this.throwIfDisposed(),Ef(this,e)},kr().prototype.elu=function(){return this.throwIfDisposed(),go(this)},kr().prototype.equal=function(e){return this.throwIfDisposed(),wo(this,e)},kr().prototype.erf=function(){return this.throwIfDisposed(),ad(this)},kr().prototype.exp=function(){return this.throwIfDisposed(),vo(this)},kr().prototype.expandDims=function(e){return this.throwIfDisposed(),ko(this,e)},kr().prototype.expm1=function(){return this.throwIfDisposed(),rd(this)},kr().prototype.fft=function(){return this.throwIfDisposed(),Vu(this)},kr().prototype.flatten=function(){return this.throwIfDisposed(),ji(this,[this.size])},kr().prototype.floor=function(){return this.throwIfDisposed(),To(this)},kr().prototype.floorDiv=function(e){return this.throwIfDisposed(),fo(this,e)},kr().prototype.gather=function(e,t){return this.throwIfDisposed(),Co(this,e,t)},kr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Eo(this,e)},kr().prototype.greater=function(e){return this.throwIfDisposed(),$o(this,e)},kr().prototype.ifft=function(){return this.throwIfDisposed(),Gu(this)},kr().prototype.irfft=function(){return this.throwIfDisposed(),Hu(this)};const Af=Yr({isFinite_:function(e){const t={x:Kr(e,"x","isFinite")};return Br.runKernel(Kt,t)}});kr().prototype.isFinite=function(){return this.throwIfDisposed(),Af(this)};const _f=Yr({isInf_:function(e){const t={x:Kr(e,"x","isInf")};return Br.runKernel(Xt,t)}});kr().prototype.isInf=function(){return this.throwIfDisposed(),_f(this)},kr().prototype.isNaN=function(){return this.throwIfDisposed(),dd(this)},kr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ao(this,e)},kr().prototype.lessEqual=function(e){return this.throwIfDisposed(),Cl(this,e)},kr().prototype.less=function(e){return this.throwIfDisposed(),Ed(this,e)},kr().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),Fd(this,e,t,n,a)};const Rf=Yr({logSigmoid_:function(e){const t=Kr(e,"x","logSigmoid"),n=Si((e=>({value:tu(Su(tu(e))),gradFunc:t=>Do(t,bu(tu(e)))})));return n(t)}});kr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Rf(this)},kr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Lo(this,e)},kr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ul(this,e,t)},kr().prototype.log=function(){return this.throwIfDisposed(),_o(this)},kr().prototype.log1p=function(){return this.throwIfDisposed(),Ro(this)},kr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),zo(this,e)},kr().prototype.logicalNot=function(){return this.throwIfDisposed(),Ad(this)},kr().prototype.logicalOr=function(e){return this.throwIfDisposed(),_d(this,e)};const Ff=Yr({logicalXor_:function(e,t){const n=Kr(e,"a","logicalXor","bool"),a=Kr(t,"b","logicalXor","bool");return xo(n.shape,a.shape),zo(_d(e,t),Ad(zo(e,t)))}});kr().prototype.logicalXor=function(e){return this.throwIfDisposed(),Ff(this,e)},kr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Po(this,e,t,n)},kr().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),Bo(this,e,t,n,a)},kr().prototype.max=function(e,t){return this.throwIfDisposed(),Fo(this,e,t)},kr().prototype.maximum=function(e){return this.throwIfDisposed(),Vo(this,e)},kr().prototype.mean=function(e,t){return this.throwIfDisposed(),Uo(this,e,t)},kr().prototype.min=function(e,t){return this.throwIfDisposed(),Fl(this,e,t)},kr().prototype.minimum=function(e){return this.throwIfDisposed(),Go(this,e)},kr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Wd(this,e,t)},kr().prototype.mod=function(e){return this.throwIfDisposed(),Hp(this,e)},kr().prototype.mul=function(e){return this.throwIfDisposed(),Do(this,e)},kr().prototype.neg=function(){return this.throwIfDisposed(),tu(this)},kr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Ml(this,e,t,n)},kr().prototype.notEqual=function(e){return this.throwIfDisposed(),nu(this,e)},kr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),au(this,e,t,n)},kr().prototype.onesLike=function(){return this.throwIfDisposed(),iu(this)},kr().prototype.pad=function(e,t){return this.throwIfDisposed(),ou(this,e,t)};const Df=Yr({pool_:function(e,t,n,a,r,s){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const i=Kr(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=ji(i,[1,i.shape[0],i.shape[1],i.shape[2]])),H(Gi(s,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`));const l=Di(o.shape,t,s,r,a),c=[l.dilationHeight,l.dilationWidth];let p;p="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],r[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[h,f]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[a[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,p),m=d?a:"valid",g=d?o:Vd(o,c,h),y=("avg"===n?()=>qi(g,t,s,m):()=>Bo(g,t,s,m))(),b=d?y:Ud(y,c,f);return u?ji(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});let Of;function Mf(){return null==Of&&(Of=Br.backend.epsilon()),Of}kr().prototype.pool=function(e,t,n,a,r){return this.throwIfDisposed(),Df(this,e,t,n,a,r)},kr().prototype.pow=function(e){return this.throwIfDisposed(),Dl(this,e)},kr().prototype.prelu=function(e){return this.throwIfDisposed(),uu(this,e)},kr().prototype.prod=function(e,t){return this.throwIfDisposed(),pd(this,e,t)},kr().prototype.reciprocal=function(){return this.throwIfDisposed(),sd(this)},kr().prototype.relu=function(){return this.throwIfDisposed(),fu(this)},kr().prototype.relu6=function(){return this.throwIfDisposed(),qu(this)},kr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ji(this,e.shape)},kr().prototype.reshape=function(e){return this.throwIfDisposed(),ji(this,e)},kr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Nl(this,e,t,n)},kr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Sl(this,e,t,n)},kr().prototype.reverse=function(e){return this.throwIfDisposed(),mu(this,e)},kr().prototype.rfft=function(){return this.throwIfDisposed(),Uu(this)},kr().prototype.round=function(){return this.throwIfDisposed(),$l(this)},kr().prototype.rsqrt=function(){return this.throwIfDisposed(),cd(this)},kr().prototype.selu=function(){return this.throwIfDisposed(),gu(this)},kr().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),yu(this,e,t,n,a,r,s)},kr().prototype.sigmoid=function(){return this.throwIfDisposed(),bu(this)},kr().prototype.sign=function(){return this.throwIfDisposed(),od(this)},kr().prototype.sin=function(){return this.throwIfDisposed(),id(this)},kr().prototype.sinh=function(){return this.throwIfDisposed(),ud(this)},kr().prototype.slice=function(e,t){return this.throwIfDisposed(),xu(this,e,t)},kr().prototype.softmax=function(e){return this.throwIfDisposed(),Nu(this,e)},kr().prototype.softplus=function(){return this.throwIfDisposed(),Su(this)},kr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Vd(this,e,t)},kr().prototype.split=function(e,t){return this.throwIfDisposed(),Tu(this,e,t)},kr().prototype.sqrt=function(){return this.throwIfDisposed(),Cu(this)},kr().prototype.square=function(){return this.throwIfDisposed(),Qo(this)},kr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Vl(this,e)},kr().prototype.squeeze=function(e){return this.throwIfDisposed(),$u(this,e)},kr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof vr?[this,e]:[this,...e];return Eu(n,t)},kr().prototype.step=function(e){return this.throwIfDisposed(),Ku(this,e)},kr().prototype.stridedSlice=function(e,t,n,a,r,s,i,o){return this.throwIfDisposed(),zd(this,e,t,n,a,r,s,i,o)},kr().prototype.sub=function(e){return this.throwIfDisposed(),Oo(this,e)},kr().prototype.sum=function(e,t){return this.throwIfDisposed(),Mo(this,e,t)},kr().prototype.tan=function(){return this.throwIfDisposed(),ld(this)},kr().prototype.tanh=function(){return this.throwIfDisposed(),Au(this)},kr().prototype.tile=function(e){return this.throwIfDisposed(),Io(this,e)},kr().prototype.toBool=function(){return this.throwIfDisposed(),Ms(this,"bool")},kr().prototype.toFloat=function(){return this.throwIfDisposed(),Ms(this,"float32")},kr().prototype.toInt=function(){return this.throwIfDisposed(),Ms(this,"int32")},kr().prototype.topk=function(e,t){return this.throwIfDisposed(),Td(this,e,t)},kr().prototype.transpose=function(e){return this.throwIfDisposed(),zu(this,e)},kr().prototype.unique=function(e){return this.throwIfDisposed(),Cd(this,e)},kr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Qh(this,e,t)},kr().prototype.unstack=function(e){return this.throwIfDisposed(),Du(this,e)},kr().prototype.where=function(e,t){return this.throwIfDisposed(),Mu(e,this,t)},kr().prototype.zerosLike=function(){return this.throwIfDisposed(),Lu(this)};class Lf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lf.prototype)}}class zf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zf.prototype)}}class Pf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pf.prototype)}}class Bf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bf.prototype)}}class Wf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wf.prototype)}}function Vf(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Uf(e,t){if(!e)throw new Wf(t)}function Gf(e,t){let n=0;for(const a of e)a===t&&n++;return n}function Hf(e){return 1===e.length?e[0]:e}function jf(e){return Array.isArray(e)?e:[e]}function qf(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Kf(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Xf={};function Yf(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Zf(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Zf(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Zf(t):e[n]=t.value)}}}function Jf(e,t={},n={},a="object",r=!1){if("string"==typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in Xf)s=Xf[r];else if(s=t[r],null==s)throw new Pf(`Unknown ${a}: ${e}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Pf(`${a}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Xf?[o,u]=Xf.className:i in t&&([o,u]=t[i]),null==o)throw new Pf(`Unknown ${a}: ${i}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Xf))e[t]=Xf[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Xf);for(const e of Object.keys(n))Xf[e]=n[e];Zf(s.config);const a=u(o,s.config,n,r);return Xf=Object.assign({},t),a}{const e=Object.assign({},Xf);for(const e of Object.keys(n))Xf[e]=n[e];const t=new o(s.config);return Xf=Object.assign({},e),t}}}function Qf(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function em(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function tm(e){if(null==e)throw new Pf(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function nm(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Pf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function am(e,t,n=0,a=1/0){return Uf(n>=0),Uf(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function rm(e,t){Array.isArray(e)?(H(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>rm(e,`element ${n+1} of ${t}`)))):H(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${sm(e)}.`))}function sm(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>sm(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function im(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function om(e,t){return vi((()=>Cu(Mo(Do(e,e),t,!0))))}class um extends gi{getConfig(){return{}}}class lm extends um{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return vi((()=>{const t=om(e,this.axis),n=Qi(t,0,this.maxValue);return Do(e,mo(n,Ei(Mf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}lm.className="MaxNorm",bi(lm);class cm extends um{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return vi((()=>mo(e,Ei(Mf(),om(e,this.axis)))))}getConfig(){return{axis:this.axis}}}cm.className="UnitNorm",bi(cm);class pm extends um{apply(e){return fu(e)}}pm.className="NonNeg",bi(pm);class dm extends um{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return vi((()=>{const t=om(e,this.axis),n=Ei(Do(this.rate,Qi(t,this.minValue,this.maxValue)),Do(1-this.rate,t));return Do(e,mo(n,Ei(Mf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}dm.className="MinMaxNorm",bi(dm);const hm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fm(e){return Yf(e)}function mm(e,t={}){return Jf(e,yi.getMap().classNameMap,t,"constraint")}function gm(e){return null==e?null:"string"==typeof e?mm({className:e in hm?hm[e]:e,config:{}}):e instanceof um?e:mm(e)}const ym=["channelsFirst","channelsLast"],bm=["nearest","bilinear"],xm=["valid","same","causal"],wm=["max","avg"],vm=["sum","mul","concat","ave"],km=new Map;function Im(e){nm(ym,"DataFormat",e)}function Nm(e){nm(xm,"PaddingMode",e)}function Sm(e){nm(wm,"PoolMode",e)}const Tm=[];function Cm(e,t){Tm.push(e);try{const e=t();return Tm.pop(),e}catch(e){throw Tm.pop(),e}}function $m(e){if(!_m(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Tm.length?"":Tm.join("/")+"/")+e}function Em(e){if(!_m(e))throw new Error("Not a valid tensor name: '"+e+"'");km.has(e)||km.set(e,0);const t=km.get(e);if(km.set(e,km.get(e)+1),t>0){const n=`${e}_${t}`;return km.set(n,1),n}return e}const Am=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function _m(e){return!!e.match(Am)}function Rm(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Fm(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Dm(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function Om(e,t){if(t<e)throw new Pf(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Mm(e,t){return Ms(e,t)}function Lm(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),ji(e,n)}function zm(e,t,n){return vi((()=>{switch(e.rank){case 1:return wu(e,t,n);case 2:return vu(e,[t,0],[n,e.shape[1]]);case 3:return ku(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Iu(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return xu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return xu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Pf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Pm(e,t,n){return vi((()=>{switch(e.rank){case 1:return wu(e,t,n);case 2:return vu(e,[0,t],[e.shape[0],n]);case 3:return ku(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Iu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Pf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Bm(e,t,n,a){return vi((()=>{switch(e.rank){case 1:return wu(e,t,n);case 2:switch(a){case 1:return zm(e,t,n);case 2:return Pm(e,t,n);default:throw new Pf(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return zm(e,t,n);case 2:return ku(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Pm(e,t,n);default:throw new Pf(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return zm(e,t,n);case 2:return Iu(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Iu(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Pm(e,t,n);default:throw new Pf(`The axis is not within the rank of the tensor ${a}`)}default:throw new Pf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Wm(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),eo(e,t)}function Vm(e,t){switch(e.rank){case 1:return to([e,t]);case 2:return no([e,t],0);case 3:return ao([e,t],0);case 4:return ro([e,t],0);default:throw new Pf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Um(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Pf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Io(e,t)}function Gm(e,t=0,n=1,a,r){return du(e,t,n,a,r)}function Hm(e,t,n,a){if(e.rank<2||t.rank<2)throw new Bf(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Bf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return al({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Km(e.rank,a,"channelsLast"):null,activation:n});{const r=e.shape.slice(),s=r.pop();e=ji(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=ji(zu(t,c),[u,-1]);const p=[...r,...l];return ji(al({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Km(e.rank,a,"channelsLast"):null,activation:n}),p)}}function jm(e,t,n){return vi((()=>(t=Array.isArray(t)?_u(t,"int32"):Ms(t,"int32"),Co(e,t,n))))}function qm(e){return Do(e,e)}function Km(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Pf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?ji(t,[1,a[0],1,1,1]):ji(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?ji(t,[1,1,1,1,a[0]]):ji(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?ji(t,[1,a[0],1,1]):ji(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?ji(t,[1,1,1,a[0]]):ji(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?ji(t,[1,a[0],1]):ji(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?ji(t,[1,1,a[0]]):ji(t,[1].concat(a))}else if(e<3)return t;throw new Pf(`Unsupported input rank by biasAdd: ${t.rank}`)}function Xm(e,t,n){return vi((()=>(null==n&&(n="channelsLast"),Im(n),Ei(e,Km(e.rank,t,n)))))}function Ym(e,t,n,a){return vi((()=>Pu(e,t,n,a)))}function Zm(e,t,n=!1){return n?e():t()}const Jm=["fanIn","fanOut","fanAvg"],Qm=["normal","uniform","truncatedNormal"];class eg extends gi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class tg extends eg{apply(e,t){return ru(e,t)}}tg.className="Zeros",bi(tg);class ng extends eg{apply(e,t){return su(e,t)}}ng.className="Ones",bi(ng);class ag extends eg{constructor(e){if(super(),"object"!=typeof e)throw new Pf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Pf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return vi((()=>Do(Ti(this.value),su(e,t))))}getConfig(){return{value:this.value}}}ag.className="Constant",bi(ag);class rg extends eg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return hu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}rg.className="RandomUniform",bi(rg);class sg extends eg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Bf(`randomNormal does not support dType ${t}.`);return Gm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}sg.className="RandomNormal",bi(sg);class ig extends eg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Bf(`truncatedNormal does not support dType ${t}.`);return Fu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ig.className="TruncatedNormal",bi(ig);class og extends eg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return vi((()=>{if(2!==e.length||e[0]!==e[1])throw new Pf("Identity matrix initializer can only be used for 2D square matrices.");return Do(this.gain,No(e[0]))}))}getConfig(){return{gain:this.gain}}}og.className="Identity",bi(og);class ug extends eg{constructor(e){if(super(),e.scale<0)throw new Pf(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,nm(Jm,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){nm(Qm,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,a;if(Im(t),2===e.length)n=e[0],a=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Rm(e,2);n=e[1]*t,a=e[0]*t}else if("channelsLast"===t){const t=Rm(e,0,e.length-2);n=e[e.length-2]*t,a=e[e.length-1]*t}}else{const t=Rm(e);n=Math.sqrt(t),a=Math.sqrt(t)}return[n,a]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Bf(`${this.getClassName()} does not support dType ${t}.`);return Fu(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return hu(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ug.className="VarianceScaling",bi(ug);class lg extends ug{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ug.className}}lg.className="GlorotUniform",bi(lg);class cg extends ug{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ug.className}}cg.className="GlorotNormal",bi(cg);class pg extends ug{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ug.className}}pg.className="HeNormal",bi(pg);class dg extends ug{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ug.className}}dg.className="HeUniform",bi(dg);class hg extends ug{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ug.className}}hg.className="LeCunNormal",bi(hg);class fg extends ug{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ug.className}}fg.className="LeCunNormal",bi(fg);class mg extends eg{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Bf("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return vi((()=>{if(e.length<2)throw new Bf("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Gm(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Jl.gramSchmidt(t);return e[0]>e[1]&&(n=zu(n)),Do(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}mg.className="Orthogonal",bi(mg);const gg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function yg(e,t={}){return Jf(e,yi.getMap().classNameMap,t,"initializer")}function bg(e){return Yf(e)}function xg(e){if("string"==typeof e){const t=e in gg?gg[e]:e;if("GlorotNormal"===t)return new cg;if("GlorotUniform"===t)return new lg;if("HeNormal"===t)return new pg;if("HeUniform"===t)return new dg;if("LeCunNormal"===t)return new hg;if("LeCunUniform"===t)return new fg;{const e={};return e.className=t,e.config={},yg(e)}}return e instanceof eg?e:yg(e)}let wg=0;function vg(){return wg++}const kg={};function Ig(e=""){return e in kg||(kg[e]=0),kg[e]+=1,e+kg[e].toString()}function Ng(e){return Array.isArray(e)&&Array.isArray(e[0])}function Sg(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Tg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Pf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Cg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Pf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function $g(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Eg{constructor(e,t="float32",n="Variable",a=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=vg(),n=null==n?"Variable":n,this.originalName=$m(n),this.name=Em(this.originalName),this.trainable_=a,this.constraint=r,this.val=function(e,t=!0,n,a){return Br.makeVariable(e,t,n,a)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ag(e){return e.map((e=>e.read()))}function _g(e){e.forEach((e=>{e[0].write(e[1])}))}class Rg{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Fg{constructor(e,t,n,a,r,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=i,this.id=vg(),null!=s&&(this.originalName=$m(s),this.name=Em(this.originalName)),this.rank=t.length}}let Dg=0;class Og{constructor(e,t){this.callArgs=t,this.id=Dg++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Mg=0;class Lg extends gi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Mg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=qf(e)+"_"+Ig(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new zf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Pf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Hf(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Hf(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Lf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Lf(`Layer ${this.name} is not connected, no input to return.`);return Hf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Lf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Lf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Hf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=jf(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=jf(this.inputSpec);if(e.length!==t.length)throw new Pf(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const a=e[n],r=t[n];if(null==r)continue;const s=a.rank;if(null!=r.ndim&&s!==r.ndim)throw new Pf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${s}`);if(null!=r.maxNDim&&s>r.maxNDim)throw new Pf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${s}`);if(null!=r.minNDim&&s<r.minNDim)throw new Pf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${s}.`);if(null!=r.dtype&&a.dtype!==r.dtype)throw new Pf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){const e=a.shape;for(const t in r.axes){const a=Number(t),s=r.axes[t],i=a>=0?e[a]:e[e.length+a];if(null!=s&&-1===[s,null].indexOf(i))throw new Pf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${a} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],s=a.shape[e];if(null!=t&&null!=s&&t!==s)throw new Pf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=jf(e);let a=!0;for(const e of n)if(!(e instanceof Fg)){a=!1;break}let r=!0;for(const e of n)if(e instanceof Fg){r=!1;break}if(a===r)throw new Pf("Arguments to apply() must be all SymbolicTensors or all Tensors");return Cm(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of jf(e))t.push(n.shape);this.build(Hf(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);const r=jf(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=Hf(s),null!=this.activityRegularizer)throw new Bf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=jf(e);const t=[];for(const n of e)t.push(n.shape);return Hf(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Fg(s,n,this,jf(e),t,this.name,a))):new Fg(s,a,this,jf(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Bf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Lf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Lf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new zf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return $g(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ag(e?this.trainableWeights:this.weights)}setWeights(e){vi((()=>{const t=this.weights;if(t.length!==e.length)throw new Pf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],a=Ag(t);for(let r=0;r<a.length;++r){const s=a[r],i=t[r],o=e[r];if(!Y(s.shape,o.shape))throw new Pf(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}_g(n)}))}addWeight(e,t,n,a,r,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Pf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():xg("zeros"));const u=a.apply(t,n),l=new Eg(u,n,e,s,i);return u.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=jf(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,a,r,s,i=null){const o=jf(e);t=jf(t),n=jf(n),a=jf(a),r=Sg(r),s=Sg(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Og({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function zg(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=zg(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Pg extends Lg{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ig("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Pf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Pf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Pf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Fg(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Og({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Pf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Bg(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];ki(a)}}function Wg(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Vg;Pg.className="InputLayer",bi(Pg),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Vg||(Vg={}));class Ug{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Gg{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Hg extends Ug{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const a=t[e];if("number"==typeof a)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+a*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=vi((()=>Ei(this.totals[e],Do(a,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:vi((()=>{const n=Do(mo(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Ii(t[e])})))}}class jg extends Ug{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){const i=r[s];e.push(i.data()),t.push(a),n.push(s)}}const a=await Promise.all(e);for(let e=0;e<a.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=a[e][0]}}class qg extends Ug{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||pc,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ce(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():ir();return(...s)=>{const i=null!=n?n():ir();return i-r<t||(r=i,a=e(...s)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Bg(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Bg(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Bg(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Bg(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Bg(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ce(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Bg(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Bg(e),await this.trainEnd(e))}}function Kg(e,t){return null==e&&(e={}),e instanceof Ug?[e]:Array.isArray(e)&&e[0]instanceof Ug?e:jf(e).map((e=>new qg(e,t)))}class Xg{constructor(){}static registerCallbackConstructor(e,t){H(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Xg.checkForDuplicate(t),null==Xg.constructors[e]&&(Xg.constructors[e]=[]),Xg.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Xg.constructors)Xg.constructors[+t].forEach((t=>{if(t===e)throw new Pf("Duplicate callback constructor.")}))}static clear(){Xg.constructors={}}static createCallbacks(e){const t=[];for(const n in Xg.constructors){const a=+n;e>=a&&t.push(...Xg.constructors[a])}return t.map((e=>new e))}}function Yg(e,t,n,a,r,s,i,o,u){const l=new jg,c=[new Hg,...Xg.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const p=new Gg(c);return p.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:p,history:l}}function Zg(e,t={},n=!1){return Jf(e,yi.getMap().classNameMap,t,"layer",n)}function Jg(e,t){return vi((()=>{"float32"!==e.dtype&&(e=Ms(e,"float32"));const n=Mo(qm(e),t,!0),a=So(n.shape,Mf()),r=Cu(Vo(n,a));return mo(e,r)}))}function Qg(e,t){return vi((()=>Uo(qm(Oo(t,e)),-1)))}function ey(e,t){return vi((()=>Uo($i(Oo(t,e)),-1)))}function ty(e,t){return vi((()=>{const n=Oo(e,t),a=Qi($i(e),Mf(),Number.MAX_VALUE),r=$i(mo(n,a));return Do(100,Uo(r,-1))}))}function ny(e,t,n=!1){return vi((()=>{if(n)t=Nu(t);else{const e=Mo(t,t.shape.length-1,!0);t=mo(t,e)}return t=Qi(t,Mf(),1-Mf()),tu(Mo(Do(Ms(e,"float32"),_o(t)),t.shape.length-1))}))}function ay(e,t,n=!1){return vi((()=>{const a=Ms(To(function(e){const t=[Rm(e.shape)];return ji(e,t)}(e)),"int32"),r=(t=Qi(t,Mf(),1-Mf())).shape;return ny(ji(au(a,r[r.length-1]),r),t,n)}))}function ry(e,t){return vi((()=>{let n;return n=Qi(t,Mf(),1-Mf()),n=_o(mo(n,Oo(1,n))),Uo(function(e,t){if(!Y(e.shape,t.shape))throw new Pf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return vi((()=>{const n=fu(t),a=tu($i(t));return Ei(Oo(n,Do(t,e)),Ro(vo(a)))}))}(e,n),-1)}))}function sy(e,t){return vi((()=>{const n=Jg(e,-1),a=Jg(t,-1),r=Do(n,a);return tu(Mo(r,-1))}))}Xg.constructors={};const iy={meanSquaredError:Qg,meanAbsoluteError:ey,meanAbsolutePercentageError:ty,meanSquaredLogarithmicError:function(e,t){return vi((()=>{const n=Qi(t,Mf(),Number.MAX_VALUE),a=_o(Ei(1,n)),r=Qi(e,Mf(),Number.MAX_VALUE),s=_o(Ei(1,r));return Uo(qm(Oo(a,s)),-1)}))},squaredHinge:function(e,t){return vi((()=>{const n=Vo(0,Oo(1,Do(e,t)));return Uo(qm(n),-1)}))},hinge:function(e,t){return vi((()=>{const n=Vo(0,Oo(1,Do(e,t)));return Uo(n,-1)}))},categoricalHinge:function(e,t){return vi((()=>{const n=Mo(Do(e,t),-1),a=Fo(Do(Oo(1,e),t),-1);return Vo(0,Ei(1,Oo(a,n)))}))},logcosh:function(e,t){return vi((()=>{const n=Math.log(2),a=Oo(t,e),r=Oo(Ei(a,Su(Do(-2,a))),n);return Uo(r,-1)}))},categoricalCrossentropy:ny,sparseCategoricalCrossentropy:ay,binaryCrossentropy:ry,kullbackLeiblerDivergence:function(e,t){return vi((()=>{const n=Qi(e,Mf(),1),a=Qi(t,Mf(),1);return Mo(Do(e,_o(mo(n,a))),-1)}))},poisson:function(e,t){return vi((()=>{const n=_o(Ei(Mf(),t));return Uo(Oo(t,Do(e,n)),-1)}))},cosineProximity:sy};function oy(e){if("string"==typeof e){if(e in iy)return iy[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Pf(t)}return e}function uy(e,t){return vi((()=>{const n=Do(.5,iu(t)),a=Mm($o(t,n),e.dtype);return Uo(wo(e,a),-1)}))}function ly(e,t){return vi((()=>Mm(wo(Ri(e,-1),Ri(t,-1)),"float32")))}function cy(e,t){return ry(e,t)}function py(e,t){return e.rank===t.rank&&(e=$u(e,[e.rank-1])),(t=Ri(t,-1)).dtype!==e.dtype&&(t=Ms(t,e.dtype)),Ms(wo(e,t),"float32")}const dy=ny,hy=ay,fy={binaryAccuracy:uy,categoricalAccuracy:ly,precision:function(e,t){return vi((()=>{const n=function(e,t){return vi((()=>Ms(Mo(zo(wo(e,1),wo(t,1))),"float32")))}(e,t),a=function(e,t){return vi((()=>Ms(Mo(zo(wo(e,0),wo(t,1))),"float32")))}(e,t),r=Ei(n,a);return Ms(Mu($o(r,0),mo(n,r),0),"float32")}))},categoricalCrossentropy:dy,sparseCategoricalCrossentropy:hy,mse:Qg,MSE:Qg,mae:ey,MAE:ey,mape:ty,MAPE:ty,cosine:sy};function my(e){if("string"==typeof e&&e in fy)return fy[e];if("string"!=typeof e&&null!=e)return e;throw new Pf(`Unknown metric ${e}`)}function gy(e){if(Uf(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(iy))if(iy[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(fy))if(fy[n]===e){t=n;break}return void 0!==t?t:e.name}}function yy(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!by(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function by(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!by(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!by(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function xy(e,t,n=console.log){let a="";for(let n=0;n<e.length;++n)n>0&&(a=a.slice(0,a.length-1)+" "),a+=e[n],a=a.slice(0,t[n]),a+=" ".repeat(t[n]-a.length);n(a)}function wy(e,t,n){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}xy([`${e.name} (${e.getClassName()})`,a,e.countParams().toString()],t,n)}function vy(e,t,n,a){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,a=t.nodeIndices[e],r=t.tensorIndices[e];s.push(`${n}[${a}][${r}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];xy([`${i} (${o})`,r,e.countParams().toString(),u],t,a);for(let e=1;e<s.length;++e)xy(["","","",s[e]],t,a)}function ky(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Iy(e,t){if(null===e)return null;if("string"==typeof e)return Kf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];ky(t,r,a)?n.push(a):n.push(Iy(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"==typeof a)t[n]=a;else{const e=Kf(n);t[e]=Iy(a,e)}}return t}}function Ny(e,t){if(null==e)return null;if("string"==typeof e)return qf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];ky(t,r,a)?n.push(a):n.push(Ny(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];t[qf(n)]="name"!==n&&"className"!==n||"string"!=typeof a?Ny(a,n):a}return t}}class Sy{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Sy)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Pf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ms(t,e.dtype)}catch(n){throw new Pf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Fg){if(null==this.id2Value[e.id])throw new Pf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Pf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Fg){if(null==this.id2Value[e.id])throw new Pf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Pf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ki(this.id2Mask)}}const Ty={},Cy={};function $y(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let p,d;if(null==Ty[c]){const e=function(e,t){H(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=Ay(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Ay(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==a[e]&&(a[e]=new Set),i[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:Ey(a)}}(i,t);p=e.sorted,d=e.recipientCounts,Ty[c]=p,Cy[c]=d}p=Ty[c],d={},r||Object.assign(d,Cy[c]);const h=new Sy(t);for(let e=0;e<p.length;++e){if(null!=a){const e=wi().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const s=p[e],i=s.sourceLayer;if(i instanceof Pg)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=h.getValue(e),a=h.getMask(e);l.push(n),c.push(a),null!=a&&(m=!0),r||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=jf(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=_y(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){h.hasKey(x[e])||h.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}r||ki(f)}return h.disposeMasks(),s?u:u[0]}function Ey(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ay(e,t){const n=new Set,a=[],r={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function _y(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Ry extends Lg{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ig(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],em(this.inputs).length!==this.inputs.length)throw new Pf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);em(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(a)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;Uf(0===n,"input layer has >1 nodes"),Uf(0===a,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(a)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Pg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},i=[],o=(e,t,n,a,r,u)=>{null!=a&&null!=r&&null!=u||(a=e.sourceLayer,r=e.nodeIndex,u=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new zf(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Ry.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const a=l.inputTensors[e],r=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(a,t,n,r,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id];s=Math.max(s,i),a[e.outboundLayer.id]=s,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],i=e.nodeIndices[a],o=r.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const p={};for(const e in t){const a=t[e];a in p||(p[a]=[]),p[a].push(n[e])}const d={};for(const e in a){const t=a[e];t in d||(d[t]=[]),d[t].push(r[e])}let h=Object.keys(d).map((e=>parseInt(e,10))).sort(Qf);this.layers=[];for(const e of h){const t=d[e];t.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof Ry&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,h=Object.keys(p).map((e=>parseInt(e,10))).sort(Qf);const f=this.inputs.slice(),m=[];for(const e of h)for(const t of p[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new zf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new zf(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Og({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Pf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let a=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Pf(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,a++}const r=[];for(const a in e){let s=a;if(null==n[a]){const e=a.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])r.push([n[s],e[a]]);else if(t)throw new Pf(`Provided weight data has no target variable: ${a}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Pf(`${e.length} of ${a} weights are not set: ${e}`)}_g(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.11.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ny(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return vi((()=>{e=jf(e);const n=new Sy;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return $y(this.outputs,n,t)}))}computeMask(e,t){return vi((()=>{let n;return e=jf(e),n=null==t?Vf(null,e.length):jf(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Sg(e);if(t.length!==this.inputLayers.length)throw new Pf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const a=this.inputLayers[e],r=t[e];n[a.name+"_0_0"]=r}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Qf);if(a.length>1)for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const a=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${s}_${i}`];a.push(o)}const r=Sg(t.computeOutputShape(Hf(a))),s=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${s}_${e}`]=r[e]}}const r=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],a=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${a}`;s.push(r)}for(let e=0;e<s.length;e++){const t=s[e];Uf(t in n),r.push(n[t])}return Hf(r)}runInternalGraph(e,t){null==t&&(t=Vf(null,e.length));const n={};for(let a=0;a<this.inputs.length;++a){const r=this.inputs[a],s=e[a],i=t[a];n[r.id]=[s,i]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Qf);for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,r=e.outputTensors,s=new Array;for(const e of a)e.id in n&&s.push(n[e.id]);if(s.length===a.length){let a,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=jf(t.call(e,l)),u=jf(t.computeMask(e,n)),a=[e],i=[n]}else a=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=jf(t.call(a,l)),u=jf(t.computeMask(a,i));if(t.activityRegularizer)throw new Bf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=o[e],s=u[e];n[t.id]=[a,s]}}}}const r=[],s=[],i=[];for(const e of this.outputs){Uf(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,a]=n[e.id];i.push(t.shape),r.push(t),s.push(a)}return[r,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Ry?1:0;for(let a=0;a<e.inboundNodes.length;a++){const r=Ry.nodeKey(e,a);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Pf(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Pf("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Pf(`No such layer: ${e}`)}calculateLosses(){return vi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Ry.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const a=e.getClassName(),r=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const a=e.inboundNodes[n],r=Ry.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(a.callArgs)try{JSON.stringify(a.callArgs),i=a.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${a.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(a.inboundLayers.length>0){const e=[];for(let n=0;n<a.inboundLayers.length;n++){const r=a.inboundLayers[n],s=a.nodeIndices[n],o=a.tensorIndices[n];let u=t[Ry.nodeKey(r,s)];null==u&&(u=0),e.push([r.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=a,i.config=r,i.inboundNodes=s,n.push(i)}e.layers=n;const a=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],s=Ry.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];a.push([n.name,i,o])}e.inputLayers=a;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],a=this.outputLayersNodeIndices[e],s=Ry.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},a=!1){const r={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let a;for(const s of t){const o=s[0],u=s[1],l=s[2];if(a=null==s[3]?{}:s[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=u)return void i(e,t);const p=c.inboundNodes[u];n.push(p.outputTensors[l])}n.length>0&&e.apply(Hf(n),a)}function u(e){const n=e.name,s=Zg(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(a),r[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Pf(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!tm(s);)for(const e of c){const t=r[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const p=[],d=[],h=t.inputLayers;for(const e of h){const t=e[0],n=e[1],a=e[2];Uf(t in r);const s=r[t].inboundNodes[n].outputTensors;p.push(s[a])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],a=e[2];Uf(t in r);const s=r[t].inboundNodes[n].outputTensors;d.push(s[a])}return new e({inputs:p,outputs:d,name:l})}get stateful(){if(this._stateful)throw new Pf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){vi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Fy(e,t){return function(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Dy(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=vi((()=>{if(1===e.shape.length)return Ls(e);if(2===e.shape.length){if(e.shape[1]>1)return Ri(e,1);if(1===e.shape[1])return ji(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),a=Array.from(await t.data());ki(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),_u(r,"float32")}return null}function Oy(e,t){return Do(e,t)}function My(e,t){let n,a;const r=t;n=r.xs,a=r.ys,H(null!=n&&null!=a,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Ly("input",e.inputNames,n),i=Ly("output",e.outputNames,a),o=s[0].shape[0];H(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),H(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)H(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)H(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Ly(e,t,n){if(n instanceof vr)return[n];if(Array.isArray(n))return H(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const a=[];for(const r of t){if(null==n[r])throw new Pf(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}function zy(e){return"function"==typeof e.iterator}function Py(e){H(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function By(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>zm(e,t,n-t))):zm(e,t,n-t)}function Wy(e,t){return vi((()=>null==e?null:Array.isArray(e)?e.map((e=>Wy(e,t))):jm(e,"int32"===t.dtype?t:Ms(t,"int32"))))}function Vy(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function Uy(e){const t=[];e instanceof vr&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(Lm(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Gy(e,t){if(null==e)return;const n=[];if(t instanceof vr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const a=t[e];n.push(a.id)}const a=[];if(e instanceof vr)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&a.push(r)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function Hy(e){return Array.isArray(e)}function jy(e){return!function(e){return e instanceof vr}(e)&&!Hy(e)}function qy(e,t,n,a=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Hy(e)&&e.length>0)t=!0;else if(jy(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Pf(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(jy(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Pf(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Hy(e)){if((e=e).length!==t.length)throw new Pf(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new Pf(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Uy(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Pf(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new Pf(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Ky(e,t,n,a=!0,r=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Pf(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Pf(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Pf(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!a)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Pf(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Xy extends Ry{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Pf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,a=console.log){const r=function(e){let t=!0;const n=[],a=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}a.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==a.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}a("_".repeat(t)),xy(s,n,a),a("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?wy(o[e],n,a):vy(o[e],n,i,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?$g(e.collectedTrainableWeights):$g(e.trainableWeights),t}(e),l=$g(e.nonTrainableWeights);a(`Total params: ${u+l}`),a(`Trainable params: ${u}`),a(`Non-trainable params: ${l}`),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>lc.adagrad(.01),Adadelta:()=>lc.adadelta(1,.95,Mf()),Adam:()=>lc.adam(.001,.9,.999,Mf()),Adamax:()=>lc.adamax(.002,.9,.999,Mf(),0),RMSProp:()=>lc.rmsprop(.001,.9,0,Mf()),SGD:()=>lc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Pf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ci))throw new Pf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Pf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>oy(e)))}else{const n=oy(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Pf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(oy(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Cm("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Cm("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,a,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===ry?-1!==["accuracy","acc"].indexOf(i)?a=uy:-1!==["crossentropy","ce"].indexOf(i)&&(a=cy):this.lossFunctions[e]===ay?-1!==["accuracy","acc"].indexOf(i)?a=py:-1!==["crossentropy","ce"].indexOf(i)&&(a=hy):-1!==["accuracy","acc"].indexOf(i)?a=ly:-1!==["crossentropy","ce"].indexOf(i)&&(a=dy),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),s=a,n=""+r}else{const e=my(i);s=e,n=""+gy(i)}let t;Cm(n,(()=>{t=s})),r(e,n,t)}})(a[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const a=null==n.batchSize?32:n.batchSize;Py(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const s=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return Hf(this.testLoop(i,s,a,n.verbose,n.steps))}finally{Gy(r[0],e),Gy(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new Bf("Verbose mode is not implemented yet.");H(!a||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!a||u<n.batches;){const t=await i.next();if(s=vi((()=>{if(t.value){const{xs:n,ys:a}=My(e,t.value),i=n.concat(a),l=vi((()=>r(i)));if(ki(i),0===u)for(let e=0;e<l.length;++e)s.push(Ti(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=vi((()=>Ei(s[e],Do(c,t)))),u>0&&ki(n)}ki(l),o+=c,++u}return s})),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=mo(s[e],o),ki(t)}return Hf(s)}(this,e,t)}checkNumSamples(e,t,n,a="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Pf(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Pf(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Pf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new Sy;if(e instanceof vr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Pf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Pf(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=$y(r,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Vf(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const i=s.indexOf(e[a]);if(-1!==i&&(t[a]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new Pf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return vi((()=>{const a=this.checkNumSamples(e);if(n)throw new Bf("Verbose predictLoop() is not implemented yet.");const r=Vy(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)vi((()=>{const n=r[t][0],a=r[t][1],s=By(e,n,a),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Sy(i);return $y(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Hf(s.map((e=>eo(e,0))))}))}predict(e,t={}){const n=Uy(e);Ky(n,this.inputNames,this.feedInputShapes,!1);try{const a=null==t.batchSize?32:t.batchSize;return Py(a),this.predictLoop(n,a)}finally{Gy(n,e)}}predictOnBatch(e){Ky(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new zf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===ay?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const a=em(e.map((e=>e.shape[0])));a.sort();const r=em(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new Pf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Pf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(a.length>0&&r.length>0&&!Y(a,r))throw new Pf(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=qy(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=qy(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const a=[Qg,ry,ny];for(let r=0;r<e.length;++r){const s=e[r],i=t[r],o=n[r];if(null!=i){if(i===ny&&1===s.shape[s.shape.length-1])throw new Pf(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Pf(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new Pf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,r=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=a){const e=Fy(a,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Dy(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,a=0,r){return vi((()=>{const s=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new Bf("Verbose mode is not implemented yet.");if(null!=r)throw new Bf("steps mode in testLoop() is not implemented yet");{const a=Vy(s,n),r=_u(Om(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],o=a[n][1],u=zm(r,s,o-s),l=Wy(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Ti(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ei(i[e],Do(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=mo(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;Gf(e,a)>1&&(r+=`_${Gf(e.slice(0,n),a)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Sy(e),o=$y(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(a[e],o[e]);null!=r[e]&&(n=Oy(n,r[e]));const s=Uo(n);t.push(s),u=0===e?n:Ei(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Uo(t(a[r],o[r]))}Ii(n),s.push(n)}return u=Uo(u),this.calculateLosses().forEach((e=>{u=Ei(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>vi((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const i=new Sy(s),o=$y(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=Uo(a(r[e],o[e]));n=0===e?s:Ei(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=Uo(n(r[a],o[a]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,a={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,i,o,u,l,c;e.isTraining=!0;try{const p=null==a.batchSize?32:a.batchSize;Py(p);const d=!1,h=await e.standardizeUserData(t,n,a.sampleWeight,a.classWeight,d,p);r=h[0],s=h[1],c=h[2];let f,m=!1;if(null!=a.validationData&&a.validationData.length>0){if(m=!0,2!==a.validationData.length)throw 3===a.validationData.length?new Bf("validationData including sample weights is not supported yet."):new Pf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);i=a.validationData[0],o=a.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,p);u=n[0],l=n[1],f=u.concat(l)}else if(null!=a.validationSplit&&a.validationSplit>0&&a.validationSplit<1){m=!0;const e=Math.floor(r[0].shape[0]*(1-a.validationSplit)),t=r[0].shape[0];u=By(r,e,t),r=By(r,0,e),l=By(s,e,t),s=By(s,0,e),f=u.concat(l)}else null!=a.validationSteps&&(m=!0);const g=r.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;m?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,f=[],w=b.slice());const v=Kg(a.callbacks,a.yieldEvery),k=await async function(e,t,n,a,r,s,i,o,u,l,c,p,d,h,f){null==r&&(r=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,r,h,"steps_per_epoch");let y;null!=g&&(y=Om(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Yg(o,i,s,d,g,h,r,m,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);const s={};{if("batch"===c)throw new Bf("batch shuffling is not implemneted yet");c&&W(y);const i=_u(y),o=Vy(g,r);for(let c=0;c<o.length;++c){const p={};if(await b.onBatchBegin(c,p),vi((()=>{const d=o[c][0],h=o[c][1],f=zm(i,d,h-d);p.batch=c,p.size=h-d;const g=Wy(n,f),y=t(g);for(let e=0;e<a.length;++e){const t=a[e],n=y[e];p[t]=n,Ii(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,r);for(let e=0;e<a.length;++e){const n=a[e],r=t[e];Ii(r),s["val_"+n]=r}}})),await b.onBatchEnd(c,p),Wg(p),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,p,a.epochs,a.verbose,v,x,f,a.shuffle,w,a.initialEpoch,null);return k}finally{e.isTraining=!1,Gy(r,t),Gy(s,n),Gy(u,i),Gy(l,o),null!=c&&ki(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const a=null!=n.batchesPerEpoch;if(H(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),H(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),H(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),H(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),H(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,i;if(r)if(zy(n.validationData))H(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Bf("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=r?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Kg(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:h}=Yg(c,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,l);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,p=0;for(a||(m=await t.iterator());!a||c<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=My(e,t.value),s={};s.batch=p,s.size=a[0].shape[0],await d.onBatchBegin(p,s);const i=[];if(null!=n.classWeight){const t=Fy(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Dy(r[e],null,t[e]))}const l=a.concat(r).concat(i),h=o(l);ki(l);for(let e=0;e<u.length;++e){const t=u[e],n=h[e];s[t]=n,Ii(n)}await d.onBatchEnd(p,s),Wg(s),p++,c++}if(a?c>=n.batchesPerEpoch:t.done){if(r){let t;t=zy(n.validationData)?jf(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):jf(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return ki(s),Hf(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<a.length;++e)n&&!a[e].trainable||t.push({name:a[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=wi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-wi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=qf(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>qf(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!=typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=qf(n[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[qf(gy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>qf(gy(e))));{const e={};for(const t in this.metrics)e[t]=qf(gy(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Zg(Iy(e.optimizer_config));let n,a;if("string"==typeof e.loss)n=Kf(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Kf(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Kf(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Kf(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Kf(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"==typeof e){const t=cs(e);if(0===t.length)throw new Pf(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Pf(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Pf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ts(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.11.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await ts(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=ss([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;yy(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){yy(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Xy.className="Model",bi(Xy);class Yy extends Xy{}Yy.className="Functional",bi(Yy);class Zy extends Xy{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ig("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Pf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Zy||e instanceof Xy;let n;if(t){if(n=e,1!==n.outputs.length)throw new Pf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Pf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Pf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Pf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Pg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Pf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Pf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=zg(this.outputs[0])}this.inboundNodes=[],new Og({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Vf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Cg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Xy({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new zf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new zf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new zf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new zf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let r,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Pf("Legacy serialization format not supported yet.");r=t}else H(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Zy))throw new Bf(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=Zg(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Pf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Pf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Zy.className="Sequential",bi(Zy);class Jy extends gi{getConfig(){return{}}}class Qy extends Jy{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Bf(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return go(e)}(e,t)}}Qy.className="elu",bi(Qy);class eb extends Jy{apply(e){return gu(e)}}eb.className="selu",bi(eb);class tb extends Jy{apply(e){return fu(e)}}tb.className="relu",bi(tb);class nb extends Jy{apply(e){return vi((()=>Go(6,fu(e))))}}nb.className="relu6",bi(nb);class ab extends Jy{apply(e){return e}}ab.className="linear",bi(ab);class rb extends Jy{apply(e){return bu(e)}}rb.className="sigmoid",bi(rb);class sb extends Jy{apply(e){return function(e){return vi((()=>{const t=Ei(.5,Do(.2,e));return Qi(t,0,1)}))}(e)}}sb.className="hardSigmoid",bi(sb);class ib extends Jy{apply(e){return Su(e)}}ib.className="softplus",bi(ib);class ob extends Jy{apply(e){return function(e){return vi((()=>mo(e,Ei($i(e),1))))}(e)}}ob.className="softsign",bi(ob);class ub extends Jy{apply(e){return Au(e)}}ub.className="tanh",bi(ub);class lb extends Jy{apply(e,t=-1){return Nu(e,t)}}lb.className="softmax",bi(lb);class cb extends Jy{apply(e,t=-1){return Lo(e,t)}}cb.className="logSoftmax",bi(cb);class pb extends Jy{apply(e,t=1){return vi((()=>Do(bu(Do(e,t)),e)))}}pb.className="swish",bi(pb);class db extends Jy{apply(e){return vi((()=>Do(e,Au(Su(e)))))}}function hb(e){return e.getClassName()}function fb(e,t={}){return Jf(e,yi.getMap().classNameMap,t,"activation")}function mb(e){if(null==e){return fb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},fb(t)}return e instanceof Jy?e:fb(e)}db.className="mish",bi(db);class gb extends gi{}class yb extends gb{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return vi((()=>{let t=ru([1]);return this.hasL1&&(t=Ei(t,Mo(Do(this.l1,$i(e))))),this.hasL2&&(t=Ei(t,Mo(Do(this.l2,qm(e))))),ji(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}yb.className="L1L2",bi(yb);const bb={l1l2:"L1L2"};function xb(e){return Yf(e)}function wb(e,t={}){return Jf(e,yi.getMap().classNameMap,t,"regularizer")}function vb(e){return null==e?null:"string"==typeof e?wb({className:e in bb?bb[e]:e,config:{}}):e instanceof gb?e:wb(e)}class kb extends Lg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Tg(e);let n=fu(e);return null!=this.maxValue&&(n=Qi(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}kb.className="ReLU",bi(kb);class Ib extends Lg{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Tg(e);return Ao(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ib.className="LeakyReLU",bi(Ib);class Nb extends Lg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=xg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vb(e.alphaRegularizer),this.alphaConstraint=gm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Pf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Cg(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Rg({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Tg(e),uu(e,this.alpha.read())}getConfig(){const e={alphaInitializer:bg(this.alphaInitializer),alphaRegularizer:xb(this.alphaRegularizer),alphaConstraint:fm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Nb.className="PReLU",bi(Nb);class Sb extends Lg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Bf(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Tg(e);return go(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Sb.className="ELU",bi(Sb);class Tb extends Lg{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Tg(e);return Do(n,Ms($o(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Tb.className="ThresholdedReLU",bi(Tb);class Cb extends Lg{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new lb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Tg(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function $b(e,t,n){if("number"==typeof e)return Vf(e,t);if(e.length!==t)throw new Pf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new Pf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var a}function Eb(e,t,n,a,r=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((s+a-1)/a)}function Ab(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Dm([n-t,0]);else{if("same"!==a)throw new Pf(`Unsupport padding mode: ${a}.`);e*=t}return e}function _b(e,t){return vi((()=>(Im(t),"channelsFirst"===t?zu(e,[0,2,3,1]):e)))}function Rb(e,t){return vi((()=>(Im(t),"channelsFirst"===t?zu(e,[0,2,3,4,1]):e)))}function Fb(e,t,n,a=[1,1],r="valid",s,i,o=null){return vi((()=>{if(null==s&&(s="channelsLast"),Im(s),3!==e.rank&&4!==e.rank)throw new Pf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Pf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=_b(e,s);if("causal"===r)throw new Bf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Qu({x:u,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=zu(u,[0,3,1,2])),u}))}Cb.className="Softmax",bi(Cb);class Db extends Lg{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Db.verifyArgs(t),this.rank=e,rm(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Bf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=$b(t.kernelSize,e,"kernelSize"),this.strides=$b(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Nm(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Im(this.dataFormat),this.activation=mb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=xg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gm(t.biasConstraint),this.biasRegularizer=vb(t.biasRegularizer),this.activityRegularizer=vb(t.activityRegularizer),this.dilationRate=$b(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Pf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Pf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Pf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Uf("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!am(e.kernelSize,"number",1,3))throw new Pf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:hb(this.activation),useBias:this.useBias,biasInitializer:bg(this.biasInitializer),biasRegularizer:xb(this.biasRegularizer),activityRegularizer:xb(this.activityRegularizer),biasConstraint:fm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ob extends Db{constructor(e,t){super(e,t),this.kernel=null,Ob.verifyArgs(t),this.filters=t.filters,rm(this.filters,"filters"),this.kernelInitializer=xg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gm(t.kernelConstraint),this.kernelRegularizer=vb(t.kernelRegularizer)}build(e){e=Cg(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Pf(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return vi((()=>{let t;e=Tg(e);const n=null==this.bias?null:this.bias.read(),a=im(this.activation.getClassName());if(null!=a&&2===this.rank)t=Fb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=function(e,t,n,a=1,r="valid",s,i=1){return vi((()=>{if(null==s&&(s="channelsLast"),Im(s),3!==e.shape.length)throw new Pf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Pf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Pf(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=zu(e,[0,2,1])),"causal"===r)throw new Bf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=io(e,t,a,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Xm(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Fb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Bf("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,a=[1,1,1],r="valid",s,i){return vi((()=>{if(null==s&&(s="channelsLast"),Im(s),4!==e.rank&&5!==e.rank)throw new Pf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Pf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Rb(e,s);if("causal"===r)throw new Bf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=lo(o,t,a,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Xm(o,n)),"channelsFirst"===s&&(o=zu(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Cg(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const a=Eb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(a)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:bg(this.kernelInitializer),kernelRegularizer:xb(this.kernelRegularizer),kernelConstraint:fm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Pf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Mb extends Ob{constructor(e){super(2,e),Mb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!am(e.kernelSize,"number",1,2))throw new Pf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Mb.className="Conv2D",bi(Mb);class Lb extends Ob{constructor(e){super(3,e),Lb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Pf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Lb.className="Conv3D",bi(Lb);class zb extends Mb{constructor(e){if(super(e),this.inputSpec=[new Rg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Pf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Cg(e)).length)throw new Pf("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Pf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Rg({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return vi((()=>{let t=Tg(e);if(4!==t.shape.length)throw new Pf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const i=n[r],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],p=this.strides[1],d=[a,Ab(i,c,u,this.padding),Ab(o,p,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=zu(t,[0,2,3,1]));let h=uo(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(h=zu(h,[0,3,1,2])),null!=this.bias&&(h=Xm(h,this.bias.read(),this.dataFormat)),null!=this.activation&&(h=this.activation.apply(h)),h}))}computeOutputShape(e){const t=(e=Cg(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[a]=Ab(t[a],o,s,this.padding),t[r]=Ab(t[r],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}zb.className="Conv2DTranspose",bi(zb);class Pb extends Lb{constructor(e){if(super(e),this.inputSpec=[new Rg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Pf(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Cg(e)).length)throw new Pf("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Pf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Rg({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return vi((()=>{let t=Tg(e);if(5!==t.shape.length)throw new Pf(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let r,s,i;"channelsFirst"===this.dataFormat?(i=2,r=3,s=4):(i=1,r=2,s=3);const o=n[i],u=n[r],l=n[s],c=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],h=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Ab(o,h,c,this.padding),Ab(u,f,p,this.padding),Ab(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=zu(t,[0,2,3,4,1]));let y=po(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=zu(y,[0,4,1,2,3])),null!==this.bias&&(y=Xm(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Cg(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[a]=Ab(t[a],l,i,this.padding),t[r]=Ab(t[r],c,o,this.padding),t[s]=Ab(t[s],p,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Pb.className="Conv3DTranspose",bi(Pb);class Bb extends Ob{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Pf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Pf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Pf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=xg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vb(t.depthwiseRegularizer),this.depthwiseConstraint=gm(t.depthwiseConstraint),this.pointwiseInitializer=xg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vb(t.pointwiseRegularizer),this.pointwiseConstraint=gm(t.pointwiseConstraint)}build(e){if((e=Cg(e)).length<this.rank+2)throw new Pf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Pf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Rg({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return vi((()=>{let t;if(e=Tg(e),1===this.rank)throw new Bf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=zu(e,[0,2,3,1])),t=yu(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Xm(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=zu(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=bg(this.depthwiseInitializer),e.pointwiseInitializer=bg(this.pointwiseInitializer),e.depthwiseRegularizer=xb(this.depthwiseRegularizer),e.pointwiseRegularizer=xb(this.pointwiseRegularizer),e.depthwiseConstraint=fm(this.depthwiseConstraint),e.pointwiseConstraint=fm(this.pointwiseConstraint),e}}Bb.className="SeparableConv";class Wb extends Bb{constructor(e){super(2,e)}}Wb.className="SeparableConv2D",bi(Wb);class Vb extends Ob{constructor(e){super(1,e),Vb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!am(e.kernelSize,"number",1,1))throw new Pf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Vb.className="Conv1D",bi(Vb);class Ub extends Lg{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return vi((()=>{if(e=Tg(e),"channelsLast"===this.dataFormat){const t=Bm(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Bm(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Bm(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Bm(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ub.className="Cropping2D",bi(Ub);class Gb extends Lg{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Im(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,nm(bm,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return vi((()=>{let t=Tg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=zu(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?Zl.resizeNearestNeighbor(t,[e,a]):Zl.resizeBilinear(t,[e,a]);return zu(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?Zl.resizeNearestNeighbor(t,[e,a]):Zl.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Gb.className="UpSampling2D",bi(Gb);class Hb extends Db{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=xg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gm(e.depthwiseConstraint),this.depthwiseRegularizer=vb(e.depthwiseRegularizer)}build(e){if((e=Cg(e)).length<4)throw new Pf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Pf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return vi((()=>{let t=function(e,t,n=[1,1],a="valid",r,s){return vi((()=>{null==r&&(r="channelsLast"),Im(r);let i=_b(e,r);if(4!==e.rank)throw new Pf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Pf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ho(i,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(i=zu(i,[0,3,1,2])),i}))}(e=Tg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Xm(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Cg(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Eb(t,this.kernelSize[0],this.padding,this.strides[0]),s=Eb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=bg(this.depthwiseInitializer),e.depthwiseRegularizer=xb(this.depthwiseRegularizer),e.depthwiseConstraint=fm(this.depthwiseRegularizer),e}}function jb(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Pf("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function qb(e,t,n,a=!1,r,s,i=!1,o=!1){return vi((()=>{const u=t.shape.length;if(u<3)throw new Pf(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Om(2,u));if(t=zu(t,l),null!=s)throw new Bf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=Ms(Ms(r,"bool"),"float32")).rank===u-1&&(r=ko(r,-1)),r=zu(r,l)),a&&(t=mu(t,0),null!=r&&(r=mu(r,0)));const c=[];let p,d=n;const h=t.shape[0],f=Du(t);let m,g;null!=r&&(m=Du(r));for(let t=0;t<h;++t){const n=f[t],a=vi((()=>e(n,d)));if(null==r)p=a[0],d=a[1];else{const e=vi((()=>{const e=m[t],n=Oo(iu(e),e);return{output:Ei(Do(a[0],e),Do(d[0],n)),newStates:d.map(((t,r)=>Ei(Do(a[1][r],e),Do(t,n))))}}));p=e.output,d=e.newStates}o&&c.push(p)}return o&&(g=Eu(c,1)),[p,g,d]}))}Hb.className="DepthwiseConv2D",bi(Hb);class Kb extends Lg{constructor(e){let t;if(super(e),null==e.cell)throw new Pf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new nx({cells:e.cell}):e.cell,null==t.stateSize)throw new Pf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Rg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Om(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ng(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return vi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Bf("Constants support is not implemented in RNN yet.");Ng(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Rg({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Y(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Pf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Rg({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){vi((()=>{if(!this.stateful)throw new Lf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Pf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>ru([n,e]))):this.states_=[ru([n,this.cell.stateSize])];else if(null==e)ki(this.states_),null!=this.keptStates&&(ki(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>ru([n,e]))):this.states_[0]=ru([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Pf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ki(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!Y(a.shape,s))throw new Pf(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map((e=>Ii(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=jb(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Rg({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length),s[0]instanceof Fg){const n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return vi((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Tg(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new Pf(`RNN Layer has ${s} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:a},o=qb(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,a);const p=this.returnSequences?l:u;return this.returnState?[p].concat(c):p}))}getInitialState(e){return vi((()=>{let t=ru(e.shape);return t=Mo(t,[1,2]),t=Lm(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Um(t,[1,e]):t)):this.cell.stateSize>1?[Um(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Kb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const a=Zg(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Kb.className="RNN",bi(Kb);class Xb extends Lg{}class Yb extends Xb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,rm(this.units,"units"),this.activation=mb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vb(e.kernelRegularizer),this.recurrentRegularizer=vb(e.recurrentRegularizer),this.biasRegularizer=vb(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Fm([1,Dm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Fm([1,Dm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Cg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return vi((()=>{if(2!==(e=e).length)throw new Pf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ax({ones:()=>iu(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ax({ones:()=>iu(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;r=Hm(null!=s?Do(e,s):e,this.kernel.read()),null!=this.bias&&(r=Xm(r,this.bias.read())),null!=i&&(n=Do(n,i));let o=Ei(r,Hm(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hb(this.activation),useBias:this.useBias,kernelInitializer:bg(this.kernelInitializer),recurrentInitializer:bg(this.recurrentInitializer),biasInitializer:bg(this.biasInitializer),kernelRegularizer:xb(this.kernelRegularizer),recurrentRegularizer:xb(this.recurrentRegularizer),biasRegularizer:xb(this.biasRegularizer),activityRegularizer:xb(this.activityRegularizer),kernelConstraint:fm(this.kernelConstraint),recurrentConstraint:fm(this.recurrentConstraint),biasConstraint:fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Yb.className="SimpleRNNCell",bi(Yb);class Zb extends Kb{constructor(e){e.cell=new Yb(e),super(e)}call(e,t){return vi((()=>{null!=this.cell.dropoutMask&&(ki(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ki(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Zb.className="SimpleRNN",bi(Zb);class Jb extends Xb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Pf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,rm(this.units,"units"),this.activation=mb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=mb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vb(e.kernelRegularizer),this.recurrentRegularizer=vb(e.recurrentRegularizer),this.biasRegularizer=vb(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Fm([1,Dm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Fm([1,Dm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Cg(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return vi((()=>{if(2!==(e=e).length)throw new Pf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ax({ones:()=>iu(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ax({ones:()=>iu(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=Do(e,r[0]));let l=Hm(e,this.kernel.read());this.useBias&&(l=Xm(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Do(a,s[0]));const c=this.recurrentKernel.read(),[p,d]=Tu(c,[2*this.units,this.units],c.rank-1),h=Hm(a,p),[f,m,g]=Tu(l,3,l.rank-1),[y,b]=Tu(h,2,h.rank-1);i=this.recurrentActivation.apply(Ei(f,y)),o=this.recurrentActivation.apply(Ei(m,b));const x=Hm(Do(o,a),d);u=this.activation.apply(Ei(g,x));const w=Ei(Do(i,a),Do(Ei(1,tu(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hb(this.activation),recurrentActivation:hb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:bg(this.kernelInitializer),recurrentInitializer:bg(this.recurrentInitializer),biasInitializer:bg(this.biasInitializer),kernelRegularizer:xb(this.kernelRegularizer),recurrentRegularizer:xb(this.recurrentRegularizer),biasRegularizer:xb(this.biasRegularizer),activityRegularizer:xb(this.activityRegularizer),kernelConstraint:fm(this.kernelConstraint),recurrentConstraint:fm(this.recurrentConstraint),biasConstraint:fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Jb.className="GRUCell",bi(Jb);class Qb extends Kb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Jb(e),super(e)}call(e,t){return vi((()=>{null!=this.cell.dropoutMask&&(ki(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ki(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Qb.className="GRU",bi(Qb);class ex extends Xb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,rm(this.units,"units"),this.activation=mb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=mb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vb(e.kernelRegularizer),this.recurrentRegularizer=vb(e.recurrentRegularizer),this.biasRegularizer=vb(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Fm([1,Dm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Fm([1,Dm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Cg(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends eg{apply(t,a){const r=e.apply([n]),s=(new ng).apply([n]),i=e.apply([2*n]);return Vm(Vm(r,s),i)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return vi((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Pf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ax({ones:()=>iu(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ax({ones:()=>iu(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Do(e,s[0]));let p=Hm(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Do(a,i[0])),p=Ei(p,Hm(a,this.recurrentKernel.read())),this.useBias&&(p=Xm(p,this.bias.read()));const[d,h,f,m]=Tu(p,4,p.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(h),l=Ei(Do(u,r),Do(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Do(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hb(this.activation),recurrentActivation:hb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:bg(this.kernelInitializer),recurrentInitializer:bg(this.recurrentInitializer),biasInitializer:bg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:xb(this.kernelRegularizer),recurrentRegularizer:xb(this.recurrentRegularizer),biasRegularizer:xb(this.biasRegularizer),activityRegularizer:xb(this.activityRegularizer),kernelConstraint:fm(this.kernelConstraint),recurrentConstraint:fm(this.recurrentConstraint),biasConstraint:fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}ex.className="LSTMCell",bi(ex);class tx extends Kb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ex(e),super(e)}call(e,t){return vi((()=>{null!=this.cell.dropoutMask&&(ki(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ki(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}tx.className="LSTM",bi(tx);class nx extends Xb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return vi((()=>{let n=(e=e).slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=a[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Ng(e)&&(e=e[0]),e=e,this.cells.forEach(((n,a)=>{Cm(`RNNCell_${a}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const a=[];for(const e of t.cells)a.push(Zg(e,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ag(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}_g(t)}}function ax(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):Ym(t(),n),o=()=>Zm(i,t,a);return!r||r<=1?Ii(o().clone()):Array(r).fill(void 0).map(o).map((e=>Ii(e.clone())))}nx.className="StackedRNNCells",bi(nx);class rx extends Kb{constructor(e){if(e.unroll)throw new Bf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Bf("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Rg({ndim:5})]}call(e,t){return vi((()=>{if(null!=this.cell.dropoutMask&&(ki(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ki(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Pf("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return vi((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=ru([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){vi((()=>{if(!this.stateful)throw new Lf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Pf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ru(r))):this.states_=[ru(r)];else if(null==e)ki(this.states_),null!=this.keptStates&&(ki(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ru(r))):this.states_[0]=ru(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Pf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ki(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!Y(n.shape,a))throw new Pf(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Ii(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Eb(u,a[0],r,s[0],i[0]),p=Eb(l,a[1],r,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,p]:[c,p,n]]}}rx.className="ConvRNN2D";class sx extends ex{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,rm(this.filters,"filters"),this.kernelSize=$b(n,2,"kernelSize"),this.kernelSize.forEach((e=>rm(e,"kernelSize"))),this.strides=$b(a||1,2,"strides"),this.strides.forEach((e=>rm(e,"strides"))),this.padding=r||"valid",Nm(this.padding),this.dataFormat=s||"channelsLast",Im(this.dataFormat),this.dilationRate=$b(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>rm(e,"dilationRate")))}build(e){var t;e=Cg(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Pf(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends eg{apply(e,t){return Wm([n.apply([a]),su([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return vi((()=>{if(3!==e.length)throw new Pf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ax({ones:()=>iu(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Do(t[n],e):e;let u=o(a,i,0),l=o(a,i,1),c=o(a,i,2),p=o(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ax({ones:()=>iu(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let h=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[y,b,x,w]=Tu(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?Tu(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),p=this.inputConv(p,w,N,this.padding);const[S,T,C,$]=Tu(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,S),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(Ei(u,h)),A=this.recurrentActivation.apply(Ei(l,f)),_=Ei(Do(A,s),Do(E,this.activation.apply(Ei(c,m)))),R=Do(this.recurrentActivation.apply(Ei(p,g)),this.activation.apply(_));return[R,R,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n}(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,a)}inputConv(e,t,n,a){const r=so(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Xm(r,n,this.dataFormat):r}recurrentConv(e,t){return so(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}sx.className="ConvLSTM2DCell",bi(sx);class ix extends rx{constructor(e){const t=new sx(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ix.className="ConvLSTM2D",bi(ix);class ox extends Lg{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return vi((()=>{this.invokeCallHook(e,t);const n=Tg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Zm((()=>Ym(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ox.className="Dropout",bi(ox);class ux extends ox{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}ux.className="SpatialDropout1D",bi(ux);class lx extends Lg{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,rm(this.units,"units"),this.activation=mb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=xg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gm(e.kernelConstraint),this.biasConstraint=gm(e.biasConstraint),this.kernelRegularizer=vb(e.kernelRegularizer),this.biasRegularizer=vb(e.biasRegularizer),this.activityRegularizer=vb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Cg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Cg(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return vi((()=>{this.invokeCallHook(e,t);const n=Tg(e),a=im(this.activation.getClassName());let r;return null!=a?r=Hm(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Hm(n,this.kernel.read()),null!=this.bias&&(r=Xm(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:hb(this.activation),useBias:this.useBias,kernelInitializer:bg(this.kernelInitializer),biasInitializer:bg(this.biasInitializer),kernelRegularizer:xb(this.kernelRegularizer),biasRegularizer:xb(this.biasRegularizer),activityRegularizer:xb(this.activityRegularizer),kernelConstraint:fm(this.kernelConstraint),biasConstraint:fm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}lx.className="Dense",bi(lx);class cx extends Lg{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Cg(e);for(const t of e.slice(1))if(null==t)throw new Pf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Rm(e,1)]}call(e,t){return vi((()=>{this.invokeCallHook(e,t);let n=Tg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=zu(n,e)}return function(e){if(e.rank<=1)throw new Pf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Rm(e.shape,1)];return ji(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}cx.className="Flatten",bi(cx);class px extends Lg{constructor(e){super(e),this.supportsMasking=!0,this.activation=mb(e.activation)}call(e,t){return vi((()=>{this.invokeCallHook(e,t);const n=Tg(e);return this.activation.apply(n)}))}getConfig(){const e={activation:hb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}px.className="Activation",bi(px);class dx extends Lg{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return vi((()=>{return e=Tg(e),t=e,n=this.n,vi((()=>{if(2!==t.shape.length)throw new Pf(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Um(Lm(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}dx.className="RepeatVector",bi(dx);class hx extends Lg{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let e=0;e<a.length;++e){const t=a[e];if(this.isUnknown(t)){if(null!==s)throw new Pf("Can only specifiy one unknown dimension.");s=e}else r*=t}const i=Rm(e);if(null!==s){if(0===r||i%r!=0)throw new Pf(n);a[s]=i/r}else if(i!==r)throw new Pf(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return vi((()=>{this.invokeCallHook(e,t);const n=Tg(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return ji(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}hx.className="Reshape",bi(hx);class fx extends Lg{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Om(1,e.dims.length+1);if(!Y(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Rg({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Cg(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return zu(Tg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}fx.className="Permute",bi(fx);class mx extends Lg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Tg(e);return _i(nu(n,this.maskValue),-1)}call(e,t){return vi((()=>{this.invokeCallHook(e,t);const n=Tg(e),a=_i(nu(n,this.maskValue),-1,!0);return Do(n,Ms(a,n.dtype))}))}}mx.className="Masking",bi(mx);class gx extends Lg{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(jf(e.inputLength))}this.inputDim=e.inputDim,rm(this.inputDim,"inputDim"),this.outputDim=e.outputDim,rm(this.outputDim,"outputDim"),this.embeddingsInitializer=xg(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vb(e.embeddingsRegularizer),this.activityRegularizer=vb(e.activityRegularizer),this.embeddingsConstraint=gm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return vi((()=>this.maskZero?(e=Tg(e),nu(e,Lu(e))):null))}computeOutputShape(e){if(e=Cg(e),null==this.inputLength)return[...e,this.outputDim];const t=jf(this.inputLength);if(t.length!==e.length-1)throw new Pf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new Pf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return vi((()=>{this.invokeCallHook(e,t);let n=Tg(e);"int32"!==n.dtype&&(n=Mm(n,"int32"));const a=jm(this.embeddings.read(),ji(n,[n.size]));return ji(a,Cg(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:bg(this.embeddingsInitializer),embeddingsRegularizer:xb(this.embeddingsRegularizer),activityRegularizer:xb(this.activityRegularizer),embeddingsConstraint:fm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}gx.className="Embedding",bi(gx);class yx extends Lg{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Bf}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new Pf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Cg(e)]),(e=e).length<2)throw new Pf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=em(t),t.length>1)throw new Pf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const a=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===em(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return vi((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=Dm(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=Lm(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let i=ji(a,[r].concat(Rm(e.slice(1))));i=zu(i,[1,0]),i=ji(i,s),t.push(i),n=!0}else if(e>1){const r=Om(1,e).concat([0]);t.push(zu(a,r)),n=!0}else t.push(a)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=ji(zu(ji(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Om(0,r-1));a=zu(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const a=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=em(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return vi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Pf("`mask` should be an Array");if(!Array.isArray(e))throw new Pf("`inputs` should be an Array");if(t.length!==e.length)throw new Pf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:ko(e,0))))[0];for(let e=1;e<t.length-1;++e)n=zo(n,t[e]);return n}))}}class bx extends yx{constructor(e){super(e)}mergeFunction(e){return vi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ei(t,e[n]);return t}))}}bx.className="Add",bi(bx);class xx extends yx{constructor(e){super(e)}mergeFunction(e){return vi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Do(t,e[n]);return t}))}}xx.className="Multiply",bi(xx);class wx extends yx{constructor(e){super(e)}mergeFunction(e){return vi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ei(t,e[n]);return Do(1/e.length,t)}))}}wx.className="Average",bi(wx);class vx extends yx{constructor(e){super(e)}mergeFunction(e){return vi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Vo(t,e[n]);return t}))}}vx.className="Maximum",bi(vx);class kx extends yx{constructor(e){super(e)}mergeFunction(e){return vi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Go(t,e[n]);return t}))}}kx.className="Minimum",bi(kx);class Ix extends yx{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Pf("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const a=e[t].slice();a.splice(this.axis,1);let r=!1;for(const e of n)if(Y(e,a)){r=!0;break}r||n.push(a)}if(n.length>1)throw new Pf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return vi((()=>Wm(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Pf("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[a]||null==e[a]){n[a]=null;break}n[a]+=e[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Pf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Pf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Pf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return vi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let n=0;n<e.length;++n)null==t[n]?a.push(Ms(iu(e[n]),"bool")):t[n].rank<e[n].rank?a.push(ko(t[n],-1)):a.push(t[n]);const r=eo(a,this.axis);return Ai(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Nx(e,t){for(;e<0;)e+=t;return e}Ix.className="Concatenate",bi(Ix);class Sx extends yx{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){H(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Bf("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Pf(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Pf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Nx(t,e[n].shape.length))):[Nx(this.axes,n.shape.length),Nx(this.axes,a.shape.length)],this.normalize&&(n=Jg(n,t[0]),a=Jg(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Bf("batchDot is not implemented for tensors of 4D or higher rank yet");if(H(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),H(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Bf("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return vi((()=>{let n,i;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=ji(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=ji(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?Mo(Do(e,t),s[0]):Mo(Do(zu(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;i=Po(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);i=$u(i,t)}return 1===i.shape.length&&(i=ko(i,1)),i}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Nx(this.axes,e.length),Nx(this.axes,t.length)],n}computeOutputShape(e){H(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Bf("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Sx.className="Dot",bi(Sx);class Tx extends Lg{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return vi((()=>{this.invokeCallHook(e,t);const n=Tg(e);return Zm((()=>Ei(Gm(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Tx.className="GaussianNoise",bi(Tx);class Cx extends Lg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return vi((()=>{this.invokeCallHook(e,t);const n=Tg(e);return this.rate>0&&this.rate<1?Zm((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Do(n,Gm(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Cx.className="GaussianDropout",bi(Cx);class $x extends Lg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Tg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return vi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Zm((()=>{const t=Tg(e),a=-1.7580993408473766;let r=Eo(hu(n),this.rate);r=Mm(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-s*a*this.rate,o=Ei(Do(t,r),Do(Ei(r,-1),a));return Ei(Do(o,s),i)}),(()=>Tg(e)),t.training||!1)}return e}))}}function Ex(e,t,n,a,r,s=.001){let i;if(2===e.rank)i=Yi(e,t,n,a,r,s);else if(3===e.rank)i=Zi(e,t,n,a,r,s);else{if(4!==e.rank)throw new Bf(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ji(e,t,n,a,r,s)}return i}$x.className="AlphaDropout",bi($x);class Ax extends Lg{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=xg(e.betaInitializer||"zeros"),this.gammaInitializer=xg(e.gammaInitializer||"ones"),this.movingMeanInitializer=xg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xg(e.movingVarianceInitializer||"ones"),this.betaConstraint=gm(e.betaConstraint),this.gammaConstraint=gm(e.gammaConstraint),this.betaRegularizer=vb(e.betaRegularizer),this.gammaRegularizer=vb(e.gammaRegularizer)}build(e){e=Cg(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Pf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Rg({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return vi((()=>{const n=null!=t.training&&t.training,a=Tg(e),r=a.shape,s=r.length,i=Om(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=Vf(1,s);u[o]=r[o];const l=i.slice();l.sort();const c=!Y(l,Om(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=ji(this.movingMean.read(),u),t=ji(this.movingVariance.read(),u),n=this.center?ji(this.beta.read(),u):null,r=this.scale?ji(this.gamma.read(),u):null;return Ex(a,e,t,n,r,this.epsilon)}return Ex(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,d,h]=function(e,t,n,a,r=.001){return Y(a.slice().sort(),Om(0,e.rank-1))?function(e,t,n,a,r=.001){return vi((()=>{const s=eu(e,a),i=s.mean,o=s.variance;return[Ex(e,i,o,n,t,r),i,o]}))}(e,t,n,a,r):function(e,t,n,a,r=.001){return vi((()=>{const s=eu(e,a),i=s.mean,o=s.variance,u=[];for(const t of Om(0,e.rank))-1!==a.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=ji(i,u),c=ji(o,u),p=null==t?null:ji(t,u),d=null==n?null:ji(n,u);return[Ex(e,l,c,d,p,r),i,o]}))}(e,t,n,a,r)}(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{vi((()=>{const a=1-n,r=e.read(),s=Do(Oo(r,t),a);e.write(Oo(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,h,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:bg(this.betaInitializer),gammaInitializer:bg(this.gammaInitializer),movingMeanInitializer:bg(this.movingMeanInitializer),movingVarianceInitializer:bg(this.movingVarianceInitializer),betaRegularizer:xb(this.betaRegularizer),gammaRegularizer:xb(this.gammaRegularizer),betaConstraint:fm(this.betaConstraint),gammaConstraint:fm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ax.className="BatchNormalization",bi(Ax);class _x extends Lg{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=xg(e.betaInitializer||"zeros"),this.gammaInitializer=xg(e.gammaInitializer||"ones"),this.betaRegularizer=vb(e.betaRegularizer),this.gammaRegularizer=vb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Cg(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==em(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Tg(e),a=n.shape,r=a.length;return vi((()=>{let{mean:e,variance:t}=eu(n,this.axis,!0);const s=Vf(1,r);for(const e of this.axis)s[e]=a[e];const i=e=>null!=e&&e.shape.length!==r?ji(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(l.push(a[e]),c.push(1)):(l.push(1),c.push(a[e]));return e=Io(e,l),t=Io(t,l),o=Io(o,c),u=Io(u,c),Ex(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:bg(this.betaInitializer),gammaInitializer:bg(this.gammaInitializer),betaRegularizer:xb(this.betaRegularizer),gammaRegularizer:xb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}_x.className="LayerNormalization",bi(_x);class Rx extends Lg{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Pf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Pf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Pf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Rg({ndim:4})]}computeOutputShape(e){let t,n;return e=Cg(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return vi((()=>{return t=Tg(e),n=this.padding,a=this.dataFormat,vi((()=>{if(4!==t.rank)throw new Pf(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Pf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Pf(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ou(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Fx(e,t,n,a,r,s){return vi((()=>{let i;Im(r),Sm(s),Nm(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=_b(e,r);const o="same"===a?"same":"valid";return i="max"===s?Bo(e,t,n,o):qi(e,t,n,o),"channelsFirst"===r&&(i=zu(i,[0,3,1,2])),i}))}function Dx(e,t,n,a,r,s){return vi((()=>{let i;Im(r),Sm(s),Nm(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Rb(e,r);const o="same"===a?"same":"valid";return i="max"===s?Wo(e,t,n,o):Ki(e,t,n,o),"channelsFirst"===r&&(i=zu(i,[0,4,1,2,3])),i}))}Rx.className="ZeroPadding2D",bi(Rx);class Ox extends Lg{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Pf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(rm(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Pf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}rm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Nm(this.padding),this.inputSpec=[new Rg({ndim:3})]}computeOutputShape(e){const t=Eb((e=Cg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return vi((()=>{this.invokeCallHook(e,t),e=Lm(Tg(e),2);const n=this.poolingFunction(Tg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return $u(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Mx extends Ox{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Im(r),Nm(a),Fx(e,t,n,a,r,"max")}}Mx.className="MaxPooling1D",bi(Mx);class Lx extends Ox{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Im(r),Nm(a),Fx(e,t,n,a,r,"avg")}}Lx.className="AveragePooling1D",bi(Lx);class zx extends Lg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Pf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];rm(this.poolSize,"poolSize"),rm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Im(this.dataFormat),Nm(this.padding),this.inputSpec=[new Rg({ndim:4})]}computeOutputShape(e){e=Cg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Eb(t,this.poolSize[0],this.padding,this.strides[0]),n=Eb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return vi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Tg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Px extends zx{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Im(r),Nm(a),Fx(e,t,n,a,r,"max")}}Px.className="MaxPooling2D",bi(Px);class Bx extends zx{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Im(r),Nm(a),Fx(e,t,n,a,r,"avg")}}Bx.className="AveragePooling2D",bi(Bx);class Wx extends Lg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Pf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];rm(this.poolSize,"poolSize"),rm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Im(this.dataFormat),Nm(this.padding),this.inputSpec=[new Rg({ndim:5})]}computeOutputShape(e){e=Cg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Eb(t,this.poolSize[0],this.padding,this.strides[0]),n=Eb(n,this.poolSize[1],this.padding,this.strides[1]),a=Eb(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return vi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Tg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Vx extends Wx{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Im(r),Nm(a),Dx(e,t,n,a,r,"max")}}Vx.className="MaxPooling3D",bi(Vx);class Ux extends Wx{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Im(r),Nm(a),Dx(e,t,n,a,r,"avg")}}Ux.className="AveragePooling3D",bi(Ux);class Gx extends Lg{constructor(e){super(e),this.inputSpec=[new Rg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Bf}}class Hx extends Gx{constructor(e){super(e||{})}call(e,t){return vi((()=>{const t=Tg(e);return Uo(t,1)}))}}Hx.className="GlobalAveragePooling1D",bi(Hx);class jx extends Gx{constructor(e){super(e||{})}call(e,t){return vi((()=>{const t=Tg(e);return Fo(t,1)}))}}jx.className="GlobalMaxPooling1D",bi(jx);class qx extends Lg{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Im(this.dataFormat),this.inputSpec=[new Rg({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Bf}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Kx extends qx{call(e,t){return vi((()=>{const t=Tg(e);return"channelsLast"===this.dataFormat?Uo(t,[1,2]):Uo(t,[2,3])}))}}Kx.className="GlobalAveragePooling2D",bi(Kx);class Xx extends qx{call(e,t){return vi((()=>{const t=Tg(e);return"channelsLast"===this.dataFormat?Fo(t,[1,2]):Fo(t,[2,3])}))}}Xx.className="GlobalMaxPooling2D",bi(Xx);class Yx extends Lg{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const a=Zg(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class Zx extends Yx{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Cg(e)).length<3)throw new Pf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Cg(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return vi((()=>qb(((e,n)=>[Tg(this.layer.call(e,t)),[]]),e=Tg(e),[],!1,null,null,!1,!0)[1]))}}Zx.className="TimeDistributed",bi(Zx);class Jx extends Yx{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Zg(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=Zg(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,nm(vm,"BidirectionalMergeMode",r),e.weights)throw new Bf("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(a=r.slice(1),t=r[0]):t=r[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Hf(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=jb(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Pf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new Rg({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),i.push(...a)}if(null!=a)throw new Bf("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Fg;for(const e of s)if(e instanceof Fg!==o)throw new Pf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return vi((()=>{const n=t.initialState;let a,r,s,i;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=mu(r,1)),"concat"===this.mergeMode?i=Wm([a,r]):"sum"===this.mergeMode?i=Ei(a,r):"ave"===this.mergeMode?i=Do(.5,Ei(a,r)):"mul"===this.mergeMode?i=Do(a,r):null==this.mergeMode&&(i=[a,r]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Cm(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Cm(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Zg(t.layer);if(delete t.layer,null!=t.numConstants)throw new Bf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}Jx.className="Bidirectional",bi(Jx);var Qx,ew,tw=n(6377);function nw(e,t,n=new Map,a=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(iw(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const i=nw(e[s],t,n,a);r[s]=i}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function aw(e,t=sw){return rw(e,t)}function rw(e,t,n=new Set){const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(iw(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=rw(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error(`Can't recurse into non-iterable type: ${a}`)}return r.value}function sw(e){return null===e?null:iw(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function iw(e){let t=!1;if($e().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(4977);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof vr)&&!(e instanceof Promise)&&!t)}function ow(e){return nw(e,uw)}function uw(e){return e instanceof vr?{value:e.clone(),recurse:!1}:iw(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class lw{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class cw extends lw{constructor(){super(cw.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}cw.INITIAL_CAPACITY=32;class pw{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ww(this,e)}filter(e){return new bw(this,e)}map(e){return new xw(this,e)}mapAsync(e){return new vw(this,e)}serialMapAsync(e){return new vw(this,e).serial()}flatmap(e){return new Iw(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new yw(this,e,t)}columnMajorBatch(e,t=!0,n=sw){return this.rowMajorBatch(e,t).map((e=>aw(e,n)))}concatenate(e,t){return new Nw(new dw([this,e]),t)}take(e){return e<0||null==e?this:new gw(this,e)}skip(e){return e<0||null==e?this:new mw(this,e)}prefetch(e){return new Sw(this,e)}shuffle(e,t){return new Tw(this,e,t)}serial(){return new fw(this)}}class dw extends pw{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:ow(e),done:!1}}}class hw extends pw{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class fw extends pw{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class mw extends pw{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ki(e.value)}return this.upstream.next()}}class gw extends pw{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class yw extends pw{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class bw extends pw{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ki(e.value)}}}class xw extends pw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Dr(e.value),n=this.transform(e.value),a=Dr(n);for(const e of t)Fr(e,a)||e.dispose();return{value:n,done:!1}}}class ww extends pw{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class vw extends pw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Dr(e.value),n=await this.transform(e.value),a=Dr(n);for(const e of t)Fr(e,a)||e.dispose();return{value:n,done:!1}}}class kw extends pw{constructor(){super(),this.outputQueue=new cw,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Iw extends kw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Dr(e.value),n=this.transform(e.value),a=Dr(n);this.outputQueue.pushAll(n);for(const e of t)Fr(e,a)||e.dispose();return!0}}class Nw extends pw{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(ew=Qx||(Qx={}))[ew.FAIL=0]="FAIL",ew[ew.SHORTEST=1]="SHORTEST",ew[ew.LONGEST=2]="LONGEST";class Sw extends pw{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new lw(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Tw extends Sw{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=tw.alea(n||ir().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Cw{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return H(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),$w((async()=>(await n.iterator()).columnMajorBatch(e,t,Ew)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,$w((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,$w((async()=>(await t.iterator()).filter((t=>vi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return $w((async()=>(await t.iterator()).map((t=>vi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return $w((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return $w((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,$w((async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new hw(r)).take(e),new Nw(n,a);var n,a,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,$w((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,r=tw.alea(t||ir().toString());return $w((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,$w((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function $w(e,t=null){return new class extends Cw{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Ew(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof vr||oe(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof vr?Eu(e):Qr(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Aw(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&H("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Cw.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const _w=Zc;class Rw extends P{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new z(this,xi())}nextDataId(){return Rw.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,$e().get("IS_NODE")&&Ne("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&le(n[0])){const r=n.map((e=>or(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Ac(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Os(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return xi().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ir();return e(),{kernelMs:ir()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Aw([e],"where");const t=this.readSync(e.dataId);return _w(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Fw(e,t,n){return({inputs:a,attrs:r,backend:s})=>{const{x:i}=a;if(Aw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=X(i.shape),c=n||i.dtype,p=se(c,l);for(let e=0;e<l;++e)p[e]=t(u[e],r);return o.makeTensorInfo(i.shape,c,p)}}function Dw(e,t,n){return({inputs:a,attrs:r,backend:s})=>{const{x:i}=a;if(Aw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,r);return o.makeTensorInfo(i.shape,l,c)}}Rw.nextDataId=0,Ni("cpu",(()=>new Rw),1);const Ow=Fw($t,(e=>e>=0?e:Math.exp(e)-1)),Mw={kernelName:$t,backendName:"cpu",kernelFunc:Ow};function Lw(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const zw={kernelName:Ht,backendName:"cpu",kernelFunc:Lw};function Pw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;Aw([r],"leakyRelu");const i=X(r.shape),o=n.data.get(r.dataId).values,u=re("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",u)}const Bw={kernelName:Zt,backendName:"cpu",kernelFunc:Pw};function Ww(e){return(t,n,a,r,s)=>{const i=xo(t,n),o=i.length,u=fe(i),l=re(s,X(i)),c=t.length,p=n.length,d=fe(t),h=fe(n),f=yo(t,i),m=yo(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(a[t%a.length],r[t%r.length]);else for(let t=0;t<l.length;++t){const n=ke(t,o,u),s=n.slice(-c);f.forEach((e=>s[e]=0));const i=ve(s,c,d),g=n.slice(-p);m.forEach((e=>g[e]=0));const y=ve(g,p,h);l[t]=e(a[i],r[y])}return[l,i]}}const Vw=Ww(((e,t)=>e<0?t*e:e));function Uw(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;Aw([a,r],"prelu");const s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,u]=Vw(a.shape,r.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}const Gw={kernelName:Fn,backendName:"cpu",kernelFunc:Uw},Hw=Fw(zn,(e=>Math.max(0,e))),jw={kernelName:zn,backendName:"cpu",kernelFunc:Hw},qw=Fw(Gn,(e=>Math.min(Math.max(0,e),6))),Kw={kernelName:Gn,backendName:"cpu",kernelFunc:qw};function Xw(e){return(t,n,a)=>{const r=re(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],a);return r}}const Yw=Xw((e=>1/(1+Math.exp(-e)))),Zw=Fw(ta,(e=>1/(1+Math.exp(-e)))),Jw={kernelName:ta,backendName:"cpu",kernelFunc:Zw};function Qw(e,t,n,a,r){if("linear"===n)return Lw({inputs:{x:t},backend:e});if("relu"===n)return Hw({inputs:{x:t},backend:e});if("elu"===n)return Ow({inputs:{x:t},backend:e});if("relu6"===n)return qw({inputs:{x:t},backend:e});if("prelu"===n)return Uw({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Pw({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Zw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ev(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const tv={kernelName:rt,backendName:"cpu",kernelFunc:ev};function nv(e,t,n="float32"){if("complex64"===n)return ev({inputs:{real:nv(e,t,"float32"),imag:nv(e,t,"float32")},backend:e});const a=be(X(t),n);return e.makeTensorInfo(t,n,a)}function av(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const rv={kernelName:Mn,backendName:"cpu",kernelFunc:av};function sv(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return Lw({inputs:{x:r},backend:n});const e=nv(n,r.shape,r.dtype),t=sv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=ev({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=av({inputs:{input:r},backend:n}),t=sv({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ie(r.dtype,s)){const e=Lw({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(r.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(r.shape,"int32",t)}if("bool"===s){const e=n.data.get(r.dataId).values,t=sr([0],r.dtype),[a,s]=Ww(((e,t)=>e!==t?1:0))(r.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",a)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}const iv={kernelName:tt,backendName:"cpu",kernelFunc:sv};function ov(e,t,n,a){return null==n?({inputs:n,backend:r})=>{const{a:s,b:i}=n,o=r;Aw([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?Xc(u):u,p="string"===s.dtype?Xc(l):l,d=a||s.dtype,[h,f]=t(s.shape,i.shape,c,p,d);return o.makeTensorInfo(f,d,h)}:({inputs:e,backend:r})=>{const{a:s,b:i}=e,o=r;if("complex64"===s.dtype||"complex64"===i.dtype){const e=sv({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,u=o.data.get(a.dataId).values,l=o.data.get(r.dataId).values,c=sv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(c.dataId),d=p.complexTensorInfos.real,h=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(h.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=ev({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,r=a||s.dtype,[u,l]=t(s.shape,i.shape,e,n,r);return o.makeTensorInfo(l,r,u)}}}function uv(e){return(t,n,a,r,s,i)=>{const o=xo(t,n),u=X(o),l=o.length,c=fe(o),p=re("float32",u),d=re("float32",u),h=yo(t,o),f=yo(n,o),m=Ac(a,r),g=Ac(s,i),y=t.length,b=fe(t),x=n.length,w=fe(n);if(h.length+f.length===0)for(let t=0;t<p.length;t++){const n=t%m.length,a=t%g.length,r=e(m[2*n],m[2*n+1],g[2*a],g[2*a+1]);p[t]=r.real,d[t]=r.imag}else for(let t=0;t<p.length;t++){const n=ke(t,l,c),a=n.slice(-y);h.forEach((e=>a[e]=0));const r=ve(a,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=ve(s,x,w),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}const lv=Ww(((e,t)=>e+t)),cv=uv(((e,t,n,a)=>({real:e+n,imag:t+a}))),pv=ov(Me,lv,cv),dv={kernelName:Me,backendName:"cpu",kernelFunc:pv};function hv(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=X(r.shape),o=te(s,i),u=X(o);H(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const fv={kernelName:Pn,backendName:"cpu",kernelFunc:hv};function mv(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;Aw([r,s],"matMul");const u=r.shape.length,l=s.shape.length,c=i?r.shape[u-2]:r.shape[u-1],p=o?s.shape[l-1]:s.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],h=o?s.shape[l-2]:s.shape[l-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=X(f),y=X(m);H(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,h]);H(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,h,p]:[y,p,h],w=hv({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),v=hv({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],S=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,$=fe(w.shape),E=fe(v.shape),[A,_,R]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,D,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=I*N,L=Os([S,I,N],w.dtype),z=L.values,P=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<I;t+=P)for(let n=0;n<N;n+=P)for(let a=0;a<k;a+=P){const r=Math.min(t+P,I),s=Math.min(n+P,N),i=Math.min(a+P,k);for(let o=t;o<r;o++)for(let t=n;t<s;t++){let n=0;for(let r=a;r<i;r++){const a=Math.min(e,g-1)*A,s=Math.min(e,y-1)*O;n+=T[a+o*_+r*R]*C[r*F+t*D+s]}z[e*M+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const gv={kernelName:Ze,backendName:"cpu",kernelFunc:mv},yv={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=a;let d,h,f;const m=[];d=mv({inputs:{a:r,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(h=pv({inputs:{a:d,b:i},backend:n}),m.push(d),d=h),c&&(f=Qw(n,d,c,o,p),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function bv(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const xv={kernelName:Fe,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Aw(t,"abs");let a=new Float32Array(X(t.shape));return a=bv(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},wv=Fw(De,(e=>Math.acos(e))),vv={kernelName:De,backendName:"cpu",kernelFunc:wv},kv=Fw(Oe,(e=>Math.acosh(e))),Iv={kernelName:Oe,backendName:"cpu",kernelFunc:kv},Nv={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;Aw(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=Os(a[0].shape,a[0].dtype),i=s.values;for(let e=0;e<a.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Sv(e,t,n,a,r){const s=t.length,i=X(t),o=fe(t),u=fe(r),l=re(n,X(r));for(let t=0;t<i;++t){const n=ke(t,s,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[a[e]];l[ve(r,s,u)]=e[t]}return l}function Tv(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;Aw(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[s[e]];const u=Sv(a.data.get(r.dataId).values,r.shape,r.dtype,s,o);return{dataId:a.write(u,o,r.dtype),shape:o,dtype:r.dtype}}const Cv={kernelName:Sa,backendName:"cpu",kernelFunc:Tv},$v={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;Aw(r,"all");const o=ne(s,r.shape);let u=o;const l=Yo(u,r.shape.length);let c=r;null!=l&&(c=Tv({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Jo(u.length,r.shape.length)),Xo("all",u,c.shape.length);const[p,d]=qo(c.shape,u),h=X(d),f=be(X(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const a=m[t+e];n=n&&a}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=hv({inputs:{x:g},backend:n,attrs:{shape:Ko(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Ev={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;Aw(r,"any");const o=ne(s,r.shape);let u=o;const l=Yo(u,r.shape.length);let c=r;null!=l&&(c=Tv({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Jo(u.length,r.shape.length)),Xo("any",u,c.shape.length);const[p,d]=qo(c.shape,u),h=X(d),f=be(X(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const a=m[t+e];n=n||a}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=hv({inputs:{x:g},backend:n,attrs:{shape:Ko(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Av={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Aw(r,"argMax");let i=ne(s,r.shape);const o=Yo(i,r.shape.length);let u=r;const l=[];null!=o&&(u=Tv({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=Jo(i.length,u.shape.length)),i=[i[0]],Xo("argMax",i,u.shape.length);const[c,p]=qo(u.shape,i),d=be(X(c),"int32"),h=X(p),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*h;let n=f[t],a=0;for(let e=0;e<h;++e){const r=f[t+e];r>n&&(n=r,a=e)}d[e]=a}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},_v={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Aw(r,"argMin");let i=ne(s,r.shape);const o=Yo(i,r.shape.length);let u=r;const l=[];null!=o&&(u=Tv({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=Jo(i.length,u.shape.length)),i=[i[0]],Xo("argMin",i,u.shape.length);const[c,p]=qo(u.shape,i),d=be(X(c),"int32"),h=X(p),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*h;let n=f[t],a=0;for(let e=0;e<h;++e){const r=f[t+e];r<n&&(n=r,a=e)}d[e]=a}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Rv=Fw(Ve,(e=>Math.asin(e))),Fv={kernelName:Ve,backendName:"cpu",kernelFunc:Rv},Dv=Fw(Ue,(e=>Math.asinh(e))),Ov={kernelName:Ue,backendName:"cpu",kernelFunc:Dv},Mv=Fw(Ge,(e=>Math.atan(e))),Lv={kernelName:Ge,backendName:"cpu",kernelFunc:Mv},zv=Ww(((e,t)=>Math.atan2(e,t))),Pv=ov(je,zv),Bv={kernelName:je,backendName:"cpu",kernelFunc:Pv},Wv=Fw(He,(e=>Math.atanh(e))),Vv={kernelName:He,backendName:"cpu",kernelFunc:Wv};function Uv(e,t,n,a,r,s){const i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Os(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*y,m=t*a[0];for(let t=0;t<r.inChannels;++t)for(let y=0;y<r.outHeight;++y){const w=y*i-d,v=Math.max(0,w),k=Math.min(r.inHeight,c+w),I=n+y*b;for(let n=0;n<r.outWidth;++n){const i=n*o-h,c=Math.max(0,i),d=Math.min(r.inWidth,p+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const r=m+n*a[1];for(let n=c;n<d;n+=l){const i=e[r+n*a[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/w:y}}}return m}function Gv(e,t,n,a,r=!1,s=!1){const i=Os(a.outShape,"int32"),o=a.strideHeight,u=a.strideWidth,l=a.dilationHeight,c=a.dilationWidth,p=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,f=a.padInfo.left,m=Os(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const g=n*o-h;let y=g;for(;y<0;)y+=l;const b=Math.min(a.inHeight,p+g);for(let o=0;o<a.outWidth;++o){const p=o*u-f;let h=p;for(;h<0;)h+=c;const x=Math.min(a.inWidth,d+p);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=h;o<x;o+=c){const u=o-p,l=m.get(e,n,o,t);l>w&&(w=l,v=r?s?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:i*d+u)}}i.set(v,e,n,o,t)}}return i}function Hv(e,t,n,a,r,s){const i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Os(r.outShape,n),w=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*v,x=t*a[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){const S=v*i-m;let T=S;for(;T<0;)T+=l;const C=Math.min(r.inDepth,d+S),$=n+v*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(r.inHeight,h+i),v=$+n*I;for(let n=0;n<r.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=p;const h=Math.min(r.inWidth,f+i),g=v+n*N;let k=b,I=0,S=0;for(let n=T;n<C;n+=l){const r=x+n*a[1];for(let n=d;n<m;n+=c){const i=r+n*a[2];for(let n=o;n<h;n+=p){const r=e[i+n*a[3]+t];if("max"===s&&r>k?k=r:"avg"===s&&(I+=r,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===s?I/S:k}}}}return x}const jv={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Aw(r,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=a;H(Gi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Di(r.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&Y(l.inShape,l.outShape))c=Lw({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=fe(r.shape),a=Uv(e,r.shape,r.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return c}},qv={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=a;Aw(r,"avgPool3d");const c=Oi(r.shape,s,i,1,o,u,l),p=Hv(n.data.get(r.dataId).values,r.shape,r.dtype,fe(r.shape),c,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},Kv={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a;Aw([r,s],"avgPool3DGrad");const c=Oi(s.shape,i,o,1,u,l),p=c.strideDepth,d=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,N=k-1-c.padInfo.left,S=v-1-c.padInfo.top,T=Os(s.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let a=0;a<c.inHeight;++a)for(let r=0;r<c.inWidth;++r){const s=n-I,i=a-S,o=r-N;let u=0;for(let n=0;n<w;n+=y){const a=(s+n)/p;if(!(a<0||a>=c.outDepth||Math.floor(a)!==a))for(let n=0;n<v;n+=b){const r=(i+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const s=(o+n)/h;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=$.get(e,a,r,s,t))}}}T.set(u*C,e,n,a,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},Xv={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;Aw([r,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=a,c=Di(i.shape,o,u,1,l),p=c.strideHeight,d=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=Os(i.shape,"float32"),k=1/(h*f),I=n.data.get(r.dataId).values,N=Os(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){const r=n-w,s=a-x;let i=0;for(let n=0;n<y;n+=m){const a=(r+n)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<b;n+=g){const r=(s+n)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=N.get(e,a,r,t))}}v.set(i*k,e,n,a,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Yv={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:u}=t;H(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),H(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),H(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Aw([r,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const c=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=h.length,b=d.length,x=p.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-p[v++])*h[k++]/Math.sqrt(d[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function Zv(e,t,n,a,r){const s=pi(a,t,n),i=X(n),o=fe(a);if(s){const n=di(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const u=Os(a,r,"string"===r?Xc(e):e),l=Os(n,r);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),a=n.map(((e,n)=>e+t[n]));l.set(u.get(...a),...n)}return"string"===r?Yc(l.values):l.values}function Jv(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;Aw(r,"slice");const[o,u]=hi(r,s,i);Qs(r,o,u);const l=Zv(n.data.get(r.dataId).values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,l)}const Qv={kernelName:Zn,backendName:"cpu",kernelFunc:Jv},ek={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;Aw([r],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=yc(r.shape,s,o),l=bc(u.length,s.length),c=xc(r.shape,s,o),p=wc(i,s.length),d=vc(c,i,s.length),h=hv({inputs:{x:r},backend:n,attrs:{shape:u}}),f=Tv({inputs:{x:h},backend:n,attrs:{perm:l}}),m=hv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Jv({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function tk(e,t,n,a,r){const s=X(a),i=be(r,n);for(let n=0;n<e.length;n++){const a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=r||(i[a]+=s>0?t[n]:1)}return i}function nk(e,t,n,a=!1){const r=e.shape[0],s=e.shape[1],i=Os([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<s;r++){const s=e.get(o,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,r),o,s):i.set(i.get(o,s)+1,o,s))}return i}const ak={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=tk(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},rk={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=xo(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},sk=Xw((e=>Math.ceil(e))),ik=Dw(nt,sk),ok={kernelName:nt,backendName:"cpu",kernelFunc:ik},uk=Fw(at,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),lk={kernelName:at,backendName:"cpu",kernelFunc:uk},ck={kernelName:st,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(X(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};function pk(e,t,n,a){const r=se(n,X(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=X(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?Xc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=s[i++]}a+=e.shape[1]}))}return r}function dk(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const hk={kernelName:qt,backendName:"cpu",kernelFunc:dk};function fk(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=ne(r,t[0].shape)[0];let i=hc(t.map((e=>e.shape)),s);if(0===X(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>X(e.shape)>0));if(1===o.length)return Lw({inputs:{x:o[0]},backend:n});if(dc(o.map((e=>e.shape)),s),"complex64"===o[0].dtype){const e=o.map((e=>av({inputs:{input:e},backend:n}))),t=o.map((e=>dk({inputs:{input:e},backend:n}))),a=fk({inputs:e,backend:n,attrs:{axis:s}}),r=fk({inputs:t,backend:n,attrs:{axis:s}}),i=ev({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}const u=o.map((e=>{const t=X(e.shape.slice(s));return hv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=hc(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],p=pk(l,i,t[0].dtype,c),d=hc(o.map((e=>e.shape)),s),h=n.makeTensorInfo(d,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}const mk={kernelName:it,backendName:"cpu",kernelFunc:fk};function gk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=a;Aw([r,s],"conv2d");const p=Hi(u),d=Mi(r.shape,s.shape,i,l,o,c,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new yr(d.outShape,r.dtype),v=fe(r.shape),k=fe(s.shape),I=v[0],N=x?v[1]:v[2],S=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],_=n.data.get(r.dataId).values,R=n.data.get(s.dataId).values,F=w.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<d.outHeight;++e){const a=n+e*$,r=e*d.strideHeight-b;for(let e=0;e<h;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const s=e*k[0],i=t+n*N;for(let e=0;e<d.outWidth;++e){const t=a+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const r=i+a*S;let o=s+e*k[1];for(let e=0;e<d.inChannels;++e){const n=_[r+e*T];for(let e=0;e<d.outChannels;++e)F[t+e*A]+=n*R[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const yk={kernelName:ot,backendName:"cpu",kernelFunc:gk},bk={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=a;Aw([r,s],"conv2dBackpropFilter");const p=Hi(u),d=Mi(r.shape,c,i,1,o,l,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new yr(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,I=new yr(r.shape,r.dtype,v),N=new yr(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/h)),n=Math.min(d.outHeight,(d.inHeight+w-e)/h);for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((x-a)/f)),s=Math.min(d.outWidth,(d.inWidth+x-a)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*h-w;for(let e=r;e<s;++e){const n=a+e*f-x;u+=y?I.get(l,t,n,i)*N.get(l,c,e,o):I.get(l,i,t,n)*N.get(l,o,c,e)}}b.set(u,e,a,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},xk={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=a;Aw([r,s],"conv2dBackpropInput");const p=fe(s.shape),d=fe(r.shape);let h=Hi(l);const f=Mi(i,s.shape,o,1,u,c,!1,h),m=new yr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=p,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:A,strideHeight:_,strideWidth:R}=f;h=f.dataFormat;const F=I-1-f.padInfo.top,D=N-1-f.padInfo.left,O="channelsLast"===h,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=d[0],W=O?d[1]:d[2],V=O?d[2]:1,U=O?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<T;++n){const a=n-F,r=Math.max(0,Math.ceil(a/_)),s=Math.min(E,(I+a)/_);for(let i=0;i<C;++i){const o=i-D,u=Math.max(0,Math.ceil(o/R)),l=Math.min(A,(N+o)/R);let c=0;for(let n=r;n<s;++n){const r=n*_-a;for(let a=u;a<l;++a){const s=B*e+W*n+V*a,i=x*(I-1-r)+w*(N-1-(a*R-o))+v*t;for(let e=0;e<$;++e)c+=y[s+U*e]*b[i+e]}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},wk={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=a;Aw([r,s],"conv3d");const l=Li(r.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new yr(l.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,I=w.values,N=fe(r.shape),S=fe(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const a=n+e*w.strides[1],r=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=r+e*h;if(n<0||n>=l.inDepth)continue;const s=e*S[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=a+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<p;++e){const a=n+e*f;if(a<0||a>=l.inHeight)continue;const r=s+e*S[1],o=i+a*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=l.inWidth)continue;const s=r+e*S[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},vk={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=a;Aw([r,s],"conv3dBackpropFilterV2");const l=fe(r.shape),c=fe(s.shape),p=Li(r.shape,u,i,1,o),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new yr(p.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,N=n.data.get(s.dataId).values,[S,T,C,$]=c,E=n.data.get(r.dataId).values,[A,_,R,F]=l,D=p.padInfo.front,O=p.padInfo.left,M=p.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(p.outDepth,(p.inDepth+D-e)/d),a=e*w;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((M-r)/h)),i=Math.min(p.outHeight,(p.inHeight+M-r)/h),o=r*v+a;for(let a=0;a<y;++a){const u=Math.max(0,Math.ceil((O-a)/f)),l=Math.min(p.outWidth,(p.inWidth+O-a)/f),c=a*k+o;for(let o=0;o<p.inChannels;++o){const m=o*I+c;for(let c=0;c<p.outChannels;++c){let g=0;for(let m=0;m<p.batchSize;++m){const p=m*A,y=m*S;for(let m=t;m<n;++m){const t=(e+m*d-D)*_+p,n=m*T+y;for(let e=s;e<i;++e){const s=(r+e*h-M)*R+t,i=e*C+n;for(let e=u;e<l;++e){const t=e*$+i;g+=E[(a+e*f-O)*F+s+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},kk={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:u}=a;Aw([r],"conv3dBackpropInputV2");const l=fe(r.shape),c=fe(s.shape),p=Li(u,s.shape,o,1,i),d=new yr(p.inShape,"float32"),h=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,w,v,k]=l,I=n.data.get(s.dataId).values,[N,S,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:_,inChannels:R,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=E-1-p.padInfo.front,G=A-1-p.padInfo.top,H=_-1-p.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const a=n-U,r=Math.max(0,Math.ceil(a/B)),s=Math.min(L,(E+a)/B);for(let i=0;i<D;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,(A+o)/W);for(let c=0;c<O;++c){const p=c-H,d=Math.max(0,Math.ceil(p/V)),$=Math.min(P,(_+p)/V);let R=0;for(let n=r;n<s;++n){const r=n*B-a;for(let a=u;a<l;++a){const s=a*W-o;for(let i=d;i<$;++i){const o=x*e+w*n+v*a+k*i,u=N*(E-1-r)+S*(A-1-s)+T*(_-1-(i*V-p))+C*t;for(let e=0;e<M;++e)R+=b[o+e]*I[u+e]}}}h[f*e+m*n+g*i+y*c+t]=R}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Ik=Fw(ht,(e=>Math.cos(e))),Nk={kernelName:ht,backendName:"cpu",kernelFunc:Ik},Sk=Fw(ft,(e=>Math.cosh(e))),Tk={kernelName:ft,backendName:"cpu",kernelFunc:Sk},Ck={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=a,[c,p,d,h]=r.shape,f=s.shape[0],[m,g]=o,y=Os([f,m,g,h],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,v=fe(r.shape),k=fe(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],a=b[t+1],r=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(p-1)/(m-1):0,f=g>1?(s-a)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(p-1)+t*o:.5*(n+r)*(p-1);if(c<0||c>p-1)for(let n=0;n<g;n++)for(let a=0;a<h;a++){const r=a+n*k[2]+t*k[1]+e*k[0];y.values[r]=l}else if("bilinear"===u){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?a*(d-1)+u*f:.5*(a+s)*(d-1);if(c<0||c>d-1){for(let n=0;n<h;n++){const a=n+u*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const p=Math.floor(c),m=Math.ceil(c),b=c-p;for(let a=0;a<h;a++){let s=a+p*v[2]+n*v[1]+i*v[0];const l=w[s];s=a+m*v[2]+n*v[1]+i*v[0];const c=w[s];s=a+p*v[2]+r*v[1]+i*v[0];const d=w[s];s=a+m*v[2]+r*v[1]+i*v[0];const h=l+(c-l)*b,f=d+(w[s]-d)*b;s=a+u*k[2]+t*k[1]+e*k[0],y.values[s]=h+(f-h)*o}}}else for(let n=0;n<g;++n){const r=g>1?a*(d-1)+n*f:.5*(a+s)*(d-1);if(r<0||r>d-1){for(let a=0;a<h;a++){const r=a+n*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const o=Math.round(r),u=Math.round(c);for(let a=0;a<h;a++){const r=a+o*v[2]+u*v[1]+i*v[0],s=a+n*k[2]+t*k[1]+e*k[0];y.values[s]=w[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},$k={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;Aw(r,"cumsum");const u=Yo([s],r.shape.length);let l=r;null!=u&&(l=Tv({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=Jo(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const p=Ar(l.dtype,"int32"),d=be(X(l.shape),p),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:h[n];else{const a=m(e,t-1);d[n]=i?h[a]+d[a]:h[n]+d[a]}}const g=n.makeTensorInfo(l.shape,p,d);if(null!=u){const e=Tv({inputs:{x:g},backend:n,attrs:{perm:Zo(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},Ek={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){const e=tk(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===r.shape.length){const e=nk(n.bufferSync(r),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},Ak={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;H("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],p=u*s,d=l*s,h=c/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(o*p*d*h);let g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){const n=Math.floor(t/s),a=t%s;for(let t=0;t<d;++t){const r=Math.floor(t/s),i=(a*s+t%s)*h;for(let t=0;t<h;++t){const a=t+i+c*(r+l*(n+u*e));m[g++]=f[a]}}}return n.makeTensorInfo([o,p,d,h],r.dtype,m)}};function _k(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=a;Aw([r,s],"depthwiseConv2DNative");const c=fe(r.shape),p=fe(s.shape);let d=u;null==d&&(d=[1,1]),H(Gi(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const h=Mi(r.shape,s.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=h,x=b.left,w=b.top,v=h.outChannels/h.inChannels,k=new yr(h.outShape,r.dtype),I=n.data.get(r.dataId).values,N=n.data.get(s.dataId).values,S=k.values;for(let e=0;e<h.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<h.outHeight;++e){const a=n+e*k.strides[1],r=e*h.strideHeight-w;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=h.inHeight)continue;const s=e*p[0],i=t+n*c[1];for(let e=0;e<h.outWidth;++e){const t=a+e*k.strides[2],n=e*h.strideWidth-x;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=h.inWidth)continue;const r=s+e*p[1],o=i+a*h.inChannels;let u=t,l=r;for(let e=0;e<h.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)S[u+e]+=t*N[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Rk={kernelName:xt,backendName:"cpu",kernelFunc:_k},Fk={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=a;Aw([r,s],"depthwiseConv2dNativeBackpropFilter");const p=Mi(r.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new yr(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,w=n.data.get(r.dataId).values,v=new yr(r.shape,r.dtype,w),k=n.data.get(s.dataId).values,I=new yr(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(p.outHeight,(p.inHeight+b-e)/d);for(let a=0;a<m;++a){const r=Math.max(0,Math.ceil((y-a)/h)),s=Math.min(p.outWidth,(p.inWidth+y-a)/h);for(let i=0;i<p.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=r;e<s;++e){const n=a+e*h-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,a,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Dk={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=a;Aw([r,s],"depthwiseConv2DNativeBackpropInput");const p=fe(r.shape),d=fe(s.shape),h=Mi(c,s.shape,i,o,u,l,!0),f=new yr(h.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[w,v,k]=p,I=n.data.get(s.dataId).values,[N,S,T]=d,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:_,inWidth:R,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=h,z=$-1-h.padInfo.top,P=E-1-h.padInfo.left,B=F/A;for(let e=0;e<C;++e)for(let t=0;t<A;++t)for(let n=0;n<_;++n){const a=n-z,r=Math.max(0,Math.ceil(a/M)),s=Math.min(D,($+a)/M);for(let i=0;i<R;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,(E+o)/L);let c=0;for(let n=r;n<s;++n){const r=n*M-a;for(let a=u;a<l;++a){const s=w*e+v*n+k*a,i=N*($-1-r)+S*(E-1-(a*L-o))+T*t;for(let e=0;e<B;++e)c+=x[s+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Ok={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=X(a.shape),s=n.data.get(a.dataId).values,i=Os([r,r],a.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*r+e]=s[e];const u=[...a.shape,...a.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Mk={kernelName:It,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(a.dataId).values,c=a.shape.length,p=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=Fi(a.shape,r.shape,s,i,"NHWC",o),C=X(T),$=T.length,E=se(a.dtype,C);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let s=0;s<b;++s){const i=s*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<I;++n){const h=i+n*S;if(h>=0&&h<m){const i=ve([e,s,h,o],c,fe(a.shape)),f=ve([t,n,o],d,fe(r.shape)),m=l[i]+p[f];m>u&&(u=m)}}}E[ve([e,t,s,o],$,fe(T))]=u}}}return{dataId:u.write(sr(E,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Lk={kernelName:St,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ge(a.shape,l.data.get(a.dataId).values),p=ge(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Fi(a.shape,r.shape,i,o,"NHWC",u);H(s.rank===S.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const T=ge(S,l.data.get(s.dataId).values),C=xe(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let a=0;a<y;++a){const r=a*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const a=n+t*I;if(a>=0&&a<h)for(let n=0;n<k;++n){const l=r+n*N;if(l>=0&&l<f){const r=c[e][a][l][s]+p[t][n][s];r>i&&(i=r,o=t,u=n)}}}C[o][u][s]+=T[e][t][a][s]}}}return{dataId:l.write(sr(C,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},zk={kernelName:Nt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ge(a.shape,l.data.get(a.dataId).values),p=ge(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Fi(a.shape,r.shape,i,o,"NHWC",u);H(s.rank===S.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const T=ge(S,l.data.get(s.dataId).values),C=xe(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let a=0;a<y;++a){const r=a*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=r<0?0:r;for(let t=0;t<v;++t){const a=n+t*I;if(a>=0&&a<h)for(let n=0;n<k;++n){const l=r+n*N;if(l>=0&&l<f){const r=c[e][a][l][s]+p[t][n][s];r>i&&(i=r,o=a,u=l)}}}C[e][o][u][s]+=T[e][t][a][s]}}}return{dataId:l.write(sr(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Pk=Ww(((e,t)=>e*t)),Bk=uv(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),Wk=ov(kn,Pk,Bk),Vk={kernelName:kn,backendName:"cpu",kernelFunc:Wk};function Uk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;let o;Aw(r,"sum"),o="bool"===r.dtype?sv({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Lw({inputs:{x:r},backend:n});const u=o.shape.length,l=ne(s,o.shape),c=Yo(l,u);let p=l,d=o;null!=c&&(d=Tv({inputs:{x:o},backend:n,attrs:{perm:c}}),p=Jo(p.length,u)),Xo("sum",p,d.shape.length);const[h,f]=qo(d.shape,p);let m=nv(n,h,Ar(d.dtype,"int32"));const g=X(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=hv({inputs:{x:m},backend:n,attrs:{shape:Ko(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const Gk={kernelName:ra,backendName:"cpu",kernelFunc:Uk},Hk={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:u}=Pc(r,s.length);Wc(i.length,u,s);const{path:l,steps:c}=Vc(o,u),p=c.length;let d=null,h=i.length;const f=[];for(let e=0;e<p;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:a}=Bc(h,u[t]);let r;Uc(e)?r=s[t]:(r=Tv({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Y(r.shape,i)||(r=hv({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=Wk({inputs:{a:r,b:d},backend:n}),f.push(d))}e<p-1&&(l[e]>=0&&(d=Uk({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},jk={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;Aw([a,r],"eluGrad");const s=new Float32Array(X(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",s)}},qk=Ww(((e,t)=>e===t?1:0)),Kk=ov(_t,qk,null,"bool"),Xk={kernelName:_t,backendName:"cpu",kernelFunc:Kk},Yk=Nc,Zk=Sc,Jk=Tc,Qk=Cc,eI=$c,tI=Ec,nI=Fw(At,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+Yk*n);return t*(1-((((tI*a+eI)*a+Qk)*a+Jk)*a+Zk)*a*Math.exp(-n*n))})),aI={kernelName:At,backendName:"cpu",kernelFunc:nI},rI=Xw((e=>Math.exp(e))),sI=Dw(Rt,rI,"float32"),iI={kernelName:Rt,backendName:"cpu",kernelFunc:sI};function oI(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice();let u=s;return s<0&&(H(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),hv({inputs:{x:r},backend:n,attrs:{shape:o}})}const uI={kernelName:Ft,backendName:"cpu",kernelFunc:oI},lI=Xw((e=>Math.expm1(e))),cI=Dw(Dt,lI),pI={kernelName:Dt,backendName:"cpu",kernelFunc:cI},dI=Ww(((e,t)=>e/t)),hI=ov(Tt,dI),fI={kernelName:Tt,backendName:"cpu",kernelFunc:hI},mI=Ww(((e,t)=>e-t)),gI=uv(((e,t,n,a)=>({real:e-n,imag:t-a}))),yI=ov(xa,mI,gI),bI={kernelName:xa,backendName:"cpu",kernelFunc:yI};function xI(e,t,n){const a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[r,s],c=X(l),p=re("float32",c),d=re("float32",c);for(let e=0;e<r;e++){const a=Jv({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),r=Jv({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=ev({inputs:{real:a,imag:r},backend:n}),{real:l,imag:c}=wI(i,t,n),h=Ac(l,c);for(let t=0;t<s;t++){const n=Dc(h,t);p[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const h=n.makeTensorInfo(l,"float32",p),f=n.makeTensorInfo(l,"float32",d),m=ev({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function wI(e,t,n){const a=X(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=a)&o-1)){const r=vI(s,i,a,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),s=n.makeTensorInfo([],"float32",rr(a,"float32")),i=Lw({inputs:{x:s},backend:n}),u=fI.kernelFunc({inputs:{a:e,b:s},backend:n}),l=fI.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:p}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,i=0;for(let a=0;a<t;a++){const o=Lc(r*a,t,n),u=Dc(e,a);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),Oc(a,s,i,r)}return a}(Ac(s,i),a,t);return _c(e)}var o}function vI(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=Ac(e,t),i=n/2,o=Rc(s),u=o.real,l=o.imag,c=[u.length],p=r.makeTensorInfo(c,"float32",u),d=r.makeTensorInfo(c,"float32",l),h=ev({inputs:{real:p,imag:d},backend:r}),f=Fc(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),w=ev({inputs:{real:b,imag:x},backend:r}),v=vI(u,l,i,a,r),k=v.real,I=v.imag,N=[k.length],S=r.makeTensorInfo(N,"float32",k),T=r.makeTensorInfo(N,"float32",I),C=ev({inputs:{real:S,imag:T},backend:r}),$=vI(m,g,i,a,r),E=$.real,A=$.imag,_=[E.length],R=r.makeTensorInfo(_,"float32",E),F=r.makeTensorInfo(_,"float32",A),D=ev({inputs:{real:R,imag:F},backend:r}),O=Mc(n,a),M=[O.real.length],L=r.makeTensorInfo(M,"float32",O.real),z=r.makeTensorInfo(M,"float32",O.imag),P=ev({inputs:{real:L,imag:z},backend:r}),B=Wk({inputs:{a:P,b:D},backend:r}),W=pv({inputs:{a:C,b:B},backend:r}),V=yI({inputs:{a:C,b:B},backend:r}),U=av({inputs:{input:W},backend:r}),G=av({inputs:{input:V},backend:r}),H=dk({inputs:{input:W},backend:r}),j=dk({inputs:{input:V},backend:r}),q=fk({inputs:[U,G],backend:r,attrs:{axis:0}}),K=fk({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const kI={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=X(a.shape),s=a.shape[a.shape.length-1],i=hv({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=xI(i,!1,n),u=hv({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function II(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||pe(r),o=se(i,X(a));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(a,i,o)}const NI={kernelName:Mt,backendName:"cpu",kernelFunc:II},SI={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,r=n,s=re(a.dtype,X(a.shape)),[i,o,u,l]=a.shape,c=r.data.get(a.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const a=e*l;for(let r=0;r<l;r++){const i=Math.round(u-e-1),o=t+n+a+r;let p=c[o];i>=0&&i<u&&(p=c[t+n+i*l+r]),s[o]=p}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},TI=Xw((e=>Math.floor(e))),CI=Dw(zt,TI),$I={kernelName:zt,backendName:"cpu",kernelFunc:CI},EI=Ww(((e,t)=>Math.floor(e/t))),AI=ov(Pt,EI,null,"int32"),_I={kernelName:Pt,backendName:"cpu",kernelFunc:AI},RI={kernelName:Da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=a;let m=gk({inputs:{x:r,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){const e=m;m=pv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=Qw(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}},FI={kernelName:Oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=a;let m=_k({inputs:{x:r,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){const e=m;m=pv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=Qw(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function DI(e,t,n,a,r,s,i,o,u){const l=Os([a,s],n);for(let n=0;n<a;n++){const a=[];let c=0;for(let t=0;t<r;t++){const s=e[n*r+t];c+=s*i[t],a.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}const OI={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=X(a.shape),i=r.shape,o=i[i.length-1],[u,l,c,p]=Xs(a,r);if(0===l)return n.makeTensorInfo(u,a.dtype,[]);const d=DI(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,o,c,p,a.shape,s);return n.makeTensorInfo(u,a.dtype,d.values)}};function MI(e,t,n){const a=Os(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),s=r[0],i=r[2],o=t.locToIndex([s,i]);r[2]=t.values[o];const u=e.locToIndex(r);a.values[n]=e.values[u]}return a}const LI={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;Aw([r,s],"gatherV2");const u=ne(i,r.shape)[0],l=n.data.get(s.dataId).values,c=r.shape[u];for(let e=0;e<l.length;++e){const t=l[e];H(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let p=o;null==o&&(p=0);const d=X(s.shape),h=Kc(r,s,u,p),f=hv({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=hv({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],y=n.bufferSync(m),b=MI(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,b.dtype,b.values)}},zI=Ww(((e,t)=>e>t?1:0)),PI=ov(Ut,zI,null,"bool"),BI={kernelName:Ut,backendName:"cpu",kernelFunc:PI},WI=Ww(((e,t)=>e>=t?1:0)),VI=ov(Gt,WI,null,"bool"),UI={kernelName:Gt,backendName:"cpu",kernelFunc:VI},GI={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=X(a.shape),s=a.shape[a.shape.length-1],i=hv({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=xI(i,!0,n),u=hv({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},HI=Fw(Kt,(e=>Number.isFinite(e)?1:0),"bool"),jI={kernelName:Kt,backendName:"cpu",kernelFunc:HI},qI=Fw(Xt,(e=>Math.abs(e)===1/0?1:0),"bool"),KI={kernelName:Xt,backendName:"cpu",kernelFunc:qI},XI=Fw(Yt,(e=>Number.isNaN(e)?1:0),"bool"),YI={kernelName:Yt,backendName:"cpu",kernelFunc:XI},ZI=Ww(((e,t)=>e<t?1:0)),JI=ov(Jt,ZI,null,"bool"),QI={kernelName:Jt,backendName:"cpu",kernelFunc:JI},eN=Ww(((e,t)=>e<=t?1:0)),tN=ov(Qt,eN,null,"bool"),nN={kernelName:Qt,backendName:"cpu",kernelFunc:tN};function aN(e,t,n){const a=(t-e)/(n-1),r=be(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+a;return r}const rN={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=aN(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},sN=Xw((e=>Math.log(e))),iN=Dw(tn,sN),oN={kernelName:tn,backendName:"cpu",kernelFunc:iN},uN=Fw(nn,(e=>Math.log1p(e))),lN={kernelName:nn,backendName:"cpu",kernelFunc:uN},cN=Ww(((e,t)=>e&&t)),pN=ov(an,cN,null,"bool"),dN={kernelName:an,backendName:"cpu",kernelFunc:pN},hN=Fw(rn,(e=>e?0:1),"bool"),fN={kernelName:rn,backendName:"cpu",kernelFunc:hN},mN=Ww(((e,t)=>e||t)),gN=ov(sn,mN,null,"bool"),yN={kernelName:sn,backendName:"cpu",kernelFunc:gN},bN={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=a;Aw(r,"LRN");const l=r.shape[3],c=l-1,p=n.data.get(r.dataId).values,d=X(r.shape),h=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,c);let r=0;for(;n<=a;n++){const e=p[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=f(e),n=p[e]*Math.pow(i+o*t,-u);h[e]=n}return n.makeTensorInfo(r.shape,r.dtype,h)}},xN={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=a;Aw(i,"LRNGrad");const p=X(i.shape),d=i.shape[3],h=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),a=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<a;e++)r+=Math.pow(f[e],2);r=l*r+u;for(let t=n;t<a;t++){let n=-2*l*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=h[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function wN(e,t,n,a){const r=re(a,X(n));for(let n=0;n<r.length;++n){const a=n*t;let s=e[a];for(let n=0;n<t;++n){const t=e[a+n];(Number.isNaN(t)||t>s)&&(s=t)}r[n]=s}return r}function vN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n;let u=r.shape;const l=u.length,c=ne(s,u);let p=c;const d=Yo(p,l);let h=o.data.get(r.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];h=Sv(h,u,r.dtype,d,e),p=Jo(p.length,l),u=e}Aw(r,"max"),Xo("max",p,l);const[f,m]=qo(u,p),g=wN(h,X(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return i&&(b=Ko(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const kN={kernelName:ln,backendName:"cpu",kernelFunc:vN},IN=Ww(((e,t)=>Math.max(e,t))),NN=ov(cn,IN),SN={kernelName:cn,backendName:"cpu",kernelFunc:NN},TN={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Aw(r,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=a;H(Gi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Di(r.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&Y(l.inShape,l.outShape))c=Lw({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=fe(r.shape),a=Uv(e,r.shape,r.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return c}},CN={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=a;Aw(r,"maxPool3d");const c=Oi(r.shape,s,i,1,o,u,l),p=Hv(n.data.get(r.dataId).values,r.shape,r.dtype,fe(r.shape),c,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},$N={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a;Aw([r,s],"maxPool3DGrad");const c=Oi(s.shape,i,o,1,u,l),p=function(e,t){const n=Os(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-d;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let a=0;a<t.outHeight;++a){const l=a*r-h;let d=l;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+l);for(let r=0;r<t.outWidth;++r){const h=r*s-f;let k=h;for(;k<0;)k+=u;const I=Math.min(t.inWidth,p+h);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let a=d;a<v;a+=o){const r=a-l;for(let s=k;s<I;s+=u){const i=s-h,o=e.get(m,t,a,s,g);o>=N&&(N=o,S=n*c*p+r*c+i)}}}n.set(S,m,y,a,r,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,h=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,N=Os(s.shape,"float32"),S=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let a=0;a<c.inHeight;++a)for(let r=0;r<c.inWidth;++r){const s=n-v,i=a-I,o=r-k;let u=0;for(let n=0;n<b;n+=m){const a=(s+n)/d;if(!(a<0||a>=c.outDepth||Math.floor(a)!==a))for(let r=0;r<x;r+=g){const s=(i+r)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=b*x*w-1-p.get(e,a,s,l,t)===n*x*w+r*w+i?1:0;0!==d&&(u+=S.get(e,a,s,l,t)*d)}}}N.set(u,e,n,a,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},EN={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;Aw([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=a,d=Di(o.shape,u,l,1,c,p),h=n.data.get(o.dataId).values,f=Os(d.outShape,o.dtype,Gv(h,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Os(o.shape,"float32"),N=n.data.get(r.dataId).values,S=Os(r.shape,"float32",N);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const r=n-k,s=a-v;let i=0;for(let n=0;n<x;n+=y){const a=(r+n)/m;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let r=0;r<w;r+=b){const o=(s+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,a,o,t)===n*w+r?1:0;0!==u&&(i+=S.get(e,a,o,t)*u)}}I.set(i,e,n,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},AN={kernelName:mn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;Aw(a,"MaxPoolWithArgmax");const l=u.data.get(a.dataId).values,c=Di(a.shape,r,s,[1,1],i),[p,d]=function(e,t,n,a,r){const s=Uv(e,0,n,fe(t),r,"max"),i=Gv(e,t,n,r,!0,a);return[s.values,i.values]}(l,a.shape,a.dtype,o,c),h=u.write(p,c.outShape,a.dtype),f=u.write(d,c.outShape,a.dtype);return[{dataId:h,shape:c.outShape,dtype:a.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},_N={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=ne(s,r.shape),u=X(qo(r.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const p=sv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});l.push(p);const d=hI({inputs:{a:p,b:c},backend:n});l.push(d);const h=Uk({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},RN={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;Aw(r,"min");const o=ne(s,r.shape);let u=o;const l=Yo(u,r.shape.length);let c=r;null!=l&&(c=Tv({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Jo(u.length,r.shape.length)),Xo("min",u,c.shape.length);const[p,d]=qo(c.shape,u),h=X(d),f=be(X(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*h;let n=m[t];for(let e=0;e<h;++e){const a=m[t+e];(Number.isNaN(a)||a<n)&&(n=a)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=hv({inputs:{x:g},backend:n,attrs:{shape:Ko(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},FN=Ww(((e,t)=>Math.min(e,t))),DN=ov(bn,FN),ON={kernelName:bn,backendName:"cpu",kernelFunc:DN},MN={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;Aw(r,"mirrorPad");const o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=fe(r.shape),f=X(o),m=o.length,g=fe(o),y=re(r.dtype,f);for(let e=0;e<f;e++){let t=ke(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=ve(t,d,h);y[e]=p[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},LN=Ww(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),zN=ov(wn,LN),PN={kernelName:wn,backendName:"cpu",kernelFunc:zN};var BN=n(2948);function WN(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=ne([o],r.shape),l=vN({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Ko(l.shape,u),p=hv({inputs:{x:l},backend:n,attrs:{shape:c}}),d=yI({inputs:{a:r,b:p},backend:n}),h=sI({inputs:{x:d},backend:n}),f=Uk({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),m=hv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=hI({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const VN={kernelName:oa,backendName:"cpu",kernelFunc:WN},UN={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;Aw(r,"multinomial");const u=o?r:WN({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=n.data.get(u.dataId).values,d=[l,s],h=be(X(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const a=BN.alea(i.toString()),r=e*s;for(let e=0;e<s;++e){const t=a();h[r+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){h[r+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",h)}};function GN(e,t,n){const a=rr(-1,n);return Pk([],t,a,e,n)}const HN={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;Aw(a,"neg");const r=n.data.get(a.dataId).values,[s,i]=GN(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}},jN=ml,qN={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=a;Aw(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:p}=jN(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},KN=gl,XN={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=a;Aw(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:h}=KN(c,p,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},YN=yl,ZN={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=a;Aw(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,d=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=YN(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},JN=Ww(((e,t)=>e!==t?1:0)),QN=ov(Nn,JN,null,"bool"),eS={kernelName:Nn,backendName:"cpu",kernelFunc:QN},tS={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a;Aw(r,"oneHot");const u=X(r.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(r.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...r.shape,s],"int32",l)}};function nS(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=av({inputs:{input:a},backend:n}),t=nS({inputs:{x:e},backend:n}),r=dk({inputs:{input:a},backend:n}),s=nS({inputs:{x:r},backend:n}),i=ev({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return II({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const aS={kernelName:Ea,backendName:"cpu",kernelFunc:nS},rS={kernelName:$n,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=av({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=dk({inputs:{input:r},backend:a}),i=nS({inputs:{x:s},backend:a}),o=ev({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return II({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function sS(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return oI({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{j(s,e.shape,"All tensors passed to stack must have matching shapes"),H(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=fk({inputs:t.map((e=>{const t=oI({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const iS={kernelName:An,backendName:"cpu",kernelFunc:sS},oS={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;Aw(r,"pad");const o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(r.dataId).values,c=X(r.shape),p=r.shape.length,d=fe(r.shape),h=X(o),f=o.length,m=fe(o),g=re(r.dtype,h);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[ve(ke(e,p,d).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},uS=Ww(((e,t)=>Math.pow(e,t))),lS=ov(Rn,uS),cS={kernelName:Rn,backendName:"cpu",kernelFunc:lS};function pS(e,t,n,a){const[r,s]=qo(e,a),i=Ar(t,"int32"),o=be(X(r),i),u=X(s);for(let e=0;e<o.length;++e){const t=e*u;let a=1;for(let e=0;e<u;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:r,outDtype:i}}const dS={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;Aw(r,"prod");const o=r.shape.length,u=ne(s,r.shape),l=Yo(u,o);let c=u,p=r;const d=[];null!=l&&(p=Tv({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(p),c=Jo(c.length,o));const h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=pS(p.shape,p.dtype,h,c);let y=m;return i&&(y=Ko(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function hS(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return be(0,a);const r=be(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const fS={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=hS(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}},mS=Fw(Ln,(e=>1/e)),gS={kernelName:Ln,backendName:"cpu",kernelFunc:mS},yS={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;Aw(r,"resizeBilinear");const u=fe(r.shape),[l,c]=o,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(X([p,l,c,f])),y=[s&&l>1?d-1:d,s&&c>1?h-1:h],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const a=Math.max(0,Math.floor(n)),r=n-a,s=Math.min(d-1,Math.ceil(n)),o=e*u[0]+a*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(h-1,Math.ceil(t)),c=o+n*u[2],p=l+n*u[2],d=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[p+e],s=t+(m[d+e]-t)*a,i=s+(n+(m[y+e]-n)*a-s)*r;g[x++]=i}}}return n.makeTensorInfo([p,l,c,f],"float32",g)}},bS={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;Aw([s,r],"resizeBilinearGrad");const o=fe(r.shape),[u,l,c,p]=r.shape,[,d,h]=s.shape,f=new Float32Array(u*l*c*p),m=[i&&d>1?l-1:l,i&&h>1?c-1:c],g=[i&&d>1?d-1:d,i&&h>1?h-1:h],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=t+a*o[1],i=t+r*o[1],u=n-a,d=1-u;for(let e=0;e<h;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),c-1),r=t-n,l=1-r,h=s+n*o[2],m=s+a*o[2],g=i+n*o[2],y=i+a*o[2],v=d*l,k=d*r,I=u*l,N=u*r;for(let e=0;e<p;e++){const t=x[w++];f[h+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([u,c,l,p],"float32",f)}},xS={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;Aw(r,"resizeNearestNeighbor");const u=fe(r.shape),[l,c]=o,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*l*c*f),y=[s&&l>1?d-1:d,s&&c>1?h-1:h],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const r=t+a*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(h-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const a=r+n*u[2];for(let e=0;e<f;e++){const t=m[a+e];g[v++]=t}}}}return n.makeTensorInfo([p,l,c,f],r.dtype,g)}},wS={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;Aw([s,r],"resizeNearestNeighborGrad");const o=fe(r.shape),u=fe(s.shape),[l,c,p,d]=r.shape,[,h,f]=s.shape,m=new Float32Array(l*c*p*d),g=n.data.get(s.dataId).values,y=[i&&h>1?c-1:c,i&&f>1?p-1:p],b=[i&&h>1?h-1:h,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,N=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],a=Math.floor(e*v),r=Math.floor(a-I/2);for(let a=0;a<p;a++){const s=n+a*o[2],l=Math.floor(a*k),y=Math.floor(l-N/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){const l=s+r;if(l<0||l>=h)continue;const d=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const r=d+t*u[2],s=t*w;a===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[s+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},vS={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;Aw(r,"reverse");const i=r.shape.length,o=ne(s,r.shape);if(0===i)return Lw({inputs:{x:r},backend:n});const u=new yr(r.shape,r.dtype),l=n.bufferSync(r);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},kS={kernelName:Ra,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,u=re(a.dtype,X(a.shape)),[l,c,p,d]=a.shape,[h,f]=gc(i,c,p),m=Math.sin(r),g=Math.cos(r),y=o.data.get(a.dataId).values;for(let e=0;e<l;e++){const t=e*p*c*d;for(let e=0;e<c;e++){const n=e*(p*d);for(let a=0;a<p;a++){const r=a*d;for(let i=0;i<d;i++){const o=[l,e,a,i],b=o[2],x=o[1];let w=(b-h)*g-(x-f)*m,v=(b-h)*m+(x-f)*g;w=Math.round(w+h),v=Math.round(v+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),w>=0&&w<p&&v>=0&&v<c&&(k=y[t+v*(p*d)+w*d+i]),u[t+n+r+i]=k}}}}return{dataId:o.write(u,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},IS=Fw(jn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),NS={kernelName:jn,backendName:"cpu",kernelFunc:IS},SS=Xw((e=>1/Math.sqrt(e))),TS=Dw(qn,SS),CS={kernelName:qn,backendName:"cpu",kernelFunc:TS};function $S(e,t,n,a,r,s,i,o,u,l){const c=[a/r,r],p=e.values,d=t.values;if(0===a)return Os(n,t.dtype);const h=Os(c,t.dtype);h.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=p[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=a/r)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<r;n++)l?h.values[u*r+n]+=d[e*r+n]:h.values[u*r+n]=0===t.rank?d[0]:d[e*r+n]}return h}const ES={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=Js(0,r,i),d=$S(n.bufferSync(r),n.bufferSync(s),i,p,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},AS={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;Aw([a,r,s],"select");const i=a.shape.length,o=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=Ar(r.dtype,s.dtype),p=be(X(r.shape),c);let d=0;const h=0===i||i>1||1===r.shape.length?1:X(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<h;t++)1===o[e]?p[d++]=u[e]:p[d++]=l[e];return n.makeTensorInfo(r.shape,c,p)}},_S=kc,RS=Ic,FS=Fw(Yn,(e=>e>=0?RS*e:_S*(Math.exp(e)-1))),DS={kernelName:Yn,backendName:"cpu",kernelFunc:FS},OS=Fw(ea,(e=>e<0?-1:e>0?1:0)),MS={kernelName:ea,backendName:"cpu",kernelFunc:OS},LS=Fw(Jn,(e=>Math.sin(e))),zS={kernelName:Jn,backendName:"cpu",kernelFunc:LS},PS=Fw(Qn,(e=>Math.sinh(e))),BS={kernelName:Qn,backendName:"cpu",kernelFunc:PS},WS=Math.log(1.1920928955078125e-7)+2,VS=Fw(na,(e=>{const t=e>-WS,n=e<WS,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),US={kernelName:na,backendName:"cpu",kernelFunc:VS},GS={kernelName:sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;Aw([r],"spaceToBatchND");const o=X(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<r.shape.length;++e)u.push([0,0]);const l=oS.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=yc(l.shape,s,o,!1),p=bc(c.length,s.length,!1),d=xc(l.shape,s,o,!1),h=hv({inputs:{x:l},backend:n,attrs:{shape:c}}),f=Tv({inputs:{x:h},backend:n,attrs:{perm:p}}),m=hv({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}};function HS(e,t,n,a,r,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),p=t[1];if(0===u){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[se(n,0),[0,p],se(r,0),l,c]}let d=!0,h=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*p];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++f[n],d=d&&n>=h,h=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=a;for(let e=0;e<o;++e)c[e]=e;return[t,[o,p],n,l,c]}{const t=f[u-1],s=se(n,t*p),d=se(r,t),h=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*p],r=h[n],i=(0===n?0:f[n-1])+r;h[n]++;for(let n=0;n<p;++n)s[i*p+n]=e[t*p+n];d[i]=a[t],c[t]=i}for(let e=0;e<u;++e)if(0===h[e]){const t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=i}return[s,[t,p],d,l,c]}}const jS={kernelName:ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[p,d,h,f,m]=HS(o,a.shape,a.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,a.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function qS(e,t,n,a,r){const s=X(a),i=t[0],o=r.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${a} outputShape= ${u}`);u[c]=e}const p=X(u);if(p!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${p}. inputShape=${a} outputShape=${u}`);const d=a.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*a[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=se(n,i*o);for(let t=0;t<i;++t){let n=0;for(let a=0;a<d;++a)n+=e[t*d+a]*h[a];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],u]}const KS={kernelName:la,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,p]=qS(o,a.shape,a.dtype,i,u);return[n.makeTensorInfo(c,a.dtype,l),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};function XS(e,t,n,a,r,s=!1,i=0){const o=a.length;if(o!==r.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],l=u[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=c;const d=se(n,p.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,p];if(c<=0)throw new Error("segment ids must be >= 0");let h=0,f=1,m=0,g=r[h];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(`Segment id ${g} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);g>m&&d.fill(i,m*l,g*l);for(let t=h;t<f;++t){const n=a[t];if(n<0||n>=u[0])throw new Error(`Bad: indices[${t}] == ${a[t]} out of range [0, ${u[0]})`);for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)d[g*l+e]/=f-h;if(h=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*l,c*l),[d,p]}const YS={kernelName:ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[l,c]=XS(i,a.shape,a.dtype,o,u,!0);return n.makeTensorInfo(c,a.dtype,l)}},ZS={kernelName:pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[l,c]=XS(i,a.shape,a.dtype,o,u);return n.makeTensorInfo(c,a.dtype,l)}},JS={kernelName:da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=Js(0,r,o),h=$S(n.bufferSync(r),n.bufferSync(s),o,d,c,l,u,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,h.dtype,h.values)}},QS={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=ne(i,r.shape)[0],u=Hc(r,s,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const a=Jv({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,a}))}},eT=Xw((e=>Math.sqrt(e))),tT=Fw(aa,(e=>Math.sqrt(e))),nT={kernelName:aa,backendName:"cpu",kernelFunc:tT},aT={kernelName:fa,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,a=t;Aw(n,"square");const r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];s[e]=t*t}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},rT=Ww(((e,t)=>{const n=e-t;return n*n})),sT=ov(ha,rT),iT={kernelName:ha,backendName:"cpu",kernelFunc:sT},oT=Fw(Aa,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),uT={kernelName:Aa,backendName:"cpu",kernelFunc:oT};function lT(e,t,n,a){const r=Os(e,t.dtype);for(let e=0;e<r.size;e++){const s=r.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+a[e];r.set(t.get(...i),...s)}return r}const cT={kernelName:ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=a;Aw(r,"stridedSlice");const{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=fi(r.shape,s,i,o,u,l,c,p,d);let v;if(m)v=hv({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){H(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ti(b,x,w),t=Jv({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=hv({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=lT(h,n.bufferSync(r),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class pT{constructor(e,t,n,a,r,s){this.separator=or(e),this.nGramWidths=t,this.leftPad=or(n),this.rightPad=or(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let i=0;i<r;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(r-(i+1))),c=s-(u+l),p=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[p+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[a+i]=new Uint8Array(d);const h=n[a+i];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[p+t]),m(this.separator);if(c>0){m(e[p+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=a-1,s=se("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=r;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let a=0;this.nGramWidths.forEach((e=>{a+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===a&&(a=1),s[e]=s[e-1]+a}const i=new Array(s[r]);for(let n=0;n<r;++n){const a=t[n];let r=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,a,i,r,u,s),r+=u})),this.preserveShort&&r===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,a,i,r,u,o)}}return[i,s]}}function dT(e,t,n,a,r,s,i,o){return new pT(n,a,r,s,i,o).compute(e,t)}const hT={kernelName:ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=a,{data:c,dataSplits:p}=t,d=n.data.get(c.dataId).values,h=n.data.get(p.dataId).values,[f,m]=dT(d,h,r,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};function fT(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function mT(e,t,n){const a=e.length,r=[];let s=0,i=0;const o=new Array(a);for(let u=0;u<a;++u){const a=r.length;fT(e[u],t,n,r);const l=r.length-a;o[u]=l,s+=l,i=Math.max(i,l)}const u=se("int32",2*s),l=new Array(s),c=[a,i];let p=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)u[2*p]=e,u[2*p+1]=t,l[p]=r[p],++p;return[u,l,c]}const gT={kernelName:ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,p]=mT(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};function yT(e,t){const n=se("int32",e.length);for(let a=0;a<e.length;++a)n[a]=ar(e[a]).modulo(t).getLowBitsUnsigned();return n}const bT={kernelName:ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=yT(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",i)}},xT=Fw(wa,(e=>Math.tan(e))),wT={kernelName:wa,backendName:"cpu",kernelFunc:xT},vT=Fw(va,(e=>Math.tanh(e)));function kT(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const a=Os(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const s=e.locToIndex(r);a.values[t]=e.values[s]}return a}const IT=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function NT(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(s-r/2);NT(e,t,Math.max(n,Math.floor(t-s*o/r+u)),Math.min(a,Math.floor(t+(r-s)*o/r+u)))}const r=e[t];let s=n,i=a;for(G(e,n,t),IT(e[a],r)>0&&G(e,n,a);s<i;){for(G(e,s,i),s++,i--;IT(e[s],r)<0;)s+=1;for(;IT(e[i],r)>0;)i-=1}0===IT(e[n],r)?G(e,n,i):(i+=1,G(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function ST(e,t,n,a,r){const s=t[t.length-1],[i,o]=[e.length/s,s],u=re(n,i*a),l=re("int32",i*a);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),a<i.length&&(NT(i,a),i=i.slice(0,a)),r&&i.sort(IT);const c=t*a,p=u.subarray(c,c+a),d=l.subarray(c,c+a);for(let e=0;e<a;e++)p[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=a,[Os(c,n,u),Os(c,"int32",l)]}const TT={kernelName:Na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,p,d,h]=r.shape,[f,m]=null!=l?l:[p,d],g=[c,f,m,h],y=fe(r.shape),b=y[0],x=y[1],w=y[2],v=re(r.dtype,X(g));v.fill(u);const k=a.data.get(r.dataId).values,I=a.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let a=0;a<m;++a)for(let r=0;r<h;++r){let s;const l=t[6]*a+t[7]*n+1;if(0===l)continue;const c=(t[0]*a+t[1]*n+t[2])/l,h=(t[3]*a+t[4]*n+t[5])/l,f=CT(c,d,o),m=CT(h,p,o);switch(i){case"nearest":s=ET(k,p,d,b,x,w,e,m,f,r,u);break;case"bilinear":s=AT(k,p,d,b,x,w,e,m,f,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*b+n*x+a*w+r]=s}return a.makeTensorInfo(g,r.dtype,v)}return{dataId:a.write(v,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function CT(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return V(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return V(0,n,t-1)}(e,t);case"nearest":return function(e,t){return V(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function $T(e,t,n,a,r,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*a+o*r+u*s+l]:c}function ET(e,t,n,a,r,s,i,o,u,l,c){return $T(e,t,n,a,r,s,i,Math.round(o),Math.round(u),l,c)}function AT(e,t,n,a,r,s,i,o,u,l,c){const p=Math.floor(o),d=Math.floor(u),h=p+1,f=d+1;return(h-o)*((f-u)*$T(e,t,n,a,r,s,i,p,d,l,c)+(u-d)*$T(e,t,n,a,r,s,i,p,f,l,c))+(o-p)*((f-u)*$T(e,t,n,a,r,s,i,h,d,l,c)+(u-d)*$T(e,t,n,a,r,s,i,h,f,l,c))}function _T(e,t,n,a){const r=ne(t,n)[0],s=[1,n[0],1];for(let e=0;e<r;e++)s[0]*=n[e];s[1]=n[r];for(let e=r+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[r]),u=new yr(s,a,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)e.push(u.get(n,t,a));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const p=s.slice();p[1]=Object.keys(i).length;const d=new yr(p,a);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(u.get(n,e,a),n,t,a)}));const h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:o}}const RT={kernelName:$a,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;Aw(r,"unsortedSegmentSum");const o=[],u=[],l=r.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=oI({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=rr(e,"int32"),a=n.makeTensorInfo([],"int32",t),s=Kk({inputs:{a,b:c},backend:n}),i=sv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=Wk({inputs:{a:i,b:r},backend:n}),p=Uk({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),u.push(a),u.push(s),u.push(i),u.push(l),u.push(p)}const p=sS({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},FT=[yv,xv,vv,Iv,dv,Nv,$v,Ev,Av,_v,Fv,Ov,Lv,Bv,Vv,jv,qv,Kv,Xv,gv,Yv,ek,ak,rk,iv,ok,lk,tv,ck,mk,bk,xk,yk,vk,kk,wk,Nk,Tk,Ck,$k,Ek,Ak,Rk,Fk,Dk,Ok,Mk,zk,Lk,fI,Hk,Mw,jk,Xk,aI,iI,uI,pI,kI,NI,SI,$I,_I,RI,FI,OI,LI,BI,UI,zw,GI,hk,jI,KI,YI,Bw,QI,nN,rN,oN,lN,dN,fN,yN,bN,xN,SN,TN,CN,$N,EN,AN,kN,_N,RN,ON,MN,PN,UN,Vk,HN,qN,XN,ZN,eS,tS,rS,iS,oS,cS,Gw,dS,fS,rv,gS,jw,Kw,fv,yS,bS,xS,wS,vS,kS,NS,CS,ES,AS,DS,Jw,MS,zS,BS,Qv,VN,US,GS,jS,KS,YS,ZS,JS,QS,nT,aT,iT,uT,cT,hT,gT,bT,bI,Gk,wT,{kernelName:va,backendName:"cpu",kernelFunc:vT},{kernelName:ka,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;Aw(r,"tile");const i=kT(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;Aw(r,"topk");const o=n.data.get(r.dataId).values,[u,l]=ST(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},Cv,TT,{kernelName:Ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;Aw(s,"unique");const i=a.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=_T(i,r,s.shape,s.dtype);return[a.makeTensorInfo(u,s.dtype,o),a.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r.shape.length,o=r.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=r.shape[e]);const c=new Array(i).fill(0),p=r.shape.slice();p[s]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[s]=e;const t=Jv({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});d[e]=hv({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},RT,aS];for(const e of FT)Wa(e);const DT={},OT={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function MT(e){if(!(e in DT)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete DT[e]}),!1),1===e?t.getContext("webgl",OT)||t.getContext("experimental-webgl",OT):t.getContext("webgl2",OT)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;DT[e]=t}const t=DT[e];return t.isContextLost()?(delete DT[e],MT(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),DT[e])}var LT,zT,PT;function BT(e,t){return[t,e]}function WT(e){const t=X(e);return J(Math.ceil(t/4))}function VT(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function UT(e,t){const n=e;let a,r,s,i,o,u,l,c,p,d;return 2===$e().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),u=e.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function GT(e,t){const n=t();return $e().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function HT(e){return!!($e().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function jT(e,t){return eC(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(LT||(LT={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(zT||(zT={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(PT||(PT={}));const qT=/ERROR: [0-9]+:([0-9]+):/g;function KT(e,t){if(GT(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function XT(e,t,n,a,r,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(GT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),GT(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i))),GT(e,(()=>e.enableVertexAttribArray(o))),!0)}function YT(e,t,n,a){GT(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),GT(e,(()=>e.activeTexture(e.TEXTURE0+n))),GT(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),GT(e,(()=>e.uniform1i(n,a)))}function ZT(e,t,n){GT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),GT(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function JT(e,t){GT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),GT(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function QT(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function eC(e,t,n){const a=GT(e,(()=>t()));if(null==a)throw new Error(n);return a}function tC(e,t=2){return X(e.slice(0,e.length-t))}function nC(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function aC(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[tC(e),...nC(e)]),t}function rC(e){return e%2==0}function sC(e,t){if(Y(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],a=t.slice(-1)[0];if(n===a)return!0;if(rC(n)&&rC(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&rC(e[0])&&rC(t[0])}let iC,oC;function uC(e,t){return null!=e.getExtension(t)}function lC(e){try{if(null!=MT(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function cC(e){const t=UT(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function pC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&H("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const dC=$e();function hC(){let e,t,n,a,r,s,i,o,u,l;return 2===$e().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function fC(e,t,n="index"){const a=fe(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function mC(e,t,n="index"){const a=fe(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function gC(e){const t=fe(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}dC.registerFlag("HAS_WEBGL",(()=>dC.getNumber("WEBGL_VERSION")>0)),dC.registerFlag("WEBGL_VERSION",(()=>lC(2)?2:lC(1)?1:0)),dC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),dC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===dC.get("WEBGL_VERSION"))),dC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),dC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),dC.registerFlag("WEBGL_PACK",(()=>dC.getBool("HAS_WEBGL"))),dC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_PACK_CLIP",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_PACK_REDUCE",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_CONV_IM2COL",(()=>dC.getBool("WEBGL_PACK"))),dC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==iC){const t=MT(e);iC=t.getParameter(t.MAX_TEXTURE_SIZE)}return iC}(dC.getNumber("WEBGL_VERSION")))),dC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==oC){const t=MT(e);oC=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,oC)}(dC.getNumber("WEBGL_VERSION")))),dC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=dC.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=MT(e);return t=uC(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:uC(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),dC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>dC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Vr())),dC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=MT(e);if(1===e){if(!uC(t,"OES_texture_float"))return!1}else if(!uC(t,"EXT_color_buffer_float"))return!1;return cC(t)}(dC.getNumber("WEBGL_VERSION")))),dC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!dC.getBool("WEBGL_FORCE_F16_TEXTURES")&&dC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),dC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=MT(e);if(1!==e){if(uC(t,"EXT_color_buffer_float"))return cC(t);const e="EXT_color_buffer_half_float";if(uC(t,e)){const n=t.getExtension(e);return function(e,t){const n=UT(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(r),s}(t,n)}return!1}return!!uC(t,"OES_texture_float")&&!!uC(t,"WEBGL_color_buffer_float")&&cC(t)}(dC.getNumber("WEBGL_VERSION")))),dC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=dC.getNumber("WEBGL_VERSION"))&&null!=MT(e).fenceSync;var e})),dC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>dC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),dC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),dC.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Vr()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),dC.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),dC.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),dC.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),dC.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const yC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:bC}=a;function xC(e,t,n){const a=[];if(e.forEach((e=>{const t=X(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=EC(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=a.join("\n"),s=e.map((e=>function(e,t,n=!1,a){let r="";r+=n?vC(e,a):wC(e,a);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=bC(e.shapeInfo.logicalShape,t.logicalShape),u=$C(i),l=i-s;let c;const p=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${p[e+l]} = 0;`)).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+l]}`)).join(", ");let h="return outputValue;";const f=1===X(e.shapeInfo.logicalShape),m=1===X(t.logicalShape);if(1!==s||f||m){if(f&&!m)h=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?h="return vec4(outputValue.x);":o.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${a}(${d});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&Y(i,s))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=$C(u),c=bC(e.shapeInfo.logicalShape,t.logicalShape),p=u-o;let d;const h=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${h[e+p]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+p]}`)).join(", "),`\n    float ${r}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${a}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=hC(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${kC}\n    ${IC}\n    ${NC}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Y(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return Y(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${mC(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const a=fC(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${mC(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const a=fC(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=fC(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=fC(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(p+=SC),[p,u,c,r,l,s,n.userCode].join("\n")}function wC(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=TC(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${CC(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=TC(n);return 1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&Y(n,s)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=ae(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${wC(AC(e,u),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${_C(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${CC(e)}\n      }\n    `;const l=s[0],c=s[1],p=TC(a);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===l?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=ae(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${wC(AC(e,l),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${_C(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${CC(e)}\n      }\n    `;const c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===s&&null==h)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(d===i&&null==h)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const f=TC(a);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=ae(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${wC(AC(e,u),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${_C(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${CC(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(h===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(h===s&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const y=TC(a);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=ae(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${wC(AC(e,u))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${_C(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${r})) +\n          depth3;\n        ${CC(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===o&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===r&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${r} + depth3 + ${TC(n)};\n      vec2 uv = uvFromFlat(${d}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=ae(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${wC(AC(e,r))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${_C(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${CC(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===c&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${TC(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function vC(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${hC().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=hC();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=hC();if(null!=s&&Y(n,s))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${u.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${a}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=["b","row","col"];return`\n        ${vC(AC(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${_C(s,a)});\n        }\n      `}const o=hC();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=hC();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],p=Math.ceil(s[i-1]/2);let d=p*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<i-1;e++)h=`int b${e}, `+h,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${a}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const kC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",IC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",NC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",SC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function TC(e){return`offset${e}`}function CC(e){const t=e.name,n=X(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function $C(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function EC(e,t,n){const{newShape:a,keptDims:r}=ae(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):a,u=!e&&s>1&&!Y(t,n)&&a.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function AC(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function _C(e,t){return t.map((t=>e[t])).join(", ")}function RC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!Y(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!Y(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function FC(e){return $e().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class DC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=LT.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=hC();this.outputShape=e,this.enableShapeUniforms=FC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?mC(["r","c","d"],e):fC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class OC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=LT.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=hC();this.outputShape=e,this.enableShapeUniforms=FC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?mC(["r","c","d"],e):fC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class MC{constructor(e){this.variableNames=["A"],this.outTexUsage=zT.DOWNLOAD;const t=hC();this.outputShape=e,this.userCode=`\n      ${yC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class LC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=zT.DOWNLOAD;const t=hC();this.outputShape=e,this.userCode=`\n      ${yC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class zC{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=hC();this.outputShape=e,this.enableShapeUniforms=FC(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":gC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class PC{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=hC();this.outputShape=e,this.enableShapeUniforms=FC(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const s=2*t+r;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":gC(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${r};\n        }\n    `}}function BC(e,t,n,a,r,s){!function(e,t){const n=$e().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return eC(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return GT(e,(()=>e.bindTexture(o,i))),GT(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),GT(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),GT(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),GT(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),GT(e,(()=>e.texImage2D(o,0,a,t,n,0,r,s,null))),GT(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function WC(e){return e.internalFormatFloat}function VC(e){return e.internalFormatHalfFloat}function UC(e){return e.downloadTextureFormat}function GC(e){return e.internalFormatPackedFloat}function HC(e){return e.internalFormatPackedHalfFloat}class jC{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=$e().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){DT[e]=t}(t,e)):this.gl=MT(t);let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(1===$e().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=jT(this.gl,e),uC(this.gl,t))this.textureHalfFloatExtension=jT(this.gl,t);else if($e().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),uC(this.gl,a))this.colorBufferHalfFloatExtension=jT(this.gl,a);else if($e().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",uC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!uC(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=function(e){return function(e,t){const n=eC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return GT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),GT(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=eC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return GT(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),GT(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return eC(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=UT(this.gl,this.textureHalfFloatExtension)}get debug(){return $e().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;GT(e,(()=>e.finish())),GT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),GT(e,(()=>e.deleteFramebuffer(this.framebuffer))),GT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),GT(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),GT(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=BT(t,n);return BC(e,r,s,WC(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=BT(t,n);return BC(e,r,s,VC(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=BT(t,n);return BC(e,r,s,UC(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){GT(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?GT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):GT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),GT(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let i,o,u;GT(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(r),GT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,a,0,e.RGBA,o,i))),GT(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=VT(t,n);return BC(e,r,s,HC(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=VT(t,n);return BC(e,r,s,GC(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(JT(this.gl,this.framebuffer),this.outputTexture=null),GT(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=BT(t,n),i=new Uint8Array(t*n*4);return GT(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return function(e,t,n,a,r,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,a]=VT(e,t);return n*a*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const r=e.createBuffer();GT(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return GT(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),GT(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),GT(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if($e().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return GT(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=eC(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(GT(e,(()=>e.shaderSource(n,t))),GT(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=qT.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,i=r.map(((e,t)=>Q((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,a-1),l=i.slice(a-1,a),c=i.slice(a);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Q(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=hC();return function(e,t){const n=eC(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(GT(e,(()=>e.shaderSource(n,t))),GT(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const a=function(e){return eC(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return GT(t,(()=>t.attachShader(a,this.vertexShader))),GT(t,(()=>t.attachShader(a,n))),function(e,t){if(GT(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&KT(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return GT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),XT(e,t,"clipSpacePos",n,3,20,0)&&XT(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&GT(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&KT(this.gl,this.program),GT(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return eC(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),GT(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),YT(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=VT(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&KT(this.gl,this.program),QT(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),GT(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),GT(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=jT(this.gl,2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ee((()=>this.disposed||this.isQueryAvailable(e,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ee((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ZT(this.gl,e,this.framebuffer),this.debug&&QT(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(ZT(this.gl,this.outputTexture,this.framebuffer),this.debug&&QT(this.gl)):JT(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;ZT(a,e,this.framebuffer),this.debug&&QT(a),this.outputTexture=e,GT(a,(()=>a.viewport(0,0,t,n))),GT(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),GT(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:qC,bincountImpl:KC,bincountReduceImpl:XC,ceilImpl:YC,concatImpl:ZC,equalImpl:JC,expImpl:QC,expm1Impl:e$,floorImpl:t$,gatherNdImpl:n$,gatherV2Impl:a$,greaterImpl:r$,greaterEqualImpl:s$,lessImpl:i$,lessEqualImpl:o$,linSpaceImpl:u$,logImpl:l$,maxImpl:c$,maximumImpl:p$,minimumImpl:d$,multiplyImpl:h$,negImpl:f$,notEqualImpl:m$,prodImpl:g$,rangeImpl:y$,rsqrtImpl:b$,sigmoidImpl:x$,simpleAbsImpl:w$,sliceImpl:v$,sparseFillEmptyRowsImpl:k$,sparseReshapeImpl:I$,sparseSegmentReductionImpl:N$,sqrtImpl:S$,stridedSliceImpl:T$,stringNGramsImpl:C$,stringSplitImpl:$$,stringToHashBucketFastImpl:E$,subImpl:A$,tileImpl:_$,topKImpl:R$,transposeImpl:F$,uniqueImpl:D$}=I;function O$(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function M$(e,t){return 1===t?[e]:O$(e,t)}class L${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=M$("rc",t),a=$C(t),r=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let a="";for(let r=e-2;r<e;r++)a+=`${n[r]} >= ${t[r]}`,r<e-1&&(a+="||");return a}(t,e,n),s=function(e,t,n,a){if(1===e)return"";const r=a.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,a=function(e,t){const n=[];for(let a=0;a<=1;a++)for(let r=0;r<=1;r++){let s=`${0===a?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${a[0]}),\n          cEdge ? 0. : getA(${a[1]}),\n          rEdge ? 0. : getA(${a[2]}),\n          rEdge || cEdge ? 0. : getA(${a[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${a} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class z${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=FC(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var a,r;this.userCode=`\n      ${a=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const a=function(e,t){const n=e.length,a=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=a[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${a[e+1]})`;return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${a[r]}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}(["r","c","d"],"inputShape"):fC(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":gC(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class P${constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const a=W$(t,n),r=V$(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=B$(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return a===PT.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===PT.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===PT.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===PT.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===PT.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=W$(n,a),s=V$(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const i=B$(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=$e().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function B$(e,t,n,a,r){const s=function(e,t){switch(e){case PT.PACKED_2X2_FLOAT32:return GC(t);case PT.PACKED_2X2_FLOAT16:return HC(t);case PT.UNPACKED_FLOAT32:return WC(t);case PT.UNPACKED_FLOAT16:return VC(t);case PT.PACKED_4X1_UNSIGNED_BYTE:return UC(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);let i;if(r){const[t,n]=VT(e[0],e[1]);i=t*n}else{const[t,n]=BT(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function W$(e,t){if(e===zT.UPLOAD)return PT.PACKED_2X2_FLOAT32;if(e===zT.RENDER||null==e)return function(e){return $e().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?PT.PACKED_2X2_FLOAT32:PT.UNPACKED_FLOAT32:e?PT.PACKED_2X2_FLOAT16:PT.UNPACKED_FLOAT16}(t);if(e===zT.DOWNLOAD||e===zT.PIXELS)return PT.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function V$(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class U${constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=FC(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const G$="return abs(x);",H$="return x;";class j${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=FC(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class q${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=M$("rc",t),a=$C(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const K$=Zc,X$={},Y$=$e().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Z$ extends P{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!$e().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=MT($e().getNumber("WEBGL_VERSION"));this.binaryCache=((t=$e().getNumber("WEBGL_VERSION"))in X$||(X$[t]={}),X$[t]),this.gpgpu=new jC(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new P$(this.gpgpu),this.numMBBeforeWarning=null==$e().global.screen?1024:$e().global.screen.height*$e().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new z(this,xi())}nextDataId(){return Z$.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(($e().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$e().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:zT.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,r){if($e().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:zT.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new j$(i,H$):new U$(i,H$);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=ir()),c="complex64"===a?Ac(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=ir()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new j$(a,H$):new U$(a,H$);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!$e().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===$e().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&$e().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...WT(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Ac(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=X(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;GT(e,(()=>e.deleteBuffer(c)))}const p=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&xi().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Os(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!HT(n)){if($e().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=X(t);if($e().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture,...WT(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=$e().getBool("WEBGL_PACK")&&!0===a,i=s?aC(t):t,o=s?new LC(i):new MC(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=K(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=K(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if($e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ir(),endMs:null}}endTimer(e){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ir(),e)}async getQueryTime(e){if($e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Y$){return $e().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&X(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Ne("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return K$(e.shape,t)}packedUnaryOp(e,t,n){const a=new j$(e.shape,t),r=this.compileAndRun(a,[e],n);return xi().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=w$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if($e().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,G$,e.dtype);const t=new U$(e.shape,G$),n=this.compileAndRun(t,[e]);return xi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&le(n[0])){const r=n.map((e=>or(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:a}=this.makeTensorInfo(e,t,n);return xi().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){const t=new q$(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new L$(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[tC(e.shape),...nC(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[tC(t),...nC(t)],s=new z$(r,n),i=[n],o=this.runWebGLProgram(s,[a],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:a,dtype:r}=t,s=aC(a);let i;const o=WT(s);i=n?new OC(s):new DC(s);const u=[o];return{dtype:r,shape:a,dataId:this.runWebGLProgram(i,[{shape:s,dtype:r,dataId:e}],r,u,!0).dataId}}runWebGLProgram(e,t,n,a,r=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===LT.DENSE){const t=WT(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===X(s.shape))return i.values=re(s.dtype,0),s;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&X(t.shape)<=$e().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!sC(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),o.push(t),n=this.texData.get(t.dataId),e.shape=a}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=EC(e.packedInputs,t.shape,s);let l="",c="",p="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=fe(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,h=2===o.length&&Y(t.shape,s),f=1===X(t.shape),m=yo(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&Y(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;a+=`${d}_${g}_${i?u:""}_${o.length}_${f}_${m}_${h}_${l}_${c}_${p}_${y}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+`${$e().getNumber("WEBGL_VERSION")}`,s}(e,u,l),p=this.getAndSaveBinary(c,(()=>function(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=xC(r,i,t),u=e.createProgram(o);let l=null;const c=e.getUniformLocation(u,"NAN",!1);1===$e().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(u,"INFINITY",!1));const p=!1,d={},h={},f={};for(let n=0;n<t.variableNames.length;n++){const a=t.variableNames[n];d[a]=e.getUniformLocation(u,a,p),d[`offset${a}`]=e.getUniformLocation(u,`offset${a}`,p),t.enableShapeUniforms&&(h[`${a}Shape`]=e.getUniformLocation(u,`${a}Shape`,p),f[`${a}TexShape`]=e.getUniformLocation(u,`${a}TexShape`,p))}let m,g,y;t.enableShapeUniforms&&(m=e.getUniformLocation(u,"outShape",p),y=e.getUniformLocation(u,"outShapeStrides",p),g=e.getUniformLocation(u,"outTexShape",p));const b=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{b[n]=e.getUniformLocation(u,t.name,p)})),{program:t,source:o,webGLProgram:u,uniformLocations:d,customUniformLocations:b,inShapeInfos:s,outShapeInfo:i,infLoc:l,nanLoc:c,inShapesLocations:h,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:y,outTexShapeLocation:g}}(this.gpgpu,e,u,l))),d=null!=this.activeTimers;let h;d&&(h=this.startTimer()),function(e,t,n,a,r){t.program.enableShapeUniforms||(RC(t.inShapeInfos,n),RC([t.outShapeInfo],[a]));const s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===$e().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,a)=>{const r=t.program.variableNames[a],s=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],u=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:a}=EC(t.program.packedInputs,n.shape,n.texData.texShape);switch(a.length){case 1:e.gl.uniform1iv(o,new Int32Array(a));break;case 2:e.gl.uniform2iv(o,new Int32Array(a));break;case 3:e.gl.uniform3iv(o,new Int32Array(a));break;case 4:e.gl.uniform4iv(o,new Int32Array(a))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(X(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,a)}));const o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=fe(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,a)=>{const s=t.customUniformLocations[a],i=r[a];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,p,u,l,a),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));const f=$e().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=ir();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!$e().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,a,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($e().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=vi((()=>{if(!$e().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=$e().getBool("DEBUG");$e().set("DEBUG",!1);const t=this.abs(Ti(1e-8)).dataSync()[0];if($e().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=ir());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=$e().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?U(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=ae(e);e=t.newShape}let a=X(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=tC(e);let n=2,r=2;return e.length&&([n,r]=nC(e)),a=t*(n/2)*(r/2),J(a).map((e=>2*e))}return J(a)}(n,o),t.texShape=c),null!=r){const e=aC(n);let s,i=c[1],p=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;o?([i,p]=VT(c[0],c[1]),s=new PC(e,d)):s=new zC(e,d);const h=this.makeTensorInfo([p,i],a);this.texData.get(h.dataId).usage=d?zT.PIXELS:zT.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(h.dataId),i,p,r);const f=[[p,i]],m=!0,g=this.runWebGLProgram(s,[h],a,f,m),y=this.texData.get(g.dataId);t.texture=y.texture,t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,this.disposeIntermediateTensorInfo(h),this.texData.delete(g.dataId),t.values=null,u&&(this.uploadWaitMs+=ir()-l)}else{const e=this.acquireTexture(c,i,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*ue(t)}}Z$.nextDataId=0,Ur()&&Ni("webgl",(()=>new Z$),2);class J${constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=xo(t,n),this.enableShapeUniforms=FC(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Q${constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=xo(t,n);const r=this.outputShape.length;this.enableShapeUniforms=FC(r);let s="";if(a)if(0===r||1===X(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${$C(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=M$("coords",r);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function eE(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const tE={kernelName:Ht,backendName:"webgl",kernelFunc:eE};function nE(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=eE({inputs:{x:a},backend:n}),u=eE({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const aE={kernelName:rt,backendName:"webgl",kernelFunc:nE},rE="return (a < 0.) ? b * a : a;",sE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",iE={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",rr(s,"float32")),o=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Q$(sE,r.shape,i.shape):new J$(rE,r.shape,i.shape),u=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},oE="return (a < 0.) ? b * a : a;",uE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",lE={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Q$(uE,a.shape,r.shape):new J$(oE,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}};function cE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:s})=>{const{x:i}=r,o=s,u=a||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new j$(i.shape,t):new U$(i.shape,e),o.runWebGLProgram(l,[i],u)}}function pE({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(a&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:a.dataId,dtype:a.dtype,shape:l.shape},i=new J$(e,u.shape,l.shape);return c.runWebGLProgram(i,[r,s],Ar(n.dtype,a.dtype))})),s=nE({inputs:{real:a,imag:r},backend:c});return c.disposeIntermediateTensorInfo(a),c.disposeIntermediateTensorInfo(r),s}const p=s||Ar(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=r){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Xc(e):e,a="string"===u.dtype?Xc(t):t,[s,i]=r(u.shape,l.shape,n,a,p),o=c.makeTensorInfo(i,p);return c.texData.get(o.dataId).values=s,o}let d;return d=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Q$(t,u.shape,l.shape,n):new J$(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],p)}}function dE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?uE:oE;if("leakyrelu"===e)return t?sE:rE;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class hE{constructor(e,t,n,a=!1,r=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=FC(this.outputShape.length);const l=a?e[1]:e[2],c=Math.ceil(l/2),p=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class fE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=xo(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const mE="return a * b;";function gE(e){const{inputs:t,backend:n}=e,{a,b:r}=t,s=Ar(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new fE("return areal * breal - aimag * bimag;",a.shape,r.shape),i=new fE("return areal * bimag + aimag * breal;",a.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=nE({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[i,o]=h$(a.shape,r.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Q$(mE,a.shape,r.shape):new J$(mE,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}const yE={kernelName:kn,backendName:"webgl",kernelFunc:gE};function bE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=X(r.shape),u=te(s,o),l=X(u);H(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||sC(r.shape,u)||null!==c.texture&&sC(c.shape,u)?(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype}):function(e,t,n){const a=[tC(e.shape),...nC(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[tC(t),...nC(t)],i=new z$(s,a),o=[a],u=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,u,i)}const xE={kernelName:Pn,backendName:"webgl",kernelFunc:bE};class wE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${Z(e)?e.toPrecision(2):e}, ones);`}let l="";r%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class vE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}function kE(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=mc(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:u,outSize:l}=r[i];let c,p;c="mean"===n?0===i?new wE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new wE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new vE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),p=s,s=a.runWebGLProgram(c,[s],t),p.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(p)}return s}class IE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const a=$C(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class NE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=$C(this.rank),r=O$("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=r[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function SE(e,t,n){const a=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NE(e.shape,t):new IE(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function TE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){const r=t,s=e.shape.length,i=ne(r,e.shape);let o=i;const u=Yo(o,s),l=null!=u;let c=e;l&&(c=SE(e,u,a),o=Jo(o.length,s)),Xo("sum",o,s);const[p,d]=qo(c.shape,o);let h=p;n&&(h=Ko(p,i));const f=X(d),m=bE({inputs:{x:c},attrs:{shape:[X(e.shape)/f,f]},backend:a}),g=kE(m,_r(e.dtype),"sum",a),y=bE({inputs:{x:g},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(c),y}(r,s,i,n)}const CE={kernelName:ra,backendName:"webgl",kernelFunc:TE};function $E(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=r.shape[s[e]];let l;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=F$(e,r.shape,r.dtype,s,u);l=i.makeTensorInfo(u,r.dtype),i.texData.get(l.dataId).values=t}else l=SE(r,s,i);return l}const EE={kernelName:Sa,backendName:"webgl",kernelFunc:$E};function AE({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],d=a?t.shape[c-1]:t.shape[c-2],h=n?e.shape[l-1]:e.shape[l-2],f=a?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=X(m),b=X(g);H(l>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,f]);H(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const w=n?[y,p,h]:[y,h,p],v=a?[b,f,d]:[b,d,f],k=bE({inputs:{x:e},backend:r,attrs:{shape:w}}),I=bE({inputs:{x:t},backend:r,attrs:{shape:v}}),N=[k,I],S=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=s,$=null!=i,E="leakyrelu"===u,A=null!=u?dE(u,!0):null;let _;if((1===h||1===f)&&T>1e3&&!1===(C||$||E||null!=A)){let e=k,t=I;n&&(e=$E({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),a&&(t=$E({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const s=1===f;let i=e;1!==f&&(i=bE({inputs:{x:e},backend:r,attrs:{shape:[S,T,1]}}),N.push(i));const o=1===f?2:1;let u=t;s&&(u=bE({inputs:{x:t},backend:r,attrs:{shape:[S,1,T]}}),N.push(u));const l=gE({inputs:{a:i,b:u},backend:r});_=TE({inputs:{x:l},backend:r,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const u=Ar(e.dtype,t.dtype),l=new hE(w,v,[S,h,f],n,a,C,A,$,E),c=[k,I];if(null!=s&&c.push(s),$&&c.push(i),E){const e=r.makeTensorInfo([],"float32",rr(o,"float32"));c.push(e),N.push(e)}_=r.runWebGLProgram(l,c,u)}const R=bE({inputs:{x:_},backend:r,attrs:{shape:x}});N.push(_);for(const e of N)r.disposeIntermediateTensorInfo(e);return R}const _E={kernelName:Fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=a;return AE({a:r,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:c})}},RE="return abs(x);",FE={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=w$(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new j$(a.shape,RE):new U$(a.shape,RE),n.runWebGLProgram(r,[a],a.dtype)}},DE=cE({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),OE={kernelName:De,backendName:"webgl",kernelFunc:DE},ME=cE({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),LE={kernelName:Oe,backendName:"webgl",kernelFunc:ME},zE="return a + b;",PE=pE({opSnippet:zE,packedOpSnippet:zE,supportsComplex:!0,cpuKernelImpl:qC}),BE={kernelName:Me,backendName:"webgl",kernelFunc:PE};class WE{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}class VE{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}const UE={kernelName:Le,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return eE({inputs:{x:r[0]},backend:a});if(r.length>$e().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>Ar(e,t))),i=r.map((e=>e.shape)),o=$e().getBool("WEBGL_PACK")?new VE(r[0].shape,i):new WE(r[0].shape,i);return a.runWebGLProgram(o,r,s)}},GE={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,u=ne(s,r.shape);let l=u;const c=Yo(l,o);let p=r;null!=c&&(p=$E({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Jo(l.length,o)),Xo("all",l,o);const[d,h]=qo(p.shape,l),f=bE({inputs:{x:p},backend:n,attrs:{shape:[-1,X(h)]}}),m=kE(f,f.dtype,"all",n);let g;return g=bE(i?{inputs:{x:m},backend:n,attrs:{shape:Ko(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}},HE={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,u=ne(s,r.shape);let l=u;const c=Yo(l,o);let p=r;null!=c&&(p=$E({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Jo(l.length,o)),Xo("any",l,o);const[d,h]=qo(p.shape,l),f=bE({inputs:{x:p},backend:n,attrs:{shape:[-1,X(h)]}}),m=kE(f,f.dtype,"any",n);let g;return g=bE(i?{inputs:{x:m},backend:n,attrs:{shape:Ko(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}};class jE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class qE{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,H(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=$C(o),l=M$("coords",o);let c,p;if(1===s){p=o+1;const e=$C(p);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else p=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map((e=>"int "+e)),m=M$("sourceLocR",p-1).concat("inIdx.r"),g=M$("sourceLocG",p-1).concat("inIdx.g"),y=M$("sourceLocB",p-1).concat("inIdx.b"),b=M$("sourceLocA",p-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function KE(e,t,n,a=null){let r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const i=mc(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},u=new jE(o,n,null==a),l=[t];null!=a&&l.push(a);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const p=KE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function XE(e,t,n,a=null){const r=null!=a?a.shape:t.shape,s=mc(r[r.length-1]),i=new qE(r,s,n,null==a),o=null==a?[t]:[t,a],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const a=XE(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function YE(e,t,n,a){const r=[n];if(Xo("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!$e().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=qo(i.shape,r),l=X(u),c=bE({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const p=KE(e,c,a);n.push(p);const d=bE({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return XE(e,t,a)}const ZE={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=ne(s,r.shape);const o=Yo(i,r.shape.length);let u=r;const l=[];null!=o&&(u=$E({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=Jo(i.length,u.shape.length)),Xo("argMax",[i[0]],u.shape.length);const c=YE(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},JE={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=ne(s,r.shape);const o=Yo(i,r.shape.length);let u=r;const l=[];null!=o&&(u=$E({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=Jo(i.length,u.shape.length)),Xo("argMin",[i[0]],u.shape.length);const c=YE(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},QE=cE({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),eA={kernelName:Ve,backendName:"webgl",kernelFunc:QE},tA=cE({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),nA={kernelName:Ue,backendName:"webgl",kernelFunc:tA},aA=cE({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),rA={kernelName:Ge,backendName:"webgl",kernelFunc:aA},sA=pE({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),iA={kernelName:je,backendName:"webgl",kernelFunc:sA},oA=cE({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),uA={kernelName:He,backendName:"webgl",kernelFunc:oA};class lA{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?r?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),w=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class cA{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const pA={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;pC(r,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=a;H(Gi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Di(r.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&Y(l.inShape,l.outShape))return eE({inputs:{x:r},backend:n});const c=new lA(l,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},dA={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=a,c=Oi(r.shape,s,i,[1,1,1],o,u,l),p=new cA(c,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}};class hA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const mA={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=a,p=Oi(i.shape,o,u,[1,1,1],l,c),d=new fA(p);return n.runWebGLProgram(d,[r],i.dtype)}},gA={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;pC([r,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=a,c=Di(i.shape,o,u,1,l),p=new hA(c);return n.runWebGLProgram(p,[r],i.dtype)}},yA={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return AE({a:r,b:s,transposeA:i,transposeB:o,backend:n})}};class bA{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],xo(e,t),xo(e,n);let i="0.0";null!=a&&(xo(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(xo(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class xA{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],xo(e,t),xo(e,n);let i="vec4(0.0)";null!=a&&(xo(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(xo(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const wA={kernelName:Bt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:r,variance:s,offset:i,scale:o}=e;H(r.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),H(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),H(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[a,r,s];let c=null;null!=i&&(c=i.shape,l.push(i));let p=null;null!=o&&(p=o.shape,l.push(o));const d=$e().getBool("WEBGL_PACK_NORMALIZATION")?new xA(a.shape,r.shape,s.shape,c,p,u):new bA(a.shape,r.shape,s.shape,c,p,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class vA{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=$C(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return kA.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${kA[t]} = start[${t}] + coords.${kA[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${a}\n        setOutput(getSource(${n}));\n      }\n    `}}const kA=["x","y","z","w","u","v"];class IA{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=$C(this.rank),n=M$("coords",this.rank),a=M$("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${s};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function NA(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,u]=hi(r,s,i);if(Qs(r,o,u),0===X(u))return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=v$(e.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),c=pi(r.shape,o,u);if(l||!c){const e=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new IA(u):new vA(u),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=di(t,fe(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,u+1),s}(r,o,u,n)}const SA={kernelName:Zn,backendName:"webgl",kernelFunc:NA},TA={kernelName:Je,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;H(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=yc(r.shape,s,o),l=bc(u.length,s.length),c=xc(r.shape,s,o),p=wc(i,s.length),d=vc(c,i,s.length),h=[],f=bE({inputs:{x:r},backend:n,attrs:{shape:u}}),m=$E({inputs:{x:f},backend:n,attrs:{perm:l}}),g=bE({inputs:{x:m},backend:n,attrs:{shape:c}}),y=NA({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},CA={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=KC(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},$A={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),o=xo(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},EA=pE({opSnippet:"return float(a != b);",cpuKernelImpl:m$,dtype:"bool"}),AA={kernelName:Nn,backendName:"webgl",kernelFunc:EA};function _A(e){const{inputs:t,backend:n}=e,{input:a}=t;return eE({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const RA={kernelName:Mn,backendName:"webgl",kernelFunc:_A},FA={kernelName:tt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return eE({inputs:{x:s},backend:a});const t=ru(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=nE({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=_A({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!ie(s.dtype,i)){const e=eE({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new U$(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",re("bool",1)),t=EA({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},DA="return ceil(x);",OA=cE({opSnippet:DA,packedOpSnippet:DA,cpuKernelImpl:YC}),MA={kernelName:nt,backendName:"webgl",kernelFunc:OA};class LA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class zA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const PA={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a;let o;o=$e().getBool("WEBGL_PACK_CLIP")?new zA(r.shape):new LA(r.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[r],r.dtype,u)}};class BA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function WA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const VA={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new BA(a.shape),i=[WA(a,r.complexTensorInfos.real),WA(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class UA{constructor(e){this.outputShape=[],this.outputShape=hc(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}const a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class GA{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hc(e,t);const n=this.outputShape,a=n.length,r=$C(a),s=M$("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let p=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];p+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${HA(i,u,t)}),\n            vec2(${HA(l,u,t)}));\n        }`}const d=o.length,h=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${HA(i,u,h)}),\n          vec2(${HA(l,u,h)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[a-1]} = ${s[a-1]} + 1;\n        if (${s[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[a-2]} = ${s[a-2]} + 1;\n        if (${s[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[a-1]} = ${s[a-1]} - 1;\n        if (${s[a-2]} < ${n[a-2]} &&\n            ${s[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function HA(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function jA(e){const{inputs:t,backend:n}=e,{input:a}=t;return eE({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const qA={kernelName:qt,backendName:"webgl",kernelFunc:jA};function KA(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>_A({inputs:{input:e},backend:n}))),r=e.map((e=>jA({inputs:{input:e},backend:n}))),s=KA(a,t,n),i=KA(r,t,n),o=nE({inputs:{real:s,imag:i},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=X(e.shape.slice(t));return bE({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=hc(r.map((e=>e.shape)),1),o=1===r[0].shape[0],u=ZC(s,i,a,o),l=hc(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,a,u);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>$e().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),r=KA(e.slice(0,a),t,n),s=KA(e.slice(a),t,n),i=KA([r,s],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}if($e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new GA(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,a)}const{tensors2D:s,outShape:i}=function(e,t,n){const a=hc(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>bE({inputs:{x:e},attrs:{shape:[-1,X(e.shape.slice(t))]},backend:n}))),outShape:a}}(e,t,n),o=new UA(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,a);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=bE({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function XA(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=ne(r,t[0].shape)[0],i=hc(t.map((e=>e.shape)),s);if(0===X(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>X(e.shape)>0));return 1===o.length?eE({inputs:{x:o[0]},backend:n}):(dc(o.map((e=>e.shape)),s),KA(o,s,n))}const YA={kernelName:it,backendName:"webgl",kernelFunc:XA};class ZA{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class JA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=FC(this.outputShape.length);const{dataFormat:n}=t,a=hC(),r="channelsLast"===n,s=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${a.output} = result;\n      }\n    `}}function e_({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=a.texData.get(e.dataId),c=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,h="channelsLast"===n.dataFormat;let f;const m=[];if((1!==p&&1!==d||!(c>1e3))&&l.isPacked&&h&&null!=l.texture&&u[2]%2!=0&&Y(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),p={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,H(sC(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const h=bE({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(h);const g=AE({a:p,b:h,backend:a,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=a.texData.get(g.dataId);H(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,y.shape=n.outShape,f=eE({inputs:{x:g},backend:a}),f.shape=n.outShape,m.push(g)}else{const l=bE({inputs:{x:e},backend:a,attrs:{shape:[1,h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=bE({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=AE({a:l,b:c,transposeA:!1,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=bE({inputs:{x:p},backend:a,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(p)}for(const e of m)a.disposeIntermediateTensorInfo(e);return f}function t_({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:d,dataFormat:h}=n,f="channelsLast"===h,m=u*l*c,g=d*p,y=[m,g],b=[],x=bE({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),w=bE({inputs:{x:t},backend:a,attrs:{shape:[1,m,X(t.shape)/m]}});b.push(x),b.push(w);const v=new QA(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=a.runWebGLProgram(v,[x],"float32",k),N=bE({inputs:{x:I},backend:a,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(N);const S=null!=r,T=null!=s,C="leakyrelu"===o,$=o?dE(o,!0):null,E=new hE(N.shape,w.shape,[1,g,n.outChannels],!0,!1,S,$,T,C),A=[N,w];if(r&&A.push(r),T&&A.push(s),C){const e=a.makeTensorInfo([],"float32",rr(i,"float32"));A.push(e),b.push(e)}const _=a.runWebGLProgram(E,A,"float32"),R=bE({inputs:{x:_},backend:a,attrs:{shape:f?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});b.push(_);for(const e of b)a.disposeIntermediateTensorInfo(e);return R}const n_={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=a,p=Hi(u),d=Mi(r.shape,s.shape,i,l,o,c,!1,p);let h;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if($e().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])h=t_({x:r,filter:s,convInfo:d,backend:n});else{const e=new ZA(d);h=n.runWebGLProgram(e,[r,s],"float32")}else h=e_({x:r,filter:s,convInfo:d,backend:n});const f=bE({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class a_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class r_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class s_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class i_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const o_={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=a,p=Hi(u),d=Mi(r.shape,c,i,1,o,l,!1,p),h=new a_(d);return n.runWebGLProgram(h,[r,s],"float32")}},u_={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=a,p=Hi(l),d=Mi(i,s.shape,o,1,u,c,!1,p),h=new r_(d);return n.runWebGLProgram(h,[r,s],"float32")}},l_={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=a,l=Li(r.shape,s.shape,i,u,o),c=new JA(l);return n.runWebGLProgram(c,[r,s],"float32")}},c_={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=a,l=Li(r.shape,u,i,1,o),c=new s_(l);return n.runWebGLProgram(c,[r,s],"float32")}},p_={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:u}=a,l=Li(u,s.shape,o,1,i),c=new i_(l);return n.runWebGLProgram(c,[r,s],"float32")}},d_=cE({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),h_={kernelName:ht,backendName:"webgl",kernelFunc:d_},f_=cE({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),m_={kernelName:ft,backendName:"webgl",kernelFunc:f_};class g_{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];const d="bilinear"===a?1:0,[h,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,w]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const y_={kernelName:gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=a,c=new g_(r.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[r,s,i],"float32")}};class b_{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const a=e.length,r=t?"0.0":`getX(${x_(a,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${$C(a)} coords = getOutputCoords();\n        int end = ${w_(a,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${w_(a,"coords")} = idx;\n          val += getX(${x_(a,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function x_(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function w_(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const v_={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,u=r.shape.length,l=Yo([s],u);let c=r;null!=l&&(c=$E({inputs:{x:r},backend:n,attrs:{perm:l}}));const p=Jo(1,u)[0];if(p!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${s}`);const d=c.shape[p];let h=eE({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new b_(c.shape,!1,o),a=[[e]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(i){const e=new b_(c.shape,i,o),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=$E({inputs:{x:h},backend:n,attrs:{perm:Zo(l)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}},k_={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=KC(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=XC(e,t,i,o);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class I_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const N_={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a,o=r.shape[0],u=("NHWC"===i?r.shape[1]:r.shape[2])*s,l=("NHWC"===i?r.shape[2]:r.shape[3])*s,c=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),p=new I_("NHWC"===i?[o,u,l,c]:[o,c,u,l],s,i);return n.runWebGLProgram(p,[r],r.dtype)}};class S_{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=FC(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class T_{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=FC(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,p=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?U(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let h="",f="";n&&(h=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const C_={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=a;let c=u;null==c&&(c=[1,1]),H(Gi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const p=Mi(r.shape,s.shape,i,c,o,l,!0);let d;d=$e().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new T_(p):new S_(p);const h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",h)}};class $_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class E_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const A_={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=a,p=Mi(r.shape,c,i,o,u,l,!0),d=new $_(p);return n.runWebGLProgram(d,[r,s],"float32")}},__={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=a,p=Mi(c,s.shape,i,o,u,l,!0),d=new E_(p);return n.runWebGLProgram(d,[r,s],"float32")}};class R_{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const F_={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=X(a.shape),i=bE({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new R_(s),u=n.runWebGLProgram(o,[i],i.dtype),l=bE({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class D_{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:p}=a;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${s});\n      const ivec2 pads = ivec2(${c}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const O_={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=a,l=Fi(r.shape,s.shape,i,o,"NHWC",u);let c;const p=new D_(l);c=n.runWebGLProgram(p,[r,s],"float32");const d=bE({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},M_={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:u}=Pc(r,s.length);Wc(i.length,u,s);const{path:l,steps:c}=Vc(o,u),p=c.length;let d=null,h=i.length;const f=[];for(let e=0;e<p;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:a}=Bc(h,u[t]);let r;Uc(e)?r=s[t]:(r=$E({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Y(r.shape,i)||(r=bE({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=gE({inputs:{a:r,b:d},backend:n}),f.push(d))}e<p-1&&(l[e]>=0&&(d=TE({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},L_=cE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),z_={kernelName:$t,backendName:"webgl",kernelFunc:L_},P_={kernelName:Et,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Q$("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new J$("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},B_=pE({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:JC}),W_={kernelName:_t,backendName:"webgl",kernelFunc:B_},V_=cE({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Nc};\n  float a1 = ${Sc};\n  float a2 = ${Tc};\n  float a3 = ${Cc};\n  float a4 = ${$c};\n  float a5 = ${Ec};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),U_={kernelName:At,backendName:"webgl",kernelFunc:V_},G_="return exp(x);",H_=cE({opSnippet:G_,packedOpSnippet:G_,cpuKernelImpl:QC,dtype:"float32"}),j_={kernelName:Rt,backendName:"webgl",kernelFunc:H_};function q_(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=r;return r<0&&(H(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+r+1),o.splice(u,0,1),bE({inputs:{x:s},backend:a,attrs:{shape:o}})}const K_={kernelName:Ft,backendName:"webgl",kernelFunc:q_},X_="return exp(x) - 1.0;",Y_=cE({opSnippet:X_,packedOpSnippet:X_,cpuKernelImpl:e$}),Z_={kernelName:Dt,backendName:"webgl",kernelFunc:Y_};class J_{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Q_(e,t,n){const a=n.texData.get(e.dataId),r=X(e.shape),s=e.shape[e.shape.length-1],i=bE({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),o=i.shape,u=new J_("real",o,t),l=new J_("imag",o,t),c=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),h=nE({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const f=bE({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(h),f}const eR={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Q_(a,!1,n)}};class tR{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function nR(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||pe(r),"string"===s){const e=se(s,X(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new tR(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const aR={kernelName:Mt,backendName:"webgl",kernelFunc:nR};class rR{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const sR={kernelName:Lt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,r=new rR(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},iR="return floor(x);",oR=cE({opSnippet:iR,packedOpSnippet:iR,cpuKernelImpl:t$}),uR={kernelName:zt,backendName:"webgl",kernelFunc:oR},lR=pE({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),cR={kernelName:Pt,backendName:"webgl",kernelFunc:lR};class pR{constructor(e){this.variableNames=["A"];const t=hC(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class dR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=hC(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const hR={kernelName:_a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,l]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[l,u],p=[l,u,s];(o||i)&&(null==fR&&(fR=document.createElement("canvas").getContext("2d")),fR.canvas.width=u,fR.canvas.height=l,fR.drawImage(r,0,0,u,l),r=fR.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=zT.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const h=$e().getBool("WEBGL_PACK")?new dR(p):new pR(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}};let fR;const mR={kernelName:Da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=a,m=Hi(c),g=Mi(r.shape,s.shape,u,p,l,d,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if($e().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=t_({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,a="leakyrelu"===h,u=h?dE(h,!1):null,l=new ZA(g,e,u,t,a),c=[r,s];if(i&&c.push(i),o&&c.push(o),a){const e=n.makeTensorInfo([],"float32",rr(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=e_({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});const x=bE({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},gR={kernelName:Oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=a,f=[];let m=c;null==m&&(m=[1,1]),H(Gi(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Mi(r.shape,s.shape,u,m,l,p,!0),y=$e().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?dE(d,y):null,x=[r,s],w=null!=i,v=null!=o,k="leakyrelu"===d;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",rr(h,"float32"));x.push(e),f.push(e)}let I;I=y?new T_(g,w,b,v,k):new S_(g,w,b,v,k);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,x,"float32",N);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class yR{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const a=$C(t.length),r=$C(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const bR={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],o=X(a.shape),[u,l,c,p]=Xs(a,r),d=bE({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),h=bE({inputs:{x:a},backend:n,attrs:{shape:[X(a.shape)/c,c]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=n$(e,t,a.dtype,l,i,c,p,a.shape,o);return n.makeTensorInfo(u,a.dtype,s.values)}const f=new yR(i,p,[l,c]),m=n.runWebGLProgram(f,[h,d],h.dtype),g=bE({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class xR{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=$C(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let t=0;t<e.length;t++)2===t?a.push("int(getIndices(resRC.x, resRC.z))"):a.push(`${n[t]}`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function wR(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,u=ne(i,r.shape)[0],l=n.readSync(s.dataId),c=r.shape[u];for(let e=0;e<l.length;++e){const t=l[e];H(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const p=Kc(r,s,u,o),d=X(s.shape),h=[],f=bE({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=bE({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}});h.push(f),h.push(m);const g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(m),t=n.bufferSync(f),a=a$(t,e,g);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p.outputShape,a.dtype,a.values)}const y=new xR(f.shape,g),b=n.runWebGLProgram(y,[f,m],f.dtype);h.push(b);const x=bE({inputs:{x:b},backend:n,attrs:{shape:p.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const vR={kernelName:Wt,backendName:"webgl",kernelFunc:wR},kR=pE({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:r$,dtype:"bool"}),IR={kernelName:Ut,backendName:"webgl",kernelFunc:kR},NR=pE({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:s$}),SR={kernelName:Gt,backendName:"webgl",kernelFunc:NR},TR={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Q_(a,!0,n)}},CR=cE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),$R={kernelName:Kt,backendName:"webgl",kernelFunc:CR},ER=cE({opSnippet:"return float(isinf(x));",dtype:"bool"}),AR={kernelName:Xt,backendName:"webgl",kernelFunc:ER},_R=cE({opSnippet:"return float(isnan(x));",dtype:"bool"}),RR={kernelName:Yt,backendName:"webgl",kernelFunc:_R},FR=pE({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:i$,dtype:"bool"}),DR={kernelName:Jt,backendName:"webgl",kernelFunc:FR},OR=pE({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:o$,dtype:"bool"}),MR={kernelName:Qt,backendName:"webgl",kernelFunc:OR},LR={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=u$(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},zR=cE({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:l$}),PR={kernelName:tn,backendName:"webgl",kernelFunc:zR},BR=cE({opSnippet:"return log(1.0 + x);"}),WR={kernelName:nn,backendName:"webgl",kernelFunc:BR},VR=pE({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),UR={kernelName:an,backendName:"webgl",kernelFunc:VR},GR=cE({opSnippet:"return float(!(x >= 1.0));"}),HR={kernelName:rn,backendName:"webgl",kernelFunc:GR},jR=pE({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),qR={kernelName:sn,backendName:"webgl",kernelFunc:jR};class KR{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class XR{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const YR={kernelName:on,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=a,l=$e().getBool("WEBGL_PACK_NORMALIZATION")?new XR(r.shape,s,i,o,u):new KR(r.shape,s,i,o,u);return n.runWebGLProgram(l,[r],r.dtype)}};class ZR{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const JR={kernelName:un,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=a,p=new ZR(r.shape,o,u,l,c);return n.runWebGLProgram(p,[r,s,i],r.dtype)}};function QR(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,u=ne(s,r.shape);let l=u;const c=Yo(l,o),p=null!=c,d=n.shouldExecuteOnCPU([r]);let h=r;if(p){if(d){const e=n.texData.get(h.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const a=F$(e,r.shape,r.dtype,c,t);h=n.makeTensorInfo(t,r.dtype),n.texData.get(h.dataId).values=a}else h=SE(r,c,n);l=Jo(l.length,o)}Xo("max",l,o);const[f,m]=qo(h.shape,l);let g,y=f;if(i&&(y=Ko(f,u)),d){const e=n.texData.get(h.dataId).values,t=c$(e,X(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=X(t),s=bE({inputs:{x:e},attrs:{shape:[X(e.shape)/r,r]},backend:a}),i=kE(s,e.dtype,"max",a),o=bE({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(h,m,y,n);return p&&n.disposeIntermediateTensorInfo(h),g}const eF={kernelName:ln,backendName:"webgl",kernelFunc:QR},tF=pE({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:p$}),nF={kernelName:cn,backendName:"webgl",kernelFunc:tF},aF={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;pC(r,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=a;H(Gi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Di(r.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&Y(l.inShape,l.outShape))return eE({inputs:{x:r},backend:n});const c=new lA(l,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},rF={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=a,c=Oi(r.shape,s,i,[1,1,1],o,l,u),p=new cA(c,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}};class sF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,u=r*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,p=u-1-e.padInfo.top,d=l-1-e.padInfo.left,h=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const oF={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=a,p=Oi(i.shape,o,u,[1,1,1],l,c),d=new cA(p,"max",!0),h=n.runWebGLProgram(d,[i],i.dtype),f=new iF(p),m=n.runWebGLProgram(f,[r,h],i.dtype);return n.disposeIntermediateTensorInfo(h),m}},uF={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;pC([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=a,d=Di(o.shape,u,l,1,c,p),h=new lA(d,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new sF(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},lF={kernelName:mn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;H(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const l=[1,1];H(Gi(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=Di(a.shape,r,s,l,i),[p,d]=function(e,t,n,a){let r=new lA(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new lA(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(a,o,c,u);return[p,d]}},cF={kernelName:gn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:r,axis:s}=t,i=n,o=a.shape.length,u=ne(s,a.shape);let l=u;const c=Yo(l,o),p=null!=c,d=i.shouldExecuteOnCPU([a]),h=[];let f=a;if(p){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const n=F$(e,a.shape,a.dtype,c,t);f=i.makeTensorInfo(t,a.dtype),i.texData.get(f.dataId).values=n}else f=SE(a,c,i);h.push(f),l=Jo(l.length,o)}Xo("sum",l,o);const[m,g]=qo(f.shape,l);let y=m;r&&(y=Ko(m,u));const b=function(e,t,n,a){const r=X(t),s=bE({inputs:{x:e},attrs:{shape:[X(e.shape)/r,r]},backend:a}),i=kE(s,"float32","mean",a),o=bE({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of h)i.disposeIntermediateTensorInfo(e);return b}},pF={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,u=ne(s,r.shape);let l=u;const c=Yo(l,o);let p=r;null!=c&&(p=$E({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Jo(l.length,r.shape.length)),Xo("min",l,o);const[d,h]=qo(p.shape,l),f=bE({inputs:{x:p},backend:n,attrs:{shape:[-1,X(h)]}}),m=kE(f,f.dtype,"min",n);let g;return g=bE(i?{inputs:{x:m},backend:n,attrs:{shape:Ko(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}},dF=pE({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:d$}),hF={kernelName:bn,backendName:"webgl",kernelFunc:dF};class fF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=$C(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),u="reflect"===n?0:1;this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class mF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=$C(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=M$("rc",a),u=M$("source",a),l=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let d="";if(1===a){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[a-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const gF={kernelName:xn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:r,mode:s}=n,i=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mF(a.shape,r,s):new fF(a.shape,r,s);return t.runWebGLProgram(i,[a],a.dtype)}},yF=pE({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),bF={kernelName:wn,backendName:"webgl",kernelFunc:yF};class xF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const wF=pE({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),vF={kernelName:Tt,backendName:"webgl",kernelFunc:wF},kF="return a - b;",IF=pE({opSnippet:kF,packedOpSnippet:kF,supportsComplex:!0,cpuKernelImpl:A$}),NF={kernelName:xa,backendName:"webgl",kernelFunc:IF};function SF(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=ne([s],r.shape),o=QR({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Ko(o.shape,i),l=bE({inputs:{x:o},backend:n,attrs:{shape:u}}),c=IF({inputs:{a:r,b:l},backend:n}),p=H_({inputs:{x:c},backend:n}),d=TE({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=bE({inputs:{x:d},backend:n,attrs:{shape:u}}),f=wF({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}const TF={kernelName:oa,backendName:"webgl",kernelFunc:SF},CF={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,u=o?r:SF({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new xF(l,c,s),d=[[i]],h=n.runWebGLProgram(p,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),h}},$F="return -x;",EF={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=f$(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new j$(a.shape,$F):new U$(a.shape,$F),n.runWebGLProgram(r,[a],a.dtype)}},AF=ml,_F={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){Ne("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=a,l=n.readSync(r.dataId),c=n.readSync(s.dataId),{selectedIndices:p}=AF(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},RF=gl,FF={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){Ne("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=a,c=n.readSync(r.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:h}=RF(c,p,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},DF=yl,OF={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){Ne("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=a,c=n.readSync(r.dataId),p=n.readSync(s.dataId),d=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=DF(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class MF{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const LF={kernelName:En,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,u=X(r.shape),l=new MF(u,s,i,o),c=bE({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const d=bE({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeIntermediateTensorInfo(p),d}};function zF(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=_A({inputs:{input:a},backend:n}),t=zF({inputs:{x:e},backend:n}),r=jA({inputs:{input:a},backend:n}),s=zF({inputs:{x:r},backend:n}),i=nE({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return nR({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const PF={kernelName:Ea,backendName:"webgl",kernelFunc:zF},BF={kernelName:$n,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=_A({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=jA({inputs:{input:r},backend:a}),i=zF({inputs:{x:s},backend:a}),o=nE({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return nR({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}},WF={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return q_({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{j(s,e.shape,"All tensors passed to stack must have matching shapes"),H(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=XA({inputs:t.map((e=>{const t=q_({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class VF{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=$C(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class UF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=$C(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=M$("rc",a),u=M$("source",a),l=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${u.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${l}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${l}) {`],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===a?2:4;e<t;e++)h+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;h+=1===a?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const GF=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(0===X(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return nR({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new UF(r.shape,s,i):new VF(r.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[r],r.dtype,u)},HF={kernelName:_n,backendName:"webgl",kernelFunc:GF},jF=pE({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),qF={kernelName:Rn,backendName:"webgl",kernelFunc:jF},KF={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,u=[],l=ne(s,r.shape);let c=l;const p=Yo(c,o);let d,h=r;if(null!=p&&(h=$E({inputs:{x:r},backend:n,attrs:{perm:p}}),c=Jo(c.length,o),u.push(h)),Xo("prod",c,o),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:a,outDtype:r}=g$(h.shape,h.dtype,e,c);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=qo(h.shape,c),a=X(t),s=bE({inputs:{x:h},backend:n,attrs:{shape:[-1,a]}}),i=kE(s,_r(r.dtype),"prod",n);d=bE({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(d);const e=Ko(d.shape,l);d=bE({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},XF=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=y$(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},YF={kernelName:On,backendName:"webgl",kernelFunc:XF},ZF=cE({opSnippet:"return 1.0 / x;"}),JF={kernelName:Ln,backendName:"webgl",kernelFunc:ZF},QF=cE({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),eD={kernelName:zn,backendName:"webgl",kernelFunc:QF},tD=cE({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),nD={kernelName:Gn,backendName:"webgl",kernelFunc:tD};class aD{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let p;p=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class rD{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let p;p=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const sD={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[u,l]=o,c=$e().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new rD(r.shape,u,l,s,i):new aD(r.shape,u,l,s,i);return n.runWebGLProgram(c,[r],"float32")}};class iD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],p=1/l,d=1/c,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const oD={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new iD(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class uD{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],p=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class lD{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],p=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const cD={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[u,l]=o,c=$e().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lD(r.shape,u,l,s,i):new uD(r.shape,u,l,s,i);return n.runWebGLProgram(c,[r],r.dtype)}};class pD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],p=1/l,d=1/c,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const dD={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new pD(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class hD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),r=$C(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class fD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const a=M$("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=$C(n);function o(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(r,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(a.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(a.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const mD={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=ne(s,r.shape);if(0===i)return eE({inputs:{x:r},backend:n});const u=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fD(r.shape,o):new hD(r.shape,o);return n.runWebGLProgram(u,[r],r.dtype)}};class gD{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const yD={kernelName:Ra,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,u=new gD(a.shape,s),[l,c]=gc(i,a.shape[1],a.shape[2]),p=[[l,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[a],a.dtype,p)}},bD=cE({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),xD={kernelName:jn,backendName:"webgl",kernelFunc:bD},wD=cE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:b$}),vD={kernelName:qn,backendName:"webgl",kernelFunc:wD};class kD{constructor(e,t,n,a,r,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=$C(r.length),u=$C(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let p="";1===a?p="i":2===a&&(p="i, coords[1]");const d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const ID={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=Js(0,r,i),d=[p/l,l];if(0===p)return n.makeTensorInfo(i,r.dtype);const h=bE({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=bE({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new kD(u,o,h.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,h,m],f.dtype),b=bE({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class ND{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<t.length;a++)i.push(`${n[a]}`),a<e&&s.push(`${n[a]}`);a=s.join(),r=i.join()}const s=$C(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const SD={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new ND(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],Ar(r.dtype,s.dtype))}},TD=cE({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${kc};\n  float scale = ${Ic};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),CD={kernelName:Yn,backendName:"webgl",kernelFunc:TD},$D="return 1.0 / (1.0 + exp(-1.0 * x));",ED=cE({opSnippet:$D,packedOpSnippet:$D,cpuKernelImpl:x$}),AD={kernelName:ta,backendName:"webgl",kernelFunc:ED},_D=cE({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),RD={kernelName:ea,backendName:"webgl",kernelFunc:_D},FD=cE({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),DD={kernelName:Jn,backendName:"webgl",kernelFunc:FD},OD=cE({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),MD={kernelName:Qn,backendName:"webgl",kernelFunc:OD},LD=cE({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),zD={kernelName:na,backendName:"webgl",kernelFunc:LD},PD={kernelName:sa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;H(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<r.shape.length;++e)u.push([0,0]);const l=[],c=GF({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),p=yc(c.shape,s,o,!1),d=bc(p.length,s.length,!1),h=xc(c.shape,s,o,!1),f=bE({inputs:{x:c},backend:n,attrs:{shape:p}}),m=$E({inputs:{x:f},backend:n,attrs:{perm:d}}),g=bE({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},BD={kernelName:ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(r.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[p,d,h,f,m]=k$(o,a.shape,a.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,a.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}},WD={kernelName:la,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,p]=I$(o,a.shape,a.dtype,i,u);return[n.makeTensorInfo(c,a.dtype,l),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},VD={kernelName:ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(a.dataId),o=n.readSync(r.dataId),u=n.readSync(s.dataId),[l,c]=N$(i,a.shape,a.dtype,o,u,!0);return n.makeTensorInfo(c,a.dtype,l)}},UD={kernelName:pa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(a.dataId),o=n.readSync(r.dataId),u=n.readSync(s.dataId),[l,c]=N$(i,a.shape,a.dtype,o,u);return n.makeTensorInfo(c,a.dtype,l)}},GD={kernelName:da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:u,numUpdates:l,strides:c,outputSize:p}=Js(0,r,o),d=new kD(l,u,r.shape.length,s.shape.length,c,[p,1],!1),h=n.runWebGLProgram(d,[s,r,i],s.dtype),f=bE({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),f}},HD={kernelName:ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=ne(i,r.shape)[0],u=Hc(r,s,o),l=r.shape.length,c=new Array(l).fill(0),p=r.shape.slice();return u.map((e=>{const t=[...p];t[o]=e;const a=NA({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,a}))}},jD="return sqrt(x);",qD=cE({opSnippet:jD,packedOpSnippet:jD,cpuKernelImpl:S$}),KD={kernelName:aa,backendName:"webgl",kernelFunc:qD},XD={kernelName:fa,backendName:"webgl",kernelFunc:cE({opSnippet:"return x * x;"})},YD="return (a - b) * (a - b);",ZD=pE({opSnippet:YD,packedOpSnippet:YD}),JD={kernelName:ha,backendName:"webgl",kernelFunc:ZD},QD={kernelName:Aa,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:a}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new U$(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}};class eO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=$C(n.length),s=$C(n.length);let i="";if(1===a)i="coords * strides + begin";else{let e=0;i=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const tO={kernelName:ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=fi(r.shape,s,i,o,u,l,c,p,d);let v;if(m)v=bE({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){H(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ti(b,x,w),t=NA({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=bE({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Os(r.shape,r.dtype,e),a=T$(h,t,w,b);v=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new eO(b,w,h);v=n.runWebGLProgram(e,[r],r.dtype)}const k=bE({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},nO={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=a,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=C$(d,h,r,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},aO={kernelName:ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,p]=$$(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},rO={kernelName:ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=E$(i,r);return n.makeTensorInfo(s.shape,"int32",o)}},sO=cE({opSnippet:"return tan(x);"}),iO={kernelName:wa,backendName:"webgl",kernelFunc:sO},oO=cE({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),uO={kernelName:va,backendName:"webgl",kernelFunc:oO};class lO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const a=$C(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function cO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>ur(e))):e,a=Os(r.shape,r.dtype,t),i=_$(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new lO(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}const pO={kernelName:ka,backendName:"webgl",kernelFunc:cO};class dO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class hO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function fO(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function mO(e){let t=1;for(;t<e;)t*=2;return t}const gO={kernelName:Ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=$e().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=$e().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([r])||c<o||s>u){const e=n.readSync(r.dataId),[t,a]=R$(e,l,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[r,nR({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const p=n.texData.get(r.dataId),d=null!==p&&p.isPacked,h=d?n.unpackTensor(r):r,f=X(l)/c,m=bE({inputs:{x:h},attrs:{shape:[f,c]},backend:n});d&&fO(n,h);const g=mO(s),y=mO(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,a)=>{const r=x(),s=new dO(a),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,r,"int32",i),fO(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),a=new hO([f,e/2]),r=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(a,t,"int32",r),fO(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=NA({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),fO(n,v);let k=wR({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});fO(n,m);const I=l.slice(0,-1);I.push(s),v=b,b=bE({inputs:{x:b},attrs:{shape:I},backend:n}),fO(n,v);const N=k;return k=bE({inputs:{x:k},attrs:{shape:I},backend:n}),fO(n,N),[k,b]}};class yO{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(a){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const bO={kernelName:Na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=a,[c,p,d,h]=r.shape,[f,m]=null!=l?l:[p,d],g=new yO(p,d,i,o,u,[c,f,m,h]);return n.runWebGLProgram(g,[r,s],"float32")}},xO={kernelName:Ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;pC(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=a.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=D$(i,r,s.shape,s.dtype);return[a.makeTensorInfo(u,s.dtype,o),a.makeTensorInfo([l.length],"int32",l)]}},wO={kernelName:Ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r,o=i.shape.length,u=r.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const p=[],d=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[s]=e;const t=NA({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),a=bE({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=a,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class vO{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const kO=[YR,JR,_E,FE,OE,LE,BE,UE,GE,HE,ZE,JE,eA,nA,iA,rA,uA,dA,pA,mA,gA,yA,wA,TA,CA,$A,FA,MA,PA,VA,aE,YA,o_,u_,n_,c_,p_,l_,h_,m_,y_,v_,k_,N_,A_,__,C_,F_,O_,M_,z_,P_,W_,U_,j_,K_,Z_,eR,aR,sR,uR,cR,hR,mR,gR,bR,vR,IR,SR,tE,TR,qA,$R,AR,RR,iE,DR,MR,LR,WR,PR,UR,HR,qR,eF,rF,aF,oF,uF,lF,nF,cF,pF,hF,gF,bF,CF,yE,EF,_F,FF,OF,AA,LF,BF,WF,HF,qF,lE,KF,YF,RA,vF,JF,nD,eD,xE,sD,oD,cD,dD,mD,yD,xD,vD,ID,SD,CD,AD,RD,DD,MD,SA,TF,zD,PD,BD,WD,VD,UD,GD,HD,KD,XD,JD,QD,tO,nO,aO,rO,NF,CE,iO,uO,pO,gO,bO,EE,xO,wO,{kernelName:$a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,u=[];let l=0;const c=Yo([l],o);let p=r;null!=c&&(p=$E({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(p),l=Jo(1,o)[0]);const d=qc(p.shape,l,i),h=X([p.shape[l]]),f=bE({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});u.push(f);const m=_r(r.dtype),g=(e,t,a,r,s)=>{const i=e.shape[0],o=e.shape[1],l=jc(o,s),c=new vO({windowSize:l,inSize:o,batchSize:i,numSegments:s},t),p=n.compileAndRun(c,[e,a],r);if(u.push(p),p.shape[1]===s)return p;const d=XF({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),h=cO({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(h),g(p,t,h,r,s)},y=bE({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){u.push(y);const e=Zo(c);b=$E({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},PF];for(const e of kO)Wa(e);var IO,NO;let SO;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(IO||(IO={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(NO||(NO={}));const TO={kernelName:Fa,backendName:"wasm",setupFunc:function(e){SO=e.wasm.cwrap(Fa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=a,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=NO[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?r.shape[2]:r.shape[1],b=l?s.shape[1]:s.shape[2],x=r.shape[0],w=n.makeOutput([x,y,b],r.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return SO(d,k,r.shape.length,h,I,s.shape.length,u,l,g,f,m,p||0,v),w}};function CO(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:a,inputs:{x:r}}=e,s=a.dataIdMap.get(r.dataId).id,i=a.makeOutput(r.shape,t||r.dtype),o=a.dataIdMap.get(i.dataId).id;return 0===X(i.shape)||n(s,IO[r.dtype],o),i}}}const $O=CO(Fe);function EO(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(r){const{backend:s,inputs:i}=r,{a:o,b:u}=i,l=s.dataIdMap.get(o.dataId).id,c=s.dataIdMap.get(u.dataId).id,p=null!=n?n:o.dtype,d=xo(o.shape,u.shape),h=s.makeOutput(d,p);if(0===X(d))return h;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=s.dataIdMap.get(h.dataId).id,y=()=>a(l,f,o.shape.length,c,m,u.shape.length,IO[o.dtype],g);if(t&&"float32"===o.dtype)return y(),h;const b=yo(o.shape,d),x=yo(u.shape,d),w=b.every(((e,t)=>e===t)),v=x.every(((e,t)=>e===t));if(w&&v)return y(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}const AO=EO(Me,!0);let _O;const RO={kernelName:Le,backendName:"wasm",setupFunc:function(e){_O=e.wasm.cwrap(Le,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===X(a.shape))return a;const r=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(a.dataId).id;return _O(s,r.length,IO[a.dtype],i),a}};function FO(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}const DO={kernelName:Ht,backendName:"wasm",kernelFunc:FO};let OO;function MO(e){const{inputs:t,backend:n,attrs:a}=e,[r,s]=function(e,t){const n=[],a=[];for(let r=0;r<e.length;++r)1!==e[r]&&n.push(e[r]),1!==e[t[r]]&&a.push(t[r]);for(let e=0;e<a.length;++e){let t=-1;for(let n=0;n<a.length;++n)a[n]>=e&&(-1===t||a[t]>a[n])&&(t=n);a[t]=e}return[n,a]}(t.x.shape,a.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}(t.x.shape,a.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){const e=FO({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(u.shape).buffer);return OO(c,h,u.shape.length,IO[u.dtype],p,d,s.length),l}const LO={kernelName:Sa,backendName:"wasm",kernelFunc:MO,setupFunc:function(e){OO=e.wasm.cwrap(Sa,null,["number","array","number","number","number","array","number"])}};function zO(e,t,n){const a=e.shape,r=e.shape.length,s=ne(t,a);let i=s;const o=Yo(i,r);let u=null,l=!1;if(null!=o){const t=new Array(r);for(let e=0;e<t.length;e++)t[e]=a[o[e]];i=Jo(i.length,r),u=MO({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}let PO;const BO={kernelName:ze,backendName:"wasm",setupFunc:function(e){PO=e.wasm.cwrap(ze,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:p,inputWasTransposed:d}=zO(i,r,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Xo("all",c,u.shape.length);const[h,f]=qo(u.shape,c),m=X(f),g=t.makeOutput(h,i.dtype);if(0!==X(u.shape)){const e=t.dataIdMap.get(g.dataId).id;PO(o,m,e)}if(d&&t.disposeData(l.dataId),s){const e=Ko(g.shape,p);g.shape=e}return g}};let WO;const VO={kernelName:Pe,backendName:"wasm",setupFunc:function(e){WO=e.wasm.cwrap(Pe,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:p,inputWasTransposed:d}=zO(i,r,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Xo("any",c,u.shape.length);const[h,f]=qo(u.shape,c),m=X(f),g=t.makeOutput(h,i.dtype);if(0!==X(u.shape)){const e=t.dataIdMap.get(g.dataId).id;WO(o,m,e)}if(d&&t.disposeData(l.dataId),s){const e=Ko(g.shape,p);g.shape=e}return g}};let UO;const GO={kernelName:Be,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:p}=zO(s,r,t);if(p){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const d=u.shape.slice(0,-1),h=t.makeOutput(d,"int32"),f=t.dataIdMap.get(h.dataId).id,m=X(h.shape),g=u.shape[c[0]];return UO(o,IO[u.dtype],m,g,f),p&&t.disposeData(l.dataId),h},setupFunc:function(e){UO=e.wasm.cwrap(Be,null,["number","number","number","number","number"])}};let HO;const jO={kernelName:qe,backendName:"wasm",setupFunc:function(e){HO=e.wasm.cwrap(qe,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Di(r.shape,i,o,1,u,l),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const w=a.makeOutput(c.outShape,"float32"),v=a.dataIdMap.get(w.dataId).id;return HO(s,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,y,b,x,v),w}};function qO(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=X(a.shape),i=te(r,s);return H(s===X(i),(()=>`new shape: ${i}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}const KO={kernelName:Pn,backendName:"wasm",kernelFunc:qO};let XO;const YO={kernelName:Ze,backendName:"wasm",setupFunc:function(e){XO=e.wasm.cwrap(Ze,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=r.shape.length,l=s.shape.length,c=i?r.shape[u-2]:r.shape[u-1],p=o?s.shape[l-1]:s.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],h=o?s.shape[l-2]:s.shape[l-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=X(f),y=X(m);H(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,h]);H(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,h,p]:[y,p,h],w=qO({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),v=qO({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(w.dataId).id,I=n.dataIdMap.get(v.dataId).id,N=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],T=Math.max(g,y),C=n.makeOutput([T,N,S],w.dtype),$=n.dataIdMap.get(C.dataId).id,E=new Uint8Array(new Int32Array(w.shape).buffer),A=new Uint8Array(new Int32Array(v.shape).buffer);return XO(k,E,w.shape.length,I,A,v.shape.length,i,o,$),n.disposeData(w.dataId),n.disposeData(v.dataId),C.shape=b,C}};function ZO(e){const{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[s,i]=hi(t,n,a),o=pi(t.shape,s,i),u=r.readSync(t.dataId),l=r.makeOutput(i,t.dtype),c=fe(t.shape),p=r.dataIdMap.get(l.dataId);if(o){const e=di(s,c);return"string"===t.dtype?p.stringBytes=u.slice(e,e+X(i)):r.typedArrayFromHeap(l).set(u.subarray(e,e+X(i))),l}if("string"===t.dtype){const e=Zv(u,s,i,t.shape,t.dtype);return p.stringBytes=e,l}const d=r.typedArrayFromHeap(l),h=t.shape.length;if(2===h)!function(e,t,n,a,r){let s=0;const i=a[0],o=a[1],u=i+r[0];for(let a=i;a<u;a++){const i=a*t+o;n.set(e.subarray(i,i+r[1]),s),s+=r[1]}}(u,c[0],d,s,i);else if(3===h)!function(e,t,n,a,r,s){let i=0;const o=r[0],u=r[1],l=r[2],c=o+s[0],p=u+s[1];for(let r=o;r<c;r++)for(let o=u;o<p;o++){const u=r*t+o*n+l;a.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],d,s,i);else if(4===h)!function(e,t,n,a,r,s,i){let o=0;const u=s[0],l=s[1],c=s[2],p=u+i[0],d=l+i[1],h=c+i[2],f=s[3];for(let s=u;s<p;s++)for(let u=l;u<d;u++)for(let l=c;l<h;l++){const c=s*t+u*n+l*a+f;r.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],d,s,i);else{const e=Zv(u,s,i,t.shape,t.dtype);d.set(e)}return l}const JO={kernelName:Zn,backendName:"wasm",kernelFunc:ZO},QO={kernelName:Je,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a,o=s.reduce(((e,t)=>e*t)),u=yc(r.shape,s,o),l=bc(u.length,s.length),c=xc(r.shape,s,o),p=wc(i,s.length),d=vc(c,i,s.length),h=qO({inputs:{x:r},backend:n,attrs:{shape:u}}),f=MO({inputs:{x:h},backend:n,attrs:{perm:l}}),m=ZO({inputs:{x:qO({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:p,size:d}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),m}};function eM(e){const{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),s=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(s),r}const tM={kernelName:tt,backendName:"wasm",kernelFunc:eM},nM=CO(nt);let aM;const rM={kernelName:at,backendName:"wasm",setupFunc:function(e){aM=e.wasm.cwrap(at,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o=n.dataIdMap.get(r.dataId).id,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(u.dataId).id;return aM(o,s,i,l),u}};function sM(e){const{inputs:t,backend:n}=e,a=ne(e.attrs.axis,t[0].shape)[0];let r=hc(t.map((e=>e.shape)),a);const s=t.filter((e=>X(e.shape)>0));if(1===s.length)return FO({inputs:{x:s[0]},backend:n});const i=n.makeOutput(r,t[0].dtype);if(0===X(r))return i;if(dc(s.map((e=>e.shape)),a),"string"===s[0].dtype){const e=s.map((e=>{const t=X(e.shape.slice(a));return qO({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));r=hc(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],l=pk(o,r,t[0].dtype,u),c=hc(s.map((e=>e.shape)),a);return i.shape=c,n.dataIdMap.get(i.dataId).stringBytes=Yc(l),e.forEach((e=>n.disposeData(e.dataId))),i}const o=X(s[0].shape.slice(0,a));let u=0;const l=s.map((e=>{const t=X(e.shape.slice(a));return u+=t,t})),c=s.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(i);for(let e=0;e<o;e++){let t=e*u;for(let n=0;n<c.length;n++){const a=l[n],r=e*a,s=c[n].subarray(r,r+a);p.set(s,t),t+=a}}return i}const iM={kernelName:it,backendName:"wasm",kernelFunc:sM};let oM;const uM={kernelName:ot,backendName:"wasm",setupFunc:function(e){oM=e.wasm.cwrap(ot,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p,dataFormat:d}=n,h=Hi(d),f=Mi(r.shape,s.shape,u,l,c,p,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,S=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const $=a.makeOutput(f.outShape,"float32"),E=a.dataIdMap.get($.dataId).id;return oM(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,y,b,x,w,C,v,k,I,N,S,T,E),$}};let lM;const cM={kernelName:lt,backendName:"wasm",setupFunc:function(e){lM=e.wasm.cwrap(lt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=a,p=Hi(u),d=Mi(c,s.shape,i,1,o,l,!1,p),{batchSize:h,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=d,N=f-1-d.padInfo.top,S=m-1-d.padInfo.left,T="channelsLast"===d.dataFormat,C=fe(d.inShape),$=fe(r.shape),[E,A,_]=fe(s.shape),R=C[0],F=T?C[1]:C[2],D=T?C[2]:1,O=T?1:C[1],M=$[0],L=T?$[1]:$[2],z=T?$[2]:1,P=T?1:$[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(r.dataId).id,U=t.dataIdMap.get(s.dataId).id;return lM(V,U,h,f,m,y,b,g,w,v,x,k,I,N,S,E,A,_,R,F,D,O,M,L,z,P,W),B}},pM=CO(ht),dM=CO(ft);var hM;let fM;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(hM||(hM={}));const mM={kernelName:gt,backendName:"wasm",setupFunc:function(e){fM=e.wasm.cwrap(gt,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{method:r,extrapolationValue:s,cropSize:i}=a,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[p,d]=i,h=[c,p,d,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=eM({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(h,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return fM(g,y,b,c,v,p,d,hM[r],s,w),null!=f&&t.disposeData(f.dataId),x}};let gM;const yM={kernelName:mt,backendName:"wasm",setupFunc:function(e){gM=e.wasm.cwrap(mt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,u=r.shape.length;H("float32"===r.dtype||"int32"===r.dtype,(()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`));const l=Yo([s],u);let c=r;null!==l&&(c=MO({inputs:{x:r},attrs:{perm:l},backend:n}));const p=Jo(1,u)[0];Xo("cumsum",[p],u);const d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;gM(f,i?1:0,o?1:0,h,m,IO[r.dtype]);let g=d;return null!==l&&(g=MO({inputs:{x:d},attrs:{perm:Zo(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)),g}};let bM;const xM={kernelName:bt,backendName:"wasm",setupFunc:function(e){bM=e.wasm.cwrap(bt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:s,dataFormat:i}=a,o=r.shape[0],u=("NHWC"===i?r.shape[1]:r.shape[2])*s,l=("NHWC"===i?r.shape[2]:r.shape[3])*s,c=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),p="NHWC"===i?[o,u,l,c]:[o,c,u,l],d=t.makeOutput(p,"float32"),h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(fe(r.shape)).buffer),m=new Uint8Array(new Int32Array(p).buffer),g=new Uint8Array(new Int32Array(fe(p)).buffer),y=t.dataIdMap.get(d.dataId).id;return bM(h,s,"NHWC"===i?1:0,f,r.shape.length-1,m,g,p.length,y),d}};let wM;const vM={kernelName:xt,backendName:"wasm",setupFunc:function(e){wM=e.wasm.cwrap(xt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p}=n,d=null==l?[1,1]:l,h=Mi(r.shape,s.shape,u,d,c,p,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,b=h.padInfo.bottom,x=h.padInfo.left,w=h.dilationHeight,v=h.dilationWidth,k=h.strideHeight,I=h.strideWidth,N=h.inChannels,S=h.outChannels,T="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);const C=a.makeOutput(h.outShape,"float32"),$=a.dataIdMap.get(C.dataId).id;return wM(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,y,b,x,T,w,v,k,I,N,S,$),C}},kM=CO($t),IM=EO(_t,!1,"bool"),NM=CO(Rt,"float32");function SM(e){const{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice();let u=s;return s<0&&(H(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),qO({inputs:{x:r},backend:a,attrs:{shape:o}})}const TM={kernelName:Ft,backendName:"wasm",kernelFunc:SM};function CM(e){const{attrs:{shape:t,value:n,dtype:a},backend:r}=e,s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}const $M={kernelName:Mt,backendName:"wasm",kernelFunc:CM};let EM;const AM={kernelName:Lt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,u,l,c]=a.shape;return EM(s,o,u,l,c,i),r},setupFunc:function(e){EM=e.wasm.cwrap(Lt,null,["number","number","number","number","number","number"])}},_M=CO(zt),RM=EO(Pt,!1);let FM;const DM={kernelName:Bt,backendName:"wasm",setupFunc:function(e){FM=e.wasm.cwrap(Bt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,h=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===X(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return FM(c,p,d,h,f,r,g),m}};let OM;const MM={kernelName:Da,backendName:"wasm",setupFunc:function(e){OM=e.wasm.cwrap(Da,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=Mi(r.shape,s.shape,u,c,l,d),g=NO[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);const y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,$=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,_=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,O=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);const M=a.makeOutput(m.outShape,"float32"),L=a.dataIdMap.get(M.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return OM(y,F,D,O,b,v,k,w,I,N,S,T,R,C,$,E,A,_,x,g,z,f||0,L),M}};let LM;const zM={kernelName:Oa,backendName:"wasm",setupFunc:function(e){LM=e.wasm.cwrap(Oa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=Mi(r.shape,s.shape,u,c,l,d,!0),g=NO[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,$=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,_=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,O=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);const M=a.makeOutput(m.outShape,"float32"),L=a.dataIdMap.get(M.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return LM(y,F,D,O,b,v,k,w,I,N,S,T,R,C,$,E,A,_,x,g,z,f||0,L),M}};let PM;const BM={kernelName:Vt,backendName:"wasm",setupFunc:function(e){PM=e.wasm.cwrap(Vt,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:r}=n,[s,i,o,u]=Xs(a,r),l=t.makeOutput(s,a.dtype);if(0===i)return l;const c=r.shape,p=c[c.length-1],d=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return PM(d,IO[a.dtype],h,i,p,o,f,m),l}};let WM;const VM={kernelName:Wt,backendName:"wasm",setupFunc:function(e){WM=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r,indices:s}=n,{axis:i,batchDims:o}=a,u=ne(i,r.shape)[0],l=t.readSync(s.dataId),c=r.shape[u];for(let e=0;e<l.length;++e){const t=l[e];H(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const p=Kc(r,s,u,o),d=qO({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),h=X(s.shape),f=qO({inputs:{x:s},attrs:{shape:[p.batchSize,h/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(0===X(r.shape))return g;const y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(fe(d.shape)).buffer),k=new Uint8Array(new Int32Array(fe(m)).buffer);return WM(b,IO[r.dtype],v,y,x,p.batchSize,k,w),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}},UM=EO(Ut,!1,"bool"),GM=EO(Gt,!1,"bool");let HM;const jM={kernelName:Zt,backendName:"wasm",setupFunc:function(e){HM=e.wasm.cwrap(Zt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,s=a.makeOutput(t.shape,"float32");if(0!==X(t.shape)){const e=a.dataIdMap.get(s.dataId).id;HM(r,IO[t.dtype],n,e)}return s}},qM=EO(Jt,!1,"bool"),KM=EO(Qt,!1,"bool"),XM=CO(tn),YM=EO(an,!1,"bool");let ZM;const JM={kernelName:ln,backendName:"wasm",setupFunc:function(e){ZM=e.wasm.cwrap(ln,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:p,inputWasTransposed:d}=zO(i,r,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Xo("max",c,u.shape.length);const[h,f]=qo(u.shape,c),m=X(f),g=t.makeOutput(h,i.dtype);if(0!==X(u.shape)){const e=t.dataIdMap.get(g.dataId).id;ZM(o,IO[i.dtype],m,e)}if(d&&t.disposeData(l.dataId),s){const e=Ko(g.shape,p);g.shape=e}return g}},QM=EO(cn,!1);let eL;const tL={kernelName:pn,backendName:"wasm",setupFunc:function(e){eL=e.wasm.cwrap(pn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id;H("float32"===r.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`));const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Di(r.shape,i,o,1,u,l),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,w=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=a.makeOutput(c.outShape,"float32"),N=a.dataIdMap.get(I.dataId).id;return eL(s,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,y,b,x,w,v,k,N),I}};let nL;const aL={kernelName:gn,backendName:"wasm",setupFunc:function(e){nL=e.wasm.cwrap(gn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=zO(i,r,t);let f=p;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Jo(f.length,l.shape.length))}Xo("mean",f,l.shape.length);const[m,g]=qo(l.shape,f),y=X(g);let b=l;"float32"!==l.dtype&&(b=eM({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==X(l.shape)){const e=t.dataIdMap.get(x.dataId).id;nL(u,y,e)}if(h&&t.disposeData(c.dataId),s){const e=Ko(x.shape,d);x.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),x}};let rL;const sL={kernelName:yn,backendName:"wasm",setupFunc:function(e){rL=e.wasm.cwrap(yn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=zO(i,r,t);if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}Xo("min",p,l.shape.length);const[f,m]=qo(l.shape,p),g=X(m),y=t.makeOutput(f,l.dtype);if(0!==X(l.shape)){const e=t.dataIdMap.get(y.dataId).id;rL(u,IO[i.dtype],g,e)}if(h&&t.disposeData(c.dataId),s){const e=Ko(y.shape,d);y.shape=e}return y}},iL=EO(bn,!1);var oL;let uL;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(oL||(oL={}));const lL={kernelName:xn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=a.map((e=>e[0])),p=a.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(p).buffer);return uL(i,l,t.shape.length,IO[t.dtype],d,h,oL[r],u),o},setupFunc:function(e){uL=e.wasm.cwrap(xn,null,["number","array","number","number","array","array","number","number"])}},cL=EO(kn,!0),pL=CO(In);function dL(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}let hL;const fL={kernelName:Sn,backendName:"wasm",setupFunc:function(e){hL=e.wasm.cwrap(Sn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=a,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=hL(l,c,s,r,i),{pSelectedIndices:d,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=dL(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",d)}};let mL;const gL={kernelName:Tn,backendName:"wasm",setupFunc:function(e){mL=e.wasm.cwrap(Tn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=a,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,d=mL(c,p,s,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=dL(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",g)]}};let yL;const bL={kernelName:Cn,backendName:"wasm",setupFunc:function(e){yL=e.wasm.cwrap(Cn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=a,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,d=yL(c,p,s,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=dL(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},xL=EO(Nn,!1,"bool");let wL;const vL={kernelName:En,backendName:"wasm",setupFunc:function(e){wL=e.wasm.cwrap(En,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,u=n.makeOutput([...r.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(r.dataId).id;return wL(c,s,i,o,l),u}},kL={kernelName:$n,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}},IL={kernelName:An,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return SM({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{j(s,e.shape,"All tensors passed to stack must have matching shapes"),H(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=sM({inputs:t.map((e=>{const t=SM({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),u}};let NL;const SL={kernelName:_n,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===X(t.shape))return CM({backend:n,attrs:{shape:s,value:r,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=a.map((e=>e[0])),p=a.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(p).buffer);return NL(i,l,t.shape.length,IO[t.dtype],d,h,r,u),o},setupFunc:function(e){NL=e.wasm.cwrap(_n,null,["number","array","number","number","array","array","number","number"])}},TL=EO(Rn,!1);let CL;const $L={kernelName:Fn,backendName:"wasm",setupFunc:function(e){CL=e.wasm.cwrap(Fn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id;let o=s;const u=a;let l=u;"float32"!==u.dtype&&(l=eM({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(a.shape,"float32"),p=n.dataIdMap.get(c.dataId).id;return CL(o,i,p),"float32"!==u.dtype&&n.disposeData(l.dataId),c}};let EL;const AL={kernelName:Dn,backendName:"wasm",setupFunc:function(e){EL=e.wasm.cwrap(Dn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=zO(i,r,t);let f=p;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Jo(f.length,l.shape.length))}Xo("prod",f,l.shape.length);const[m,g]=qo(l.shape,f),y=X(g),b=t.makeOutput(m,l.dtype);if(0!==X(l.shape)){const e=t.dataIdMap.get(b.dataId).id;EL(u,y,IO[b.dtype],e)}if(h&&t.disposeData(c.dataId),s){const e=Ko(b.shape,d);b.shape=e}return b}},_L={kernelName:On,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=hS(a,r,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},RL=EO(Tt,!0),FL=CO(zn),DL=CO(Gn);let OL;const ML={kernelName:Vn,backendName:"wasm",setupFunc:function(e){OL=e.wasm.cwrap(Vn,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[u,l]=o,[c,p,d,h]=r.shape,f=[c,u,l,h];let m,g=t.dataIdMap.get(r.dataId);"float32"!==g.dtype&&(m=eM({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===X(r.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return OL(y,c,p,d,h,u,l,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),b}};let LL;const zL={kernelName:Hn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=ne(s,r.shape);if(0===r.shape.length)return FO({inputs:{x:r},backend:n});const o=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);LL(u,c,i.length,p,r.shape.length,l);const d=qO({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){LL=e.wasm.cwrap(Hn,null,["number","array","number","array","number","number"])}};let PL;const BL={kernelName:Ra,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=a,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(u.dataId).id,[p,d,h,f]=r.shape,[m,g]=gc(o,d,h),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return PL(l,p,d,h,f,s,m,g,b,y.length,c),u},setupFunc:function(e){PL=e.wasm.cwrap(Ra,null,["number","number","number","number","number","number","number","number","array","number","number"])}},WL=CO(jn),VL=CO(qn);let UL;const GL={kernelName:Kn,backendName:"wasm",setupFunc:function(e){UL=e.wasm.cwrap(Kn,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:s}=n,{shape:i}=a,o=t.makeOutput(i,s.dtype);if(0===X(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=Js(0,r,i),h=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return UL(h,f,IO[s.dtype],u,l,c,m,d,g),o}};let HL;const jL={kernelName:Xn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id,p=a.shape.length,d=r.shape.length,h=0===p||p>1||1===d?1:X(r.shape.slice(1));return HL(i,o,u,h,c),l},setupFunc:function(e){HL=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let qL;const KL={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){qL=e.wasm.cwrap(ta,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(r.dataId).id;return 0===X(r.shape)||qL(a,s),r}},XL=CO(Jn);let YL;const ZL={kernelName:oa,backendName:"wasm",setupFunc:function(e){YL=e.wasm.cwrap(oa,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[a],u=X(n.shape)/o;return 0===X(s.shape)||YL(r,i,o,u),s}},JL={kernelName:sa,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a,o=X(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<r.shape.length;++e)u.push([0,0]);const l=SL.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=yc(l.shape,s,o,!1),p=bc(c.length,s.length,!1),d=xc(l.shape,s,o,!1),h=qO({inputs:{x:l},backend:n,attrs:{shape:c}}),f=MO({inputs:{x:h},backend:n,attrs:{perm:p}}),m=qO({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(l.dataId),n.disposeData(h.dataId),n.disposeData(f.dataId),m}},QL={kernelName:ia,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=ne(i,r.shape)[0],u=Hc(r,s,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=ZO({inputs:{x:r},attrs:{begin:l,size:t},backend:a});return l[o]+=e,n}))}},ez=CO(aa),tz=CO(fa),nz=EO(ha,!0);let az;const rz={kernelName:Aa,backendName:"wasm",setupFunc:function(e){az=e.wasm.cwrap(Aa,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return az(i,r,IO[s.dtype],u),o}};let sz;const iz={kernelName:ma,backendName:"wasm",setupFunc:function(e){sz=e.wasm.cwrap(ma,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=fi(r.shape,s,i,o,u,l,c,p,d);let v;if(m)v=qO({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){H(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ti(b,x,w),n=ZO({inputs:{x:r},backend:t,attrs:{begin:b,size:e}});v=qO({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(h,"float32"),n=t.dataIdMap.get(r.dataId).id,a=new Uint8Array(new Int32Array(fe(r.shape)).buffer),s=new Uint8Array(new Int32Array(b).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(h).buffer),l=new Uint8Array(new Int32Array(fe(h)).buffer),c=t.dataIdMap.get(e.dataId).id;sz(n,a,r.shape.length,s,i,o,u,l,h.length,c),v=qO({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return v}},oz=EO(xa,!0);let uz;const lz={kernelName:ra,backendName:"wasm",setupFunc:function(e){uz=e.wasm.cwrap(ra,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=zO(i,r,t);let f=p;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Jo(f.length,l.shape.length))}Xo("sum",f,l.shape.length);const[m,g]=qo(l.shape,f),y=X(g),b=t.makeOutput(m,l.dtype);if(0!==X(l.shape)){const e=t.dataIdMap.get(b.dataId).id;uz(u,y,IO[b.dtype],e)}if(h&&t.disposeData(c.dataId),s){const e=Ko(b.shape,d);b.shape=e}return b}},cz=CO(wa),pz=CO(va);let dz;let hz;let fz;const mz=[$O,AO,RO,BO,VO,GO,jO,YO,QO,tM,nM,rM,iM,uM,cM,pM,dM,mM,yM,xM,vM,kM,IM,NM,TM,$M,AM,_M,RM,TO,DM,MM,zM,BM,VM,UM,GM,DO,jM,qM,KM,XM,YM,JM,QM,tL,aL,sL,iL,lL,cL,pL,fL,gL,bL,xL,vL,kL,IL,SL,TL,$L,AL,_L,RL,FL,DL,KO,ML,zL,BL,VL,WL,GL,jL,KL,XL,JO,ZL,JL,QL,ez,tz,nz,rz,iz,oz,lz,cz,pz,{kernelName:ka,backendName:"wasm",setupFunc:function(e){dz=e.wasm.cwrap(ka,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,s=n.dataIdMap.get(r.dataId).id,{reps:i}=a,o=new Array(r.shape.length);for(let e=0;e<o.length;e++)o[e]=r.shape[e]*i[e];const u=new Uint8Array(new Int32Array(r.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(c.dataId).id;return dz(s,u,r.shape.length,l,o.length,IO[c.dtype],p),c}},{kernelName:Ia,backendName:"wasm",setupFunc:function(e){hz=e.wasm.cwrap(Ia,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{k:r,sorted:s}=n,i=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),u=a.shape.slice();u[u.length-1]=r;const l=t.makeOutput(u,a.dtype),c=t.dataIdMap.get(l.dataId).id,p=t.makeOutput(u,"int32"),d=t.dataIdMap.get(p.dataId).id;return hz(i,o,a.shape.length,IO[a.dtype],r,s,c,d),[l,p]}},{kernelName:Na,backendName:"wasm",setupFunc:function(e){fz=e.wasm.cwrap(Na,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{image:r,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=a,[c,p,d,h]=r.shape,[f,m]=null!=l?l:[p,d],g=[c,f,m,h],y=new Uint8Array(new Int32Array(fe(r.shape)).buffer),b=t.makeOutput(g,r.dtype),x=t.dataIdMap.get(b.dataId).id,w=t.dataIdMap.get(r.dataId).id,v=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return fz(w,v,s.shape[0]>1,c,f,m,h,d,p,y,r.shape.length-1,k,I,u,x),b}},LO,{kernelName:Ca,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r.shape[s],o=r.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=r.shape[e]);const c=new Array(i),p=new Array(o).fill(0),d=r.shape.slice();d[s]=1;for(let e=0;e<c.length;e++)p[s]=e,c[e]=ZO({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},{kernelName:Ea,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}}];for(const e of mz)Wa(e);const gz=$e();gz.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),gz.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(gz.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var yz=n(8349),bz=n.n(yz),xz=n(7234),wz=n.n(xz);class vz extends P{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Ez),Az=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new z(this,xi())}write(e,t,n){const a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=ir();return e(),{kernelMs:ir()-t}}move(e,t,n,a,r){const s=this.dataIdNextNumber++;if("string"===a){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:a,memoryOffset:null,refCount:r})}const i=X(n),o=i*ue(a),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:a,stringBytes:r}=this.dataIdMap.get(e);return"string"===n?r:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+X(a)*ue(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let a;if(null==n)a=this.write(null,e,t);else{const r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=X(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),s=X(e);switch(t){case"float32":return new Float32Array(a,r,s);case"int32":return new Int32Array(a,r,s);case"bool":return new Uint8Array(a,r,s);default:throw new Error(`Unknown dtype ${t}`)}}}function kz(e,t,n){if(null!=Nz)return Nz;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),null!=Tz&&null!=Tz[a]?Tz[a]:n+a}const Iz=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let Nz=null,Sz=null,Tz={},Cz=!1,$z=!1,Ez=-1,Az=null;function _z(e){return _z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_z(e)}function Rz(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Fz(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Dz(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){Fz(e,t,n[t])}))}return e}function Oz(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],a=!0,r=!1,s=void 0;try{for(var i,o=e[Symbol.iterator]();!(a=(i=o.next()).done)&&(n.push(i.value),!t||n.length!==t);a=!0);}catch(e){r=!0,s=e}finally{try{a||null==o.return||o.return()}finally{if(r)throw s}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}Ni("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([$e().getAsync("WASM_HAS_SIMD_SUPPORT"),$e().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,a)=>{const r={locateFile:(n,a)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?kz(e,t,null!=Sz?Sz:a):a+n}};var s;$z&&(r.instantiateWasm=(s=kz(e,t,null!=Sz?Sz:""),(e,t)=>(function(e,t){return $e().platform.fetch(e,{credentials:"same-origin"})}(s).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;r.onAbort=()=>{o||Cz||(Cz=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==Nz?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+bz().toString()],{type:"text/javascript"}),i=bz()(r)):i=wz()(r),i.then((e=>{o=!0,Cz=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new vz(e)}),2);var Mz=function(){},Lz={},zz={},Pz=null,Bz={mark:Mz,measure:Mz};try{"undefined"!=typeof window&&(Lz=window),"undefined"!=typeof document&&(zz=document),"undefined"!=typeof MutationObserver&&(Pz=MutationObserver),"undefined"!=typeof performance&&(Bz=performance)}catch(e){}var Wz=(Lz.navigator||{}).userAgent,Vz=void 0===Wz?"":Wz,Uz=Lz,Gz=zz,Hz=Pz,jz=Bz,qz=(Uz.document,!!Gz.documentElement&&!!Gz.head&&"function"==typeof Gz.addEventListener&&"function"==typeof Gz.createElement),Kz=~Vz.indexOf("MSIE")||~Vz.indexOf("Trident/"),Xz="svg-inline--fa",Yz="data-fa-i2svg",Zz="data-fa-pseudo-element",Jz="fontawesome-i2svg",Qz=["HTML","HEAD","STYLE","SCRIPT"],eP=function(){try{return!0}catch(e){return!1}}(),tP={fas:"solid",far:"regular",fal:"light",fad:"duotone",fab:"brands",fak:"kit",fa:"solid"},nP={solid:"fas",regular:"far",light:"fal",duotone:"fad",brands:"fab",kit:"fak"},aP="fa-layers-text",rP=/Font Awesome ([5 ]*)(Solid|Regular|Light|Duotone|Brands|Free|Pro|Kit).*/i,sP={900:"fas",400:"far",normal:"far",300:"fal"},iP=[1,2,3,4,5,6,7,8,9,10],oP=iP.concat([11,12,13,14,15,16,17,18,19,20]),uP=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],lP={GROUP:"group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},cP=["xs","sm","lg","fw","ul","li","border","pull-left","pull-right","spin","pulse","rotate-90","rotate-180","rotate-270","flip-horizontal","flip-vertical","flip-both","stack","stack-1x","stack-2x","inverse","layers","layers-text","layers-counter",lP.GROUP,lP.SWAP_OPACITY,lP.PRIMARY,lP.SECONDARY].concat(iP.map((function(e){return"".concat(e,"x")}))).concat(oP.map((function(e){return"w-".concat(e)}))),pP=Uz.FontAwesomeConfig||{};Gz&&"function"==typeof Gz.querySelector&&[["data-family-prefix","familyPrefix"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]].forEach((function(e){var t=Oz(e,2),n=t[0],a=t[1],r=function(e){return""===e||"false"!==e&&("true"===e||e)}(function(e){var t=Gz.querySelector("script["+e+"]");if(t)return t.getAttribute(e)}(n));null!=r&&(pP[a]=r)}));var dP=Dz({},{familyPrefix:"fa",replacementClass:Xz,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0},pP);dP.autoReplaceSvg||(dP.observeMutations=!1);var hP=Dz({},dP);Uz.FontAwesomeConfig=hP;var fP=Uz||{};fP.___FONT_AWESOME___||(fP.___FONT_AWESOME___={}),fP.___FONT_AWESOME___.styles||(fP.___FONT_AWESOME___.styles={}),fP.___FONT_AWESOME___.hooks||(fP.___FONT_AWESOME___.hooks={}),fP.___FONT_AWESOME___.shims||(fP.___FONT_AWESOME___.shims=[]);var mP=fP.___FONT_AWESOME___,gP=[],yP=!1;function bP(e){qz&&(yP?setTimeout(e,0):gP.push(e))}qz&&((yP=(Gz.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(Gz.readyState))||Gz.addEventListener("DOMContentLoaded",(function e(){Gz.removeEventListener("DOMContentLoaded",e),yP=1,gP.map((function(e){return e()}))})));var xP,wP="pending",vP="settled",kP="fulfilled",IP="rejected",NP=function(){},SP=void 0!==n.g&&void 0!==n.g.process&&"function"==typeof n.g.process.emit,TP="undefined"==typeof setImmediate?setTimeout:setImmediate,CP=[];function $P(){for(var e=0;e<CP.length;e++)CP[e][0](CP[e][1]);CP=[],xP=!1}function EP(e,t){CP.push([e,t]),xP||(xP=!0,TP($P,0))}function AP(e){var t=e.owner,n=t._state,a=t._data,r=e[n],s=e.then;if("function"==typeof r){n=kP;try{a=r(a)}catch(e){DP(s,e)}}_P(s,a)||(n===kP&&RP(s,a),n===IP&&DP(s,a))}function _P(e,t){var n;try{if(e===t)throw new TypeError("A promises callback cannot return that same promise.");if(t&&("function"==typeof t||"object"===_z(t))){var a=t.then;if("function"==typeof a)return a.call(t,(function(a){n||(n=!0,t===a?FP(e,a):RP(e,a))}),(function(t){n||(n=!0,DP(e,t))})),!0}}catch(t){return n||DP(e,t),!0}return!1}function RP(e,t){e!==t&&_P(e,t)||FP(e,t)}function FP(e,t){e._state===wP&&(e._state=vP,e._data=t,EP(MP,e))}function DP(e,t){e._state===wP&&(e._state=vP,e._data=t,EP(LP,e))}function OP(e){e._then=e._then.forEach(AP)}function MP(e){e._state=kP,OP(e)}function LP(e){e._state=IP,OP(e),!e._handled&&SP&&n.g.process.emit("unhandledRejection",e._data,e)}function zP(e){n.g.process.emit("rejectionHandled",e)}function PP(e){if("function"!=typeof e)throw new TypeError("Promise resolver "+e+" is not a function");if(this instanceof PP==0)throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");this._then=[],function(e,t){function n(e){DP(t,e)}try{e((function(e){RP(t,e)}),n)}catch(e){n(e)}}(e,this)}PP.prototype={constructor:PP,_state:wP,_then:null,_data:void 0,_handled:!1,then:function(e,t){var n={owner:this,then:new this.constructor(NP),fulfilled:e,rejected:t};return!t&&!e||this._handled||(this._handled=!0,this._state===IP&&SP&&EP(zP,this)),this._state===kP||this._state===IP?EP(AP,n):this._then.push(n),n.then},catch:function(e){return this.then(null,e)}},PP.all=function(e){if(!Array.isArray(e))throw new TypeError("You must pass an array to Promise.all().");return new PP((function(t,n){var a=[],r=0;function s(e){return r++,function(n){a[e]=n,--r||t(a)}}for(var i,o=0;o<e.length;o++)(i=e[o])&&"function"==typeof i.then?i.then(s(o),n):a[o]=i;r||t(a)}))},PP.race=function(e){if(!Array.isArray(e))throw new TypeError("You must pass an array to Promise.race().");return new PP((function(t,n){for(var a,r=0;r<e.length;r++)(a=e[r])&&"function"==typeof a.then?a.then(t,n):t(a)}))},PP.resolve=function(e){return e&&"object"===_z(e)&&e.constructor===PP?e:new PP((function(t){t(e)}))},PP.reject=function(e){return new PP((function(t,n){n(e)}))};var BP="function"==typeof Promise?Promise:PP,WP=16,VP={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function UP(e){if(e&&qz){var t=Gz.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=e;for(var n=Gz.head.childNodes,a=null,r=n.length-1;r>-1;r--){var s=n[r],i=(s.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(i)>-1&&(a=s)}return Gz.head.insertBefore(t,a),e}}function GP(){for(var e=12,t="";e-- >0;)t+="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"[62*Math.random()|0];return t}function HP(e){for(var t=[],n=(e||[]).length>>>0;n--;)t[n]=e[n];return t}function jP(e){return e.classList?HP(e.classList):(e.getAttribute("class")||"").split(" ").filter((function(e){return e}))}function qP(e){return"".concat(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function KP(e){return Object.keys(e||{}).reduce((function(t,n){return t+"".concat(n,": ").concat(e[n],";")}),"")}function XP(e){return e.size!==VP.size||e.x!==VP.x||e.y!==VP.y||e.rotate!==VP.rotate||e.flipX||e.flipY}function YP(e){var t=e.transform,n=e.containerWidth,a=e.iconWidth,r={transform:"translate(".concat(n/2," 256)")},s="translate(".concat(32*t.x,", ").concat(32*t.y,") "),i="scale(".concat(t.size/16*(t.flipX?-1:1),", ").concat(t.size/16*(t.flipY?-1:1),") "),o="rotate(".concat(t.rotate," 0 0)");return{outer:r,inner:{transform:"".concat(s," ").concat(i," ").concat(o)},path:{transform:"translate(".concat(a/2*-1," -256)")}}}var ZP={x:0,y:0,width:"100%",height:"100%"};function JP(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.attributes&&(e.attributes.fill||t)&&(e.attributes.fill="black"),e}function QP(e){var t=e.icons,n=t.main,a=t.mask,r=e.prefix,s=e.iconName,i=e.transform,o=e.symbol,u=e.title,l=e.maskId,c=e.titleId,p=e.extra,d=e.watchable,h=void 0!==d&&d,f=a.found?a:n,m=f.width,g=f.height,y="fak"===r,b=y?"":"fa-w-".concat(Math.ceil(m/g*16)),x=[hP.replacementClass,s?"".concat(hP.familyPrefix,"-").concat(s):"",b].filter((function(e){return-1===p.classes.indexOf(e)})).filter((function(e){return""!==e||!!e})).concat(p.classes).join(" "),w={children:[],attributes:Dz({},p.attributes,{"data-prefix":r,"data-icon":s,class:x,role:p.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(m," ").concat(g)})},v=y&&!~p.classes.indexOf("fa-fw")?{width:"".concat(m/g*16*.0625,"em")}:{};h&&(w.attributes[Yz]=""),u&&w.children.push({tag:"title",attributes:{id:w.attributes["aria-labelledby"]||"title-".concat(c||GP())},children:[u]});var k=Dz({},w,{prefix:r,iconName:s,main:n,mask:a,maskId:l,transform:i,symbol:o,styles:Dz({},v,p.styles)}),I=a.found&&n.found?function(e){var t,n=e.children,a=e.attributes,r=e.main,s=e.mask,i=e.maskId,o=e.transform,u=r.width,l=r.icon,c=s.width,p=s.icon,d=YP({transform:o,containerWidth:c,iconWidth:u}),h={tag:"rect",attributes:Dz({},ZP,{fill:"white"})},f=l.children?{children:l.children.map(JP)}:{},m={tag:"g",attributes:Dz({},d.inner),children:[JP(Dz({tag:l.tag,attributes:Dz({},l.attributes,d.path)},f))]},g={tag:"g",attributes:Dz({},d.outer),children:[m]},y="mask-".concat(i||GP()),b="clip-".concat(i||GP()),x={tag:"mask",attributes:Dz({},ZP,{id:y,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[h,g]},w={tag:"defs",children:[{tag:"clipPath",attributes:{id:b},children:(t=p,"g"===t.tag?t.children:[t])},x]};return n.push(w,{tag:"rect",attributes:Dz({fill:"currentColor","clip-path":"url(#".concat(b,")"),mask:"url(#".concat(y,")")},ZP)}),{children:n,attributes:a}}(k):function(e){var t=e.children,n=e.attributes,a=e.main,r=e.transform,s=KP(e.styles);if(s.length>0&&(n.style=s),XP(r)){var i=YP({transform:r,containerWidth:a.width,iconWidth:a.width});t.push({tag:"g",attributes:Dz({},i.outer),children:[{tag:"g",attributes:Dz({},i.inner),children:[{tag:a.icon.tag,children:a.icon.children,attributes:Dz({},a.icon.attributes,i.path)}]}]})}else t.push(a.icon);return{children:t,attributes:n}}(k),N=I.children,S=I.attributes;return k.children=N,k.attributes=S,o?function(e){var t=e.prefix,n=e.iconName,a=e.children,r=e.attributes,s=e.symbol;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:Dz({},r,{id:!0===s?"".concat(t,"-").concat(hP.familyPrefix,"-").concat(n):s}),children:a}]}]}(k):function(e){var t=e.children,n=e.main,a=e.mask,r=e.attributes,s=e.styles,i=e.transform;if(XP(i)&&n.found&&!a.found){var o={x:n.width/n.height/2,y:.5};r.style=KP(Dz({},s,{"transform-origin":"".concat(o.x+i.x/16,"em ").concat(o.y+i.y/16,"em")}))}return[{tag:"svg",attributes:r,children:t}]}(k)}function eB(e){var t=e.content,n=e.width,a=e.height,r=e.transform,s=e.title,i=e.extra,o=e.watchable,u=void 0!==o&&o,l=Dz({},i.attributes,s?{title:s}:{},{class:i.classes.join(" ")});u&&(l[Yz]="");var c=Dz({},i.styles);XP(r)&&(c.transform=function(e){var t=e.transform,n=e.width,a=void 0===n?16:n,r=e.height,s=void 0===r?16:r,i=e.startCentered,o=void 0!==i&&i,u="";return u+=o&&Kz?"translate(".concat(t.x/WP-a/2,"em, ").concat(t.y/WP-s/2,"em) "):o?"translate(calc(-50% + ".concat(t.x/WP,"em), calc(-50% + ").concat(t.y/WP,"em)) "):"translate(".concat(t.x/WP,"em, ").concat(t.y/WP,"em) "),(u+="scale(".concat(t.size/WP*(t.flipX?-1:1),", ").concat(t.size/WP*(t.flipY?-1:1),") "))+"rotate(".concat(t.rotate,"deg) ")}({transform:r,startCentered:!0,width:n,height:a}),c["-webkit-transform"]=c.transform);var p=KP(c);p.length>0&&(l.style=p);var d=[];return d.push({tag:"span",attributes:l,children:[t]}),s&&d.push({tag:"span",attributes:{class:"sr-only"},children:[s]}),d}var tB=function(){},nB=hP.measurePerformance&&jz&&jz.mark&&jz.measure?jz:{mark:tB,measure:tB},aB='FA "5.15.4"',rB=function(e){return nB.mark("".concat(aB," ").concat(e," begins")),function(){return function(e){nB.mark("".concat(aB," ").concat(e," ends")),nB.measure("".concat(aB," ").concat(e),"".concat(aB," ").concat(e," begins"),"".concat(aB," ").concat(e," ends"))}(e)}},sB=function(e,t,n,a){var r,s,i,o=Object.keys(e),u=o.length,l=void 0!==a?function(e,t){return function(n,a,r,s){return e.call(t,n,a,r,s)}}(t,a):t;for(void 0===n?(r=1,i=e[o[0]]):(r=0,i=n);r<u;r++)i=l(i,e[s=o[r]],s,e);return i};function iB(e){for(var t="",n=0;n<e.length;n++)t+=("000"+e.charCodeAt(n).toString(16)).slice(-4);return t}function oB(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=n.skipHooks,r=void 0!==a&&a,s=Object.keys(t).reduce((function(e,n){var a=t[n];return a.icon?e[a.iconName]=a.icon:e[n]=a,e}),{});"function"!=typeof mP.hooks.addPack||r?mP.styles[e]=Dz({},mP.styles[e]||{},s):mP.hooks.addPack(e,s),"fas"===e&&oB("fa",t)}var uB=mP.styles,lB=mP.shims,cB={},pB={},dB={},hB=function(){var e=function(e){return sB(uB,(function(t,n,a){return t[a]=sB(n,e,{}),t}),{})};cB=e((function(e,t,n){return t[3]&&(e[t[3]]=n),e})),pB=e((function(e,t,n){var a=t[2];return e[n]=n,a.forEach((function(t){e[t]=n})),e}));var t="far"in uB;dB=sB(lB,(function(e,n){var a=n[0],r=n[1],s=n[2];return"far"!==r||t||(r="fas"),e[a]={prefix:r,iconName:s},e}),{})};function fB(e,t){return(cB[e]||{})[t]}hB();var mB=mP.styles;function gB(e){return e.reduce((function(e,t){var n=function(e,t){var n,a=t.split("-"),r=a[0],s=a.slice(1).join("-");return r!==e||""===s||(n=s,~cP.indexOf(n))?null:s}(hP.familyPrefix,t);if(mB[t])e.prefix=t;else if(hP.autoFetchSvg&&Object.keys(tP).indexOf(t)>-1)e.prefix=t;else if(n){var a="fa"===e.prefix?dB[n]||{prefix:null,iconName:null}:{};e.iconName=a.iconName||n,e.prefix=a.prefix||e.prefix}else t!==hP.replacementClass&&0!==t.indexOf("fa-w-")&&e.rest.push(t);return e}),{prefix:null,iconName:null,rest:[]})}function yB(e){var t=e.tag,n=e.attributes,a=void 0===n?{}:n,r=e.children,s=void 0===r?[]:r;return"string"==typeof e?qP(e):"<".concat(t," ").concat(function(e){return Object.keys(e||{}).reduce((function(t,n){return t+"".concat(n,'="').concat(qP(e[n]),'" ')}),"").trim()}(a),">").concat(s.map(yB).join(""),"</").concat(t,">")}var bB=function(){};function xB(e){return"string"==typeof(e.getAttribute?e.getAttribute(Yz):null)}var wB={replace:function(e){var t=e[0],n=e[1].map((function(e){return yB(e)})).join("\n");if(t.parentNode&&t.outerHTML)t.outerHTML=n+(hP.keepOriginalSource&&"svg"!==t.tagName.toLowerCase()?"\x3c!-- ".concat(t.outerHTML," Font Awesome fontawesome.com --\x3e"):"");else if(t.parentNode){var a=document.createElement("span");t.parentNode.replaceChild(a,t),a.outerHTML=n}},nest:function(e){var t=e[0],n=e[1];if(~jP(t).indexOf(hP.replacementClass))return wB.replace(e);var a=new RegExp("".concat(hP.familyPrefix,"-.*"));delete n[0].attributes.style,delete n[0].attributes.id;var r=n[0].attributes.class.split(" ").reduce((function(e,t){return t===hP.replacementClass||t.match(a)?e.toSvg.push(t):e.toNode.push(t),e}),{toNode:[],toSvg:[]});n[0].attributes.class=r.toSvg.join(" ");var s=n.map((function(e){return yB(e)})).join("\n");t.setAttribute("class",r.toNode.join(" ")),t.setAttribute(Yz,""),t.innerHTML=s}};function vB(e){e()}function kB(e,t){var n="function"==typeof t?t:bB;if(0===e.length)n();else{var a=vB;"async"===hP.mutateApproach&&(a=Uz.requestAnimationFrame||vB),a((function(){var t=!0===hP.autoReplaceSvg?wB.replace:wB[hP.autoReplaceSvg]||wB.replace,a=rB("mutate");e.map(t),a(),n()}))}}var IB=!1;function NB(){IB=!1}var SB=null;function TB(e){if(Hz&&hP.observeMutations){var t=e.treeCallback,n=e.nodeCallback,a=e.pseudoElementsCallback,r=e.observeMutationsRoot,s=void 0===r?Gz:r;SB=new Hz((function(e){IB||HP(e).forEach((function(e){if("childList"===e.type&&e.addedNodes.length>0&&!xB(e.addedNodes[0])&&(hP.searchPseudoElements&&a(e.target),t(e.target)),"attributes"===e.type&&e.target.parentNode&&hP.searchPseudoElements&&a(e.target.parentNode),"attributes"===e.type&&xB(e.target)&&~uP.indexOf(e.attributeName))if("class"===e.attributeName){var r=gB(jP(e.target)),s=r.prefix,i=r.iconName;s&&e.target.setAttribute("data-prefix",s),i&&e.target.setAttribute("data-icon",i)}else n(e.target)}))})),qz&&SB.observe(s,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}}function CB(e){var t=function(e){var t,n,a=e.getAttribute("data-prefix"),r=e.getAttribute("data-icon"),s=void 0!==e.innerText?e.innerText.trim():"",i=gB(jP(e));return a&&r&&(i.prefix=a,i.iconName=r),i.prefix&&s.length>1?i.iconName=(t=i.prefix,n=e.innerText,(pB[t]||{})[n]):i.prefix&&1===s.length&&(i.iconName=fB(i.prefix,iB(e.innerText))),i}(e),n=t.iconName,a=t.prefix,r=t.rest,s=function(e){var t=e.getAttribute("style"),n=[];return t&&(n=t.split(";").reduce((function(e,t){var n=t.split(":"),a=n[0],r=n.slice(1);return a&&r.length>0&&(e[a]=r.join(":").trim()),e}),{})),n}(e),i=function(e){return function(e){var t={size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0};return e?e.toLowerCase().split(" ").reduce((function(e,t){var n=t.toLowerCase().split("-"),a=n[0],r=n.slice(1).join("-");if(a&&"h"===r)return e.flipX=!0,e;if(a&&"v"===r)return e.flipY=!0,e;if(r=parseFloat(r),isNaN(r))return e;switch(a){case"grow":e.size=e.size+r;break;case"shrink":e.size=e.size-r;break;case"left":e.x=e.x-r;break;case"right":e.x=e.x+r;break;case"up":e.y=e.y-r;break;case"down":e.y=e.y+r;break;case"rotate":e.rotate=e.rotate+r}return e}),t):t}(e.getAttribute("data-fa-transform"))}(e),o=function(e){var t=e.getAttribute("data-fa-symbol");return null!==t&&(""===t||t)}(e),u=function(e){var t=HP(e.attributes).reduce((function(e,t){return"class"!==e.name&&"style"!==e.name&&(e[t.name]=t.value),e}),{}),n=e.getAttribute("title"),a=e.getAttribute("data-fa-title-id");return hP.autoA11y&&(n?t["aria-labelledby"]="".concat(hP.replacementClass,"-title-").concat(a||GP()):(t["aria-hidden"]="true",t.focusable="false")),t}(e),l=function(e){var t=e.getAttribute("data-fa-mask");return t?gB(t.split(" ").map((function(e){return e.trim()}))):{prefix:null,iconName:null,rest:[]}}(e);return{iconName:n,title:e.getAttribute("title"),titleId:e.getAttribute("data-fa-title-id"),prefix:a,transform:i,symbol:o,mask:l,maskId:e.getAttribute("data-fa-mask-id"),extra:{classes:r,styles:s,attributes:u}}}function $B(e){this.name="MissingIcon",this.message=e||"Icon unavailable",this.stack=(new Error).stack}$B.prototype=Object.create(Error.prototype),$B.prototype.constructor=$B;var EB={fill:"currentColor"},AB={attributeType:"XML",repeatCount:"indefinite",dur:"2s"},_B={tag:"path",attributes:Dz({},EB,{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})},RB=Dz({},AB,{attributeName:"opacity"}),FB={tag:"g",children:[_B,{tag:"circle",attributes:Dz({},EB,{cx:"256",cy:"364",r:"28"}),children:[{tag:"animate",attributes:Dz({},AB,{attributeName:"r",values:"28;14;28;28;14;28;"})},{tag:"animate",attributes:Dz({},RB,{values:"1;0;1;1;0;1;"})}]},{tag:"path",attributes:Dz({},EB,{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),children:[{tag:"animate",attributes:Dz({},RB,{values:"1;0;0;0;0;1;"})}]},{tag:"path",attributes:Dz({},EB,{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),children:[{tag:"animate",attributes:Dz({},RB,{values:"0;0;1;1;0;0;"})}]}]},DB=mP.styles;function OB(e){var t=e[0],n=e[1],a=Oz(e.slice(4),1)[0];return{found:!0,width:t,height:n,icon:Array.isArray(a)?{tag:"g",attributes:{class:"".concat(hP.familyPrefix,"-").concat(lP.GROUP)},children:[{tag:"path",attributes:{class:"".concat(hP.familyPrefix,"-").concat(lP.SECONDARY),fill:"currentColor",d:a[0]}},{tag:"path",attributes:{class:"".concat(hP.familyPrefix,"-").concat(lP.PRIMARY),fill:"currentColor",d:a[1]}}]}:{tag:"path",attributes:{fill:"currentColor",d:a}}}}function MB(e,t){return new BP((function(n,a){var r={found:!1,width:512,height:512,icon:FB};if(e&&t&&DB[t]&&DB[t][e])return n(OB(DB[t][e]));e&&t&&!hP.showMissingIcons?a(new $B("Icon is missing for prefix ".concat(t," with icon name ").concat(e))):n(r)}))}var LB=mP.styles;function zB(e){var t=CB(e);return~t.extra.classes.indexOf(aP)?function(e,t){var n=t.title,a=t.transform,r=t.extra,s=null,i=null;if(Kz){var o=parseInt(getComputedStyle(e).fontSize,10),u=e.getBoundingClientRect();s=u.width/o,i=u.height/o}return hP.autoA11y&&!n&&(r.attributes["aria-hidden"]="true"),BP.resolve([e,eB({content:e.innerHTML,width:s,height:i,transform:a,title:n,extra:r,watchable:!0})])}(e,t):function(e,t){var n=t.iconName,a=t.title,r=t.titleId,s=t.prefix,i=t.transform,o=t.symbol,u=t.mask,l=t.maskId,c=t.extra;return new BP((function(t,p){BP.all([MB(n,s),MB(u.iconName,u.prefix)]).then((function(u){var p=Oz(u,2),d=p[0],h=p[1];t([e,QP({icons:{main:d,mask:h},prefix:s,iconName:n,transform:i,symbol:o,mask:h,maskId:l,title:a,titleId:r,extra:c,watchable:!0})])}))}))}(e,t)}function PB(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(qz){var n=Gz.documentElement.classList,a=function(e){return n.add("".concat(Jz,"-").concat(e))},r=function(e){return n.remove("".concat(Jz,"-").concat(e))},s=hP.autoFetchSvg?Object.keys(tP):Object.keys(LB),i=[".".concat(aP,":not([").concat(Yz,"])")].concat(s.map((function(e){return".".concat(e,":not([").concat(Yz,"])")}))).join(", ");if(0!==i.length){var o=[];try{o=HP(e.querySelectorAll(i))}catch(e){}if(o.length>0){a("pending"),r("complete");var u=rB("onTree"),l=o.reduce((function(e,t){try{var n=zB(t);n&&e.push(n)}catch(e){eP||e instanceof $B&&console.error(e)}return e}),[]);return new BP((function(e,n){BP.all(l).then((function(n){kB(n,(function(){a("active"),a("complete"),r("pending"),"function"==typeof t&&t(),u(),e()}))})).catch((function(){u(),n()}))}))}}}}function BB(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;zB(e).then((function(e){e&&kB([e],t)}))}function WB(e,t){var n="".concat("data-fa-pseudo-element-pending").concat(t.replace(":","-"));return new BP((function(a,r){if(null!==e.getAttribute(n))return a();var s=HP(e.children).filter((function(e){return e.getAttribute(Zz)===t}))[0],i=Uz.getComputedStyle(e,t),o=i.getPropertyValue("font-family").match(rP),u=i.getPropertyValue("font-weight"),l=i.getPropertyValue("content");if(s&&!o)return e.removeChild(s),a();if(o&&"none"!==l&&""!==l){var c=i.getPropertyValue("content"),p=~["Solid","Regular","Light","Duotone","Brands","Kit"].indexOf(o[2])?nP[o[2].toLowerCase()]:sP[u],d=iB(3===c.length?c.substr(1,1):c),h=fB(p,d),f=h;if(!h||s&&s.getAttribute("data-prefix")===p&&s.getAttribute("data-icon")===f)a();else{e.setAttribute(n,f),s&&e.removeChild(s);var m={iconName:null,title:null,titleId:null,prefix:null,transform:VP,symbol:!1,mask:null,maskId:null,extra:{classes:[],styles:{},attributes:{}}},g=m.extra;g.attributes[Zz]=t,MB(h,p).then((function(r){var s=QP(Dz({},m,{icons:{main:r,mask:{prefix:null,iconName:null,rest:[]}},prefix:p,iconName:f,extra:g,watchable:!0})),i=Gz.createElement("svg");":before"===t?e.insertBefore(i,e.firstChild):e.appendChild(i),i.outerHTML=s.map((function(e){return yB(e)})).join("\n"),e.removeAttribute(n),a()})).catch(r)}}else a()}))}function VB(e){return BP.all([WB(e,":before"),WB(e,":after")])}function UB(e){return!(e.parentNode===document.head||~Qz.indexOf(e.tagName.toUpperCase())||e.getAttribute(Zz)||e.parentNode&&"svg"===e.parentNode.tagName)}function GB(e){if(qz)return new BP((function(t,n){var a=HP(e.querySelectorAll("*")).filter(UB).map(VB),r=rB("searchPseudoElements");IB=!0,BP.all(a).then((function(){r(),NB(),t()})).catch((function(){r(),NB(),n()}))}))}function HB(){var e="fa",t=Xz,n=hP.familyPrefix,a=hP.replacementClass,r='svg:not(:root).svg-inline--fa {\n  overflow: visible;\n}\n\n.svg-inline--fa {\n  display: inline-block;\n  font-size: inherit;\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.225em;\n}\n.svg-inline--fa.fa-w-1 {\n  width: 0.0625em;\n}\n.svg-inline--fa.fa-w-2 {\n  width: 0.125em;\n}\n.svg-inline--fa.fa-w-3 {\n  width: 0.1875em;\n}\n.svg-inline--fa.fa-w-4 {\n  width: 0.25em;\n}\n.svg-inline--fa.fa-w-5 {\n  width: 0.3125em;\n}\n.svg-inline--fa.fa-w-6 {\n  width: 0.375em;\n}\n.svg-inline--fa.fa-w-7 {\n  width: 0.4375em;\n}\n.svg-inline--fa.fa-w-8 {\n  width: 0.5em;\n}\n.svg-inline--fa.fa-w-9 {\n  width: 0.5625em;\n}\n.svg-inline--fa.fa-w-10 {\n  width: 0.625em;\n}\n.svg-inline--fa.fa-w-11 {\n  width: 0.6875em;\n}\n.svg-inline--fa.fa-w-12 {\n  width: 0.75em;\n}\n.svg-inline--fa.fa-w-13 {\n  width: 0.8125em;\n}\n.svg-inline--fa.fa-w-14 {\n  width: 0.875em;\n}\n.svg-inline--fa.fa-w-15 {\n  width: 0.9375em;\n}\n.svg-inline--fa.fa-w-16 {\n  width: 1em;\n}\n.svg-inline--fa.fa-w-17 {\n  width: 1.0625em;\n}\n.svg-inline--fa.fa-w-18 {\n  width: 1.125em;\n}\n.svg-inline--fa.fa-w-19 {\n  width: 1.1875em;\n}\n.svg-inline--fa.fa-w-20 {\n  width: 1.25em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-border {\n  height: 1.5em;\n}\n.svg-inline--fa.fa-li {\n  width: 2em;\n}\n.svg-inline--fa.fa-fw {\n  width: 1.25em;\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: #ff253a;\n  border-radius: 1em;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  color: #fff;\n  height: 1.5em;\n  line-height: 1;\n  max-width: 5em;\n  min-width: 1.5em;\n  overflow: hidden;\n  padding: 0.25em;\n  right: 0;\n  text-overflow: ellipsis;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: 0;\n  right: 0;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: 0;\n  left: 0;\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  right: 0;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: 0;\n  right: auto;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-lg {\n  font-size: 1.3333333333em;\n  line-height: 0.75em;\n  vertical-align: -0.0667em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: 2.5em;\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: -2em;\n  position: absolute;\n  text-align: center;\n  width: 2em;\n  line-height: inherit;\n}\n\n.fa-border {\n  border: solid 0.08em #eee;\n  border-radius: 0.1em;\n  padding: 0.2em 0.25em 0.15em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left {\n  margin-right: 0.3em;\n}\n.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right {\n  margin-left: 0.3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n          animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n          animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both {\n  -webkit-filter: none;\n          filter: none;\n}\n\n.fa-stack {\n  display: inline-block;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse {\n  color: #fff;\n}';if(n!==e||a!==t){var s=new RegExp("\\.".concat(e,"\\-"),"g"),i=new RegExp("\\--".concat(e,"\\-"),"g"),o=new RegExp("\\.".concat(t),"g");r=r.replace(s,".".concat(n,"-")).replace(i,"--".concat(n,"-")).replace(o,".".concat(a))}return r}function jB(){hP.autoAddCss&&!XB&&(UP(HB()),XB=!0)}function qB(e,t){return Object.defineProperty(e,"abstract",{get:t}),Object.defineProperty(e,"html",{get:function(){return e.abstract.map((function(e){return yB(e)}))}}),Object.defineProperty(e,"node",{get:function(){if(qz){var t=Gz.createElement("div");return t.innerHTML=e.html,t.children}}}),e}var KB=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.definitions={}}var t,n;return t=e,n=[{key:"add",value:function(){for(var e=this,t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];var r=n.reduce(this._pullDefinitions,{});Object.keys(r).forEach((function(t){e.definitions[t]=Dz({},e.definitions[t]||{},r[t]),oB(t,r[t]),hB()}))}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(e,t){var n=t.prefix&&t.iconName&&t.icon?{0:t}:t;return Object.keys(n).map((function(t){var a=n[t],r=a.prefix,s=a.iconName,i=a.icon;e[r]||(e[r]={}),e[r][s]=i})),e}}],n&&Rz(t.prototype,n),e}()),XB=!1,YB={i2svg:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(qz){jB();var t=e.node,n=void 0===t?Gz:t,a=e.callback,r=void 0===a?function(){}:a;return hP.searchPseudoElements&&GB(n),PB(n,r)}return BP.reject("Operation requires a DOM of some kind.")},css:HB,insertCss:function(){XB||(UP(HB()),XB=!0)},watch:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.autoReplaceSvgRoot,n=e.observeMutationsRoot;!1===hP.autoReplaceSvg&&(hP.autoReplaceSvg=!0),hP.observeMutations=!0,bP((function(){JB({autoReplaceSvgRoot:t}),TB({treeCallback:PB,nodeCallback:BB,pseudoElementsCallback:GB,observeMutationsRoot:n})}))}},ZB=(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.transform,a=void 0===n?VP:n,r=t.symbol,s=void 0!==r&&r,i=t.mask,o=void 0===i?null:i,u=t.maskId,l=void 0===u?null:u,c=t.title,p=void 0===c?null:c,d=t.titleId,h=void 0===d?null:d,f=t.classes,m=void 0===f?[]:f,g=t.attributes,y=void 0===g?{}:g,b=t.styles,x=void 0===b?{}:b;if(e){var w=e.prefix,v=e.iconName,k=e.icon;return qB(Dz({type:"icon"},e),(function(){return jB(),hP.autoA11y&&(p?y["aria-labelledby"]="".concat(hP.replacementClass,"-title-").concat(h||GP()):(y["aria-hidden"]="true",y.focusable="false")),QP({icons:{main:OB(k),mask:o?OB(o.icon):{found:!1,width:null,height:null,icon:{}}},prefix:w,iconName:v,transform:Dz({},VP,a),symbol:s,title:p,maskId:l,titleId:h,extra:{attributes:y,styles:x,classes:m}})}))}},YB),JB=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.autoReplaceSvgRoot,n=void 0===t?Gz:t;(Object.keys(mP.styles).length>0||hP.autoFetchSvg)&&qz&&hP.autoReplaceSvg&&ZB.i2svg({node:n})};!function(e,t=!1){if(Cz)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)Sz=e;else{Tz=e;const t=Iz.filter((e=>null==Tz[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}$z=t}("./assets/tfjs-backend-wasm.wasm"),KB.add({prefix:"fab",iconName:"twitter-square",icon:[448,512,[],"f081","M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-48.9 158.8c.2 2.8.2 5.7.2 8.5 0 86.7-66 186.6-186.6 186.6-37.2 0-71.7-10.8-100.7-29.4 5.3.6 10.4.8 15.8.8 30.7 0 58.9-10.4 81.4-28-28.8-.6-53-19.5-61.3-45.5 10.1 1.5 19.2 1.5 29.6-1.2-30-6.1-52.5-32.5-52.5-64.4v-.8c8.7 4.9 18.9 7.9 29.6 8.3a65.447 65.447 0 0 1-29.2-54.6c0-12.2 3.2-23.4 8.9-33.1 32.3 39.8 80.8 65.8 135.2 68.6-9.3-44.5 24-80.6 64-80.6 18.9 0 35.9 7.9 47.9 20.7 14.8-2.8 29-8.3 41.6-15.8-4.9 15.2-15.2 28-28.8 36.1 13.2-1.4 26-5.1 37.8-10.2-8.9 13.1-20.1 24.7-32.9 34z"]},{prefix:"fab",iconName:"github",icon:[496,512,[],"f09b","M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"]},{prefix:"fas",iconName:"coffee",icon:[640,512,[],"f0f4","M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z"]},{prefix:"fas",iconName:"user-circle",icon:[496,512,[],"f2bd","M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z"]}),YB.watch();const QB=/Mobi/.test(navigator.userAgent);/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let eW,tW,nW,aW,rW=[],sW=[];for(let e=0;e<=32;e++)sW.push(`./assets/frames/frame_${e}.jpg`);const iW=document.querySelector("#deepFakeImage");let oW;const uW=async()=>{lW();const e=await eW.estimateFaces(aW,!1,!0,!0);if(e.length>0){const t=e[0].landmarks;t[0][0],t[1][0],function(e,t){e&&t?oW=(e+t)/2:e<0?oW=t:t>aW.width&&(oW=e);let n=Math.floor((0,(oW-0)*(32-0)/(aW.width-0)+0));n=Math.min(Math.max(n,0),32),isNaN(n)||(document.createElement("IMG"),document.createElement("id"),iW.src="./assets/frames/frame_"+n+".jpg")}(t[0][0],t[1][0])}setTimeout((function(){requestAnimationFrame(uW)}),40)},lW=async()=>{const e=document.querySelector("#monaLisaWithFrame");e.style.height=QB?document.documentElement.clientHeight-600+"px":window.innerHeight+"px",document.querySelector("#paintingItems");const t=document.querySelector("#deepFakeImage");t.style.height=.33603092783*e.offsetHeight+"px",t.style.marginTop=.11002474226*e.clientHeight+"px",t.style.marginLeft=.30577839955*e.width+"px"};window.addEventListener("resize",lW),function(e){for(var t=0;t<e.length;t++)rW[t]=new Image,rW[t].src=e[t]}(sW),(async()=>{lW(),await("wasm",Br.setBackend("wasm")),await async function(){aW=document.getElementById("cam");const e=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}});return aW.srcObject=e,new Promise((e=>{aW.onloadedmetadata=()=>{e(aW)}}))}(),tW=aW.videoWidth,nW=aW.videoHeight,aW.width=tW,aW.height=nW,aW.style.cssText="-moz-transform: scale(-1, 1);     -webkit-transform: scale(-1, 1); -o-transform: scale(-1, 1);     transform: scale(-1, 1); filter: FlipH;",aW.setAttribute("autoplay",""),aW.setAttribute("muted",""),aW.setAttribute("playsinline",""),aW.play();const e=document.querySelector("#cam");e.style.width=.2*monaLisaWithFrame.width+"px",e.style.height="100px",eW=await function(e){var t={},n=t.maxFaces,a=void 0===n?10:n,r=t.inputWidth,s=void 0===r?128:r,i=t.inputHeight,o=void 0===i?128:i,u=t.iouThreshold,l=void 0===u?.3:u,c=t.scoreThreshold,p=void 0===c?.75:c,d=t.modelUrl;return sh(this,void 0,void 0,(function(){var e;return ih(this,(function(t){switch(t.label){case 0:return null==d?[3,2]:[4,rh(d)];case 1:return e=t.sent(),[3,4];case 2:return[4,rh("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 3:e=t.sent(),t.label=4;case 4:return[2,new ph(e,s,o,a,l,p)]}}))}))}(),uW()})()})()})();